!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A	jedi/test/completion/basic.py	/^class A():$/;"	c
A	jedi/test/completion/basic.py	/^class A(object): pass$/;"	c
A	jedi/test/completion/classes.py	/^class A():$/;"	c
A	jedi/test/completion/classes.py	/^class A(object):$/;"	c
A	jedi/test/completion/decorators.py	/^class A():$/;"	c
A	jedi/test/completion/dynamic_params.py	/^class A():$/;"	c
A	jedi/test/completion/flow_analysis.py	/^class A(): pass$/;"	c
A	jedi/test/completion/goto.py	/^    class A():$/;"	c	function:func
A	jedi/test/completion/ordering.py	/^class A(object):$/;"	c
A	jedi/test/completion/pep0484.py	/^class A():$/;"	c
A	jedi/test/completion/stdlib.py	/^class A(object):$/;"	c
A	jedi/test/static_analysis/star_arguments.py	/^class A(): pass$/;"	c
ABOVE_NORMAL_PRIORITY_CLASS	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^ABOVE_NORMAL_PRIORITY_CLASS = 0x00008000$/;"	v
ALLSPHINXOPTS	jedi/docs/Makefile	/^ALLSPHINXOPTS   = -d $(BUILDDIR)\/doctrees $(PAPEROPT_$(PAPER)) $(SPHINXOPTS) .$/;"	m
ALWAYS_BREAK_TOKENS	jedi/jedi/parser/tokenize.py	/^ALWAYS_BREAK_TOKENS = (';', 'import', 'class', 'def', 'try', 'except',$/;"	v
AST_MAPPING	jedi/jedi/parser/__init__.py	/^    AST_MAPPING = {$/;"	v	class:Parser
ATEQUAL	jedi/jedi/parser/token.py	/^    ATEQUAL = N_TOKENS$/;"	v
ATTR_ENABLE_REGEX	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^ATTR_ENABLE_REGEX = re.compile('(enabled' + GET_ATTR_STR + ')', re.I)$/;"	v
ATTR_FILE_REGEX	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^ATTR_FILE_REGEX = re.compile('(fullname' + GET_ATTR_STR + ')', re.I)$/;"	v
ATTR_LINE_REGEX	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^ATTR_LINE_REGEX = re.compile('(line' + GET_ATTR_STR + ')', re.I)$/;"	v
ATTR_NUM_REGEX	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^ATTR_NUM_REGEX = re.compile('(number' + GET_ATTR_STR + ')', re.I)$/;"	v
ATTR_TYPE_REGEX	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^ATTR_TYPE_REGEX = re.compile('(type' + GET_ATTR_STR + ')', re.I)$/;"	v
Abc	jedi/test/completion/usages.py	/^    def Abc(self):$/;"	m	class:Abc
Abc	jedi/test/completion/usages.py	/^Abc = 3$/;"	v
Abc	jedi/test/completion/usages.py	/^class Abc():$/;"	c
AbstractSet	jedi/jedi/evaluate/jedi_typing.py	/^    class AbstractSet(Iterable, abc.Set):$/;"	c	function:factory
AcceptSelection	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:AcceptSelection(action)$/;"	f
AirlineRefresh	vim-airline/plugin/airline.vim	/^command! -bar AirlineRefresh call s:airline_refresh()$/;"	c
AirlineTheme	vim-airline/plugin/airline.vim	/^command! -bar -nargs=? -complete=customlist,<sid>get_airline_themes AirlineTheme call <sid>airline_theme(<f-args>)$/;"	c
AirlineToggle	vim-airline/plugin/airline.vim	/^command! -bar AirlineToggle call s:airline_toggle()$/;"	c
AirlineToggleWhitespace	vim-airline/plugin/airline.vim	/^command! -bar AirlineToggleWhitespace call airline#extensions#whitespace#toggle()$/;"	c
AlreadyEvaluated	jedi/jedi/evaluate/docstrings.py	/^from jedi.evaluate.iterable import Array, FakeSequence, AlreadyEvaluated$/;"	i
AlreadyEvaluated	jedi/jedi/evaluate/iterable.py	/^class AlreadyEvaluated(frozenset):$/;"	c
AlreadyEvaluated	jedi/jedi/evaluate/param.py	/^                from jedi.evaluate.iterable import AlreadyEvaluated$/;"	i
Angry	jedi/test/completion/classes.py	/^class Angry(object):$/;"	c
Arguments	jedi/jedi/evaluate/analysis.py	/^            from jedi.evaluate.param import Arguments$/;"	i
Arguments	jedi/jedi/evaluate/finder.py	/^    from jedi.evaluate.param import ExecutedParam, Arguments$/;"	i
Arguments	jedi/jedi/evaluate/param.py	/^class Arguments(tree.Base):$/;"	c
Array	jedi/jedi/evaluate/docstrings.py	/^from jedi.evaluate.iterable import Array, FakeSequence, AlreadyEvaluated$/;"	i
Array	jedi/jedi/evaluate/iterable.py	/^class Array(IterableWrapper, ArrayMixin):$/;"	c
ArrayMixin	jedi/jedi/evaluate/iterable.py	/^class ArrayMixin(object):$/;"	c
AssertStmt	jedi/jedi/parser/tree.py	/^class AssertStmt(KeywordStatement):$/;"	c
Assertions	jedi/test/test_evaluate/absolute_import/local_module.py	/^class Assertions(unittest.TestCase):$/;"	c
Assertions	jedi/test/test_evaluate/absolute_import/unittest.py	/^from local_module import Assertions$/;"	i
B	jedi/test/completion/basic.py	/^class B(): pass$/;"	c
B	jedi/test/completion/classes.py	/^        class B():$/;"	c	function:A.b
B	jedi/test/completion/classes.py	/^    class B():$/;"	c	class:A
B	jedi/test/completion/classes.py	/^class B():$/;"	c
B	jedi/test/completion/classes.py	/^class B(A()):$/;"	c
B	jedi/test/completion/descriptors.py	/^class B():$/;"	c
B	jedi/test/completion/pep0484.py	/^class B:$/;"	c
B	jedi/test/completion/pep0484_typing.py	/^class B:$/;"	c
B	jedi/test/completion/stdlib.py	/^class B(object):$/;"	c
BACKQUOTE	jedi/jedi/parser/token.py	/^    BACKQUOTE = N_TOKENS$/;"	v
BB	jedi/test/completion/pep0484_comments.py	/^class BB: pass$/;"	c
BELOW_NORMAL_PRIORITY_CLASS	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^BELOW_NORMAL_PRIORITY_CLASS = 0x00004000$/;"	v
BUILDDIR	jedi/docs/Makefile	/^BUILDDIR      = _build$/;"	m
Bar	jedi/test/test_evaluate/flask-site-packages/flaskext/bar.py	/^class Bar(object):$/;"	c
Base	jedi/jedi/evaluate/compiled/__init__.py	/^from jedi.parser.tree import Param, Base, Operator, zero_position_modifier$/;"	i
Base	jedi/jedi/parser/tree.py	/^class Base(object):$/;"	c
Base	jedi/test/completion/classes.py	/^class Base():$/;"	c
Base	jedi/test/completion/classes.py	/^class Base(object):$/;"	c
Base	jedi/test/completion/classes.py	/^class Base(str):$/;"	c
Base	jedi/test/completion/context.py	/^class Base():$/;"	c
Base	jedi/test/completion/decorators.py	/^class Base():$/;"	c
Base	jedi/test/static_analysis/class_simple.py	/^class Base(object):$/;"	c
BaseDefinition	jedi/jedi/api/classes.py	/^class BaseDefinition(object):$/;"	c
BaseNode	jedi/jedi/parser/tree.py	/^class BaseNode(Base):$/;"	c
Baz	jedi/test/test_evaluate/flask-site-packages/flask_baz/__init__.py	/^Baz = 1$/;"	v
Bookmark.AddBookmark	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.AddBookmark(name, path)$/;"	f
Bookmark.BookmarkExistsFor	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkExistsFor(name)$/;"	f
Bookmark.BookmarkFor	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkFor(name)$/;"	f
Bookmark.BookmarkNames	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkNames()$/;"	f
Bookmark.Bookmarks	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Bookmarks()$/;"	f
Bookmark.CacheBookmarks	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CacheBookmarks(silent)$/;"	f
Bookmark.ClearAll	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ClearAll()$/;"	f
Bookmark.GetNodeForName	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetNodeForName(name, searchFromAbsoluteRoot, nerdtree)$/;"	f
Bookmark.GetSelected	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetSelected()$/;"	f
Bookmark.InvalidBookmarks	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.InvalidBookmarks()$/;"	f
Bookmark.New	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.New(name, path)$/;"	f
Bookmark.Sort	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Sort()$/;"	f
Bookmark.ToRoot	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ToRoot(name, nerdtree)$/;"	f
Bookmark.Write	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Write()$/;"	f
Bookmark.activate	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.activate(nerdtree, ...)$/;"	f
Bookmark.compareTo	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.compareTo(otherbookmark)$/;"	f
Bookmark.delete	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.delete()$/;"	f
Bookmark.getNode	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.getNode(nerdtree, searchFromAbsoluteRoot)$/;"	f
Bookmark.mustExist	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.mustExist()$/;"	f
Bookmark.open	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.open(nerdtree, ...)$/;"	f
Bookmark.openInNewTab	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.openInNewTab(options)$/;"	f
Bookmark.setPath	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.setPath(path)$/;"	f
Bookmark.str	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.str()$/;"	f
Bookmark.toRoot	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.toRoot(nerdtree)$/;"	f
Bookmark.validate	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.validate()$/;"	f
BrokenPartsOfClass	jedi/test/completion/invalid.py	/^class BrokenPartsOfClass():$/;"	c
BuildPrompt	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:BuildPrompt(upd)$/;"	f
BuiltinMethod	jedi/jedi/evaluate/iterable.py	/^class BuiltinMethod(IterableWrapper):$/;"	c
C	jedi/test/completion/arrays.py	/^class C():$/;"	c
C	jedi/test/completion/descriptors.py	/^class C(object):$/;"	c
C	jedi/test/completion/dynamic_arrays.py	/^class C(): pass$/;"	c
C	jedi/test/completion/dynamic_arrays.py	/^class C():$/;"	c
C	jedi/test/completion/goto.py	/^class C(object):$/;"	c
C	jedi/test/completion/import_tree/recurse_class1.py	/^class C(recurse_class2.C):$/;"	c
C	jedi/test/completion/import_tree/recurse_class2.py	/^class C(recurse_class1.C):$/;"	c
C	jedi/test/completion/lambdas.py	/^class C():$/;"	c
CAPSLOCK_ON	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^CAPSLOCK_ON = 0x0080$/;"	v
CHAR_INFO	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^class CHAR_INFO(Structure):$/;"	c
CHAR_UNION	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^class CHAR_UNION(Union):$/;"	c
CODES	jedi/jedi/evaluate/analysis.py	/^CODES = {$/;"	v
COMMENT	jedi/jedi/parser/token.py	/^COMMENT = N_TOKENS$/;"	v
COMMENT	jedi/jedi/parser/tokenize.py	/^COMMENT = N_TOKENS$/;"	v
COMPARISON_OPERATORS	jedi/jedi/evaluate/precedence.py	/^COMPARISON_OPERATORS = {$/;"	v
CONQUE_COLOR_SEQUENCE	Conque-GDB/autoload/conque_term/conque_globals.py	/^CONQUE_COLOR_SEQUENCE = ($/;"	v
CONQUE_CTL	Conque-GDB/autoload/conque_term/conque_globals.py	/^CONQUE_CTL = {$/;"	v
CONQUE_ESCAPE	Conque-GDB/autoload/conque_term/conque_globals.py	/^CONQUE_ESCAPE = {$/;"	v
CONQUE_ESCAPE_CHARSET	Conque-GDB/autoload/conque_term/conque_globals.py	/^CONQUE_ESCAPE_CHARSET = {$/;"	v
CONQUE_ESCAPE_HASH	Conque-GDB/autoload/conque_term/conque_globals.py	/^CONQUE_ESCAPE_HASH = {$/;"	v
CONQUE_ESCAPE_PLAIN	Conque-GDB/autoload/conque_term/conque_globals.py	/^CONQUE_ESCAPE_PLAIN = {$/;"	v
CONQUE_ESCAPE_QUESTION	Conque-GDB/autoload/conque_term/conque_globals.py	/^CONQUE_ESCAPE_QUESTION = {$/;"	v
CONQUE_FONT	Conque-GDB/autoload/conque_term/conque_globals.py	/^CONQUE_FONT = {$/;"	v
CONQUE_GRAPHICS_SET	Conque-GDB/autoload/conque_term/conque_globals.py	/^CONQUE_GRAPHICS_SET = [$/;"	v
CONQUE_MAX_SYNTAX_LINES	Conque-GDB/autoload/conque_term/conque_globals.py	/^CONQUE_MAX_SYNTAX_LINES = 200$/;"	v
CONQUE_PYTHON_VERSION	Conque-GDB/autoload/conque_term/conque_globals.py	/^CONQUE_PYTHON_VERSION = sys.version_info[0]$/;"	v
CONQUE_PYTHON_VERSION	Conque-GDB/autoload/conque_term/conque_sole_shared_memory.py	/^CONQUE_PYTHON_VERSION = sys.version_info[0]$/;"	v
CONQUE_SEQ_REGEX	Conque-GDB/autoload/conque_term/conque_globals.py	/^CONQUE_SEQ_REGEX = re.compile("(\\x1b\\[?\\??#?[0-9;]*[a-zA-Z0-9@=>]|\\x1b\\][0-9];.*?\\x07|[\\x01-\\x0f]|\\x1b\\([AB0])")$/;"	v
CONQUE_SEQ_REGEX_CHAR	Conque-GDB/autoload/conque_term/conque_globals.py	/^CONQUE_SEQ_REGEX_CHAR = re.compile("^\\x1b[()]")$/;"	v
CONQUE_SEQ_REGEX_CSI	Conque-GDB/autoload/conque_term/conque_globals.py	/^CONQUE_SEQ_REGEX_CSI = re.compile("^\\x1b\\[")$/;"	v
CONQUE_SEQ_REGEX_CTL	Conque-GDB/autoload/conque_term/conque_globals.py	/^CONQUE_SEQ_REGEX_CTL = re.compile("^[\\x01-\\x0f]$")$/;"	v
CONQUE_SEQ_REGEX_ESC	Conque-GDB/autoload/conque_term/conque_globals.py	/^CONQUE_SEQ_REGEX_ESC = re.compile("^\\x1b.$")$/;"	v
CONQUE_SEQ_REGEX_HASH	Conque-GDB/autoload/conque_term/conque_globals.py	/^CONQUE_SEQ_REGEX_HASH = re.compile("^\\x1b#")$/;"	v
CONQUE_SEQ_REGEX_TITLE	Conque-GDB/autoload/conque_term/conque_globals.py	/^CONQUE_SEQ_REGEX_TITLE = re.compile("^\\x1b\\]")$/;"	v
CONQUE_SOLE_BUFFER_LENGTH	Conque-GDB/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_BUFFER_LENGTH = 1000$/;"	v
CONQUE_SOLE_BUFFER_REDRAW	Conque-GDB/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_BUFFER_REDRAW = 500$/;"	v
CONQUE_SOLE_COMMANDS_SIZE	Conque-GDB/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_COMMANDS_SIZE = 255$/;"	v
CONQUE_SOLE_INPUT_SIZE	Conque-GDB/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_INPUT_SIZE = 1000$/;"	v
CONQUE_SOLE_MEM_REDRAW	Conque-GDB/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_MEM_REDRAW = 1000$/;"	v
CONQUE_SOLE_RESCROLL_SIZE	Conque-GDB/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_RESCROLL_SIZE = 255$/;"	v
CONQUE_SOLE_RESIZE_SIZE	Conque-GDB/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_RESIZE_SIZE = 255$/;"	v
CONQUE_SOLE_SCREEN_REDRAW	Conque-GDB/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_SCREEN_REDRAW = 50$/;"	v
CONQUE_SOLE_STATS_SIZE	Conque-GDB/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_STATS_SIZE = 1000$/;"	v
CONQUE_TABLE_OUTPUT	Conque-GDB/autoload/conque_term/conque_globals.py	/^CONQUE_TABLE_OUTPUT = re.compile("^\\s*\\|\\s.*\\s\\|\\s*$|^\\s*\\+[=+-]+\\+\\s*$")$/;"	v
CONQUE_VIM_ENCODING	Conque-GDB/autoload/conque_term/conque_globals.py	/^    CONQUE_VIM_ENCODING = 'utf-8'$/;"	v
CONQUE_VIM_ENCODING	Conque-GDB/autoload/conque_term/conque_globals.py	/^    CONQUE_VIM_ENCODING = vim.eval('&encoding')$/;"	v
CONQUE_VK_ATTR_CTRL_PRESSED	Conque-GDB/autoload/conque_term/conque_globals.py	/^CONQUE_VK_ATTR_CTRL_PRESSED = u('1024')$/;"	v
CONQUE_WIN32_REGEX_ATTR	Conque-GDB/autoload/conque_term/conque_globals.py	/^CONQUE_WIN32_REGEX_ATTR = re.compile("((.)\\\\2*)", re.DOTALL)$/;"	v
CONQUE_WIN32_REGEX_VK	Conque-GDB/autoload/conque_term/conque_globals.py	/^CONQUE_WIN32_REGEX_VK = re.compile("(\\x1b\\[[0-9;]+VK)")$/;"	v
CONQUE_WINDOWS_VK	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^CONQUE_WINDOWS_VK = {$/;"	v
CONQUE_WINDOWS_VK_ENHANCED	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^CONQUE_WINDOWS_VK_ENHANCED = {$/;"	v
CONQUE_WINDOWS_VK_INV	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^CONQUE_WINDOWS_VK_INV = dict([v, k] for k, v in CONQUE_WINDOWS_VK.items())$/;"	v
CONSOLE_SCREEN_BUFFER_INFO	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^class CONSOLE_SCREEN_BUFFER_INFO(Structure):$/;"	c
CONST	jedi/test/test_evaluate/nested_namespaces/namespace/pkg/__init__.py	/^CONST = 1$/;"	v
COORD	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^class COORD(Structure):$/;"	c
CREATE_BREAKAWAY_FROM_JOB	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^CREATE_BREAKAWAY_FROM_JOB = 0x01000000$/;"	v
CREATE_DEFAULT_ERROR_MODE	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^CREATE_DEFAULT_ERROR_MODE = 0x04000000$/;"	v
CREATE_NEW_CONSOLE	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^CREATE_NEW_CONSOLE = 0x00000010$/;"	v
CREATE_NEW_PROCESS_GROUP	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^CREATE_NEW_PROCESS_GROUP = 0x00000200$/;"	v
CREATE_NO_WINDOW	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^CREATE_NO_WINDOW = 0x08000000$/;"	v
CREATE_PRESERVE_CODE_AUTHZ_LEVEL	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^CREATE_PRESERVE_CODE_AUTHZ_LEVEL = 0x02000000$/;"	v
CREATE_PROTECTED_PROCESS	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^CREATE_PROTECTED_PROCESS = 0x00040000$/;"	v
CREATE_SEPARATE_WOW_VDM	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^CREATE_SEPARATE_WOW_VDM = 0x00000800$/;"	v
CREATE_SHARED_WOW_VDM	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^CREATE_SHARED_WOW_VDM = 0x00001000$/;"	v
CREATE_SUSPENDED	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^CREATE_SUSPENDED = 0x00000004$/;"	v
CREATE_UNICODE_ENVIRONMENT	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^CREATE_UNICODE_ENVIRONMENT = 0x00000400$/;"	v
CUR_DIR	jedi/test/test_evaluate/test_sys_path.py	/^CUR_DIR = os.path.dirname(__file__)$/;"	v
CachedFastParser	jedi/jedi/parser/fast.py	/^class CachedFastParser(type):$/;"	c
CachedMetaClass	jedi/jedi/api/classes.py	/^from jedi.evaluate.cache import memoize_default, CachedMetaClass$/;"	i
CachedMetaClass	jedi/jedi/evaluate/cache.py	/^class CachedMetaClass(type):$/;"	c
CachedMetaClass	jedi/jedi/evaluate/iterable.py	/^from jedi.evaluate.cache import CachedMetaClass, memoize_default$/;"	i
CachedMetaClass	jedi/jedi/evaluate/representation.py	/^from jedi.evaluate.cache import memoize_default, CachedMetaClass, NO_DEFAULT$/;"	i
CallClass	jedi/test/completion/classes.py	/^class CallClass():$/;"	c
CallSignature	jedi/jedi/api/classes.py	/^class CallSignature(Definition):$/;"	c
CallSignatureDetails	jedi/jedi/api/helpers.py	/^CallSignatureDetails = namedtuple($/;"	v
CheckAttribute	jedi/jedi/evaluate/compiled/__init__.py	/^class CheckAttribute(object):$/;"	c
Class	jedi/jedi/evaluate/docstrings.py	/^from jedi.parser.tree import Class$/;"	i
Class	jedi/jedi/evaluate/iterable.py	/^    from jedi.evaluate.representation import Class$/;"	i
Class	jedi/jedi/evaluate/representation.py	/^class Class(use_metaclass(CachedMetaClass, Wrapper)):$/;"	c
Class	jedi/jedi/parser/tree.py	/^class Class(ClassOrFunc):$/;"	c
ClassDec	jedi/test/completion/goto.py	/^class ClassDec():$/;"	c
ClassDef	jedi/test/completion/goto.py	/^class ClassDef():$/;"	c
ClassOrFunc	jedi/jedi/parser/tree.py	/^class ClassOrFunc(Scope):$/;"	c
ClassVar	jedi/test/completion/goto.py	/^class ClassVar():$/;"	c
ClearAllCtrlPCaches	ctrlp.vim/plugin/ctrlp.vim	/^com! -bar ClearAllCtrlPCaches cal ctrlp#clra()$/;"	c
ClearCtrlPCache	ctrlp.vim/plugin/ctrlp.vim	/^com! -bar ClearCtrlPCache     cal ctrlp#clr()$/;"	c
Close	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Close()$/;"	f
Cls	jedi/test/static_analysis/attribute_error.py	/^class Cls():$/;"	c
Cls	jedi/test/static_analysis/attribute_warnings.py	/^class Cls():$/;"	c
Comment	jedi/docs/_themes/flask_theme_support.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
CompFor	jedi/jedi/parser/tree.py	/^class CompFor(BaseNode):$/;"	c
CompiledName	jedi/jedi/evaluate/compiled/__init__.py	/^class CompiledName(FakeName):$/;"	c
CompiledObject	jedi/jedi/evaluate/analysis.py	/^from jedi.evaluate.compiled import CompiledObject$/;"	i
CompiledObject	jedi/jedi/evaluate/compiled/__init__.py	/^class CompiledObject(Base):$/;"	c
CompiledObject	jedi/jedi/evaluate/precedence.py	/^from jedi.evaluate.compiled import CompiledObject, create, builtin_from_name$/;"	i
CompiledObject	jedi/test/test_evaluate/test_precedence.py	/^from jedi.evaluate.compiled import CompiledObject$/;"	i
Completion	jedi/jedi/api/__init__.py	/^from jedi.api.completion import Completion$/;"	i
Completion	jedi/jedi/api/classes.py	/^class Completion(BaseDefinition):$/;"	c
Completion	jedi/jedi/api/completion.py	/^class Completion:$/;"	c
CompletionParts	jedi/jedi/api/helpers.py	/^CompletionParts = namedtuple('CompletionParts', ['path', 'has_dot', 'name'])$/;"	v
Comprehension	jedi/jedi/evaluate/iterable.py	/^class Comprehension(IterableWrapper):$/;"	c
Conque	Conque-GDB/autoload/conque_term/conque.py	/^class Conque(object):$/;"	c
ConqueGdb	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^class ConqueGdb(Conque):$/;"	c
ConqueGdb	Conque-GDB/plugin/conque_gdb.vim	/^command! -nargs=* -complete=file ConqueGdb call conque_gdb#open(<q-args>, [$/;"	c
ConqueGdbBDelete	Conque-GDB/plugin/conque_gdb.vim	/^command! -nargs=0 ConqueGdbBDelete call conque_gdb#delete_opened_buffers()$/;"	c
ConqueGdbCommand	Conque-GDB/plugin/conque_gdb.vim	/^command! -nargs=+ ConqueGdbCommand call conque_gdb#command(<q-args>)$/;"	c
ConqueGdbExe	Conque-GDB/plugin/conque_gdb.vim	/^command! -nargs=? -complete=file ConqueGdbExe call conque_gdb#change_gdb_exe(<q-args>)$/;"	c
ConqueGdbSplit	Conque-GDB/plugin/conque_gdb.vim	/^command! -nargs=* -complete=file ConqueGdbSplit call conque_gdb#open(<q-args>, [$/;"	c
ConqueGdbTab	Conque-GDB/plugin/conque_gdb.vim	/^command! -nargs=* -complete=file ConqueGdbTab call conque_gdb#open(<q-args>, [$/;"	c
ConqueGdbVSplit	Conque-GDB/plugin/conque_gdb.vim	/^command! -nargs=* -complete=file ConqueGdbVSplit call conque_gdb#open(<q-args>, [$/;"	c
ConqueScreen	Conque-GDB/autoload/conque_term/conque_screen.py	/^class ConqueScreen(object):$/;"	c
ConqueSole	Conque-GDB/autoload/conque_term/conque_sole.py	/^class ConqueSole(Conque):$/;"	c
ConqueSoleGdb	Conque-GDB/autoload/conque_gdb/conque_sole_gdb.py	/^class ConqueSoleGdb(ConqueSole):$/;"	c
ConqueSoleSharedMemory	Conque-GDB/autoload/conque_term/conque_sole_shared_memory.py	/^class ConqueSoleSharedMemory():$/;"	c
ConqueSoleSubprocess	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^class ConqueSoleSubprocess():$/;"	c
ConqueSoleWrapper	Conque-GDB/autoload/conque_term/conque_sole_wrapper.py	/^class ConqueSoleWrapper():$/;"	c
ConqueSubprocess	Conque-GDB/autoload/conque_term/conque_subprocess.py	/^class ConqueSubprocess:$/;"	c
ConqueTerm	Conque-GDB/plugin/conque_term.vim	/^command! -nargs=+ -complete=shellcmd ConqueTerm call conque_term#open(<q-args>)$/;"	c
ConqueTermSplit	Conque-GDB/plugin/conque_term.vim	/^command! -nargs=+ -complete=shellcmd ConqueTermSplit call conque_term#open(<q-args>, ['belowright split'])$/;"	c
ConqueTermTab	Conque-GDB/plugin/conque_term.vim	/^command! -nargs=+ -complete=shellcmd ConqueTermTab call conque_term#open(<q-args>, ['tabnew'])$/;"	c
ConqueTermVSplit	Conque-GDB/plugin/conque_term.vim	/^command! -nargs=+ -complete=shellcmd ConqueTermVSplit call conque_term#open(<q-args>, ['belowright vsplit'])$/;"	c
Counter	jedi/test/completion/generators.py	/^class Counter:$/;"	c
CreateNewFile	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:CreateNewFile(...)$/;"	f
Creator.BufNamePrefix	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.BufNamePrefix()$/;"	f
Creator.CreateMirror	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateMirror()$/;"	f
Creator.CreateTabTree	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateTabTree(name)$/;"	f
Creator.CreateWindowTree	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateWindowTree(dir)$/;"	f
Creator.New	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.New()$/;"	f
Creator.ToggleTabTree	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.ToggleTabTree(dir)$/;"	f
Creator._bindMappings	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._bindMappings()$/;"	f
Creator._broadcastInitEvent	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._broadcastInitEvent()$/;"	f
Creator._createNERDTree	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createNERDTree(path, type)$/;"	f
Creator._createTreeWin	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createTreeWin()$/;"	f
Creator._isBufHidden	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._isBufHidden(nr)$/;"	f
Creator._nextBufferName	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferName()$/;"	f
Creator._nextBufferNumber	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferNumber()$/;"	f
Creator._pathForString	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._pathForString(str)$/;"	f
Creator._removeTreeBufForTab	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._removeTreeBufForTab()$/;"	f
Creator._setCommonBufOptions	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setCommonBufOptions()$/;"	f
Creator._setupStatusline	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setupStatusline()$/;"	f
Creator._tabpagevar	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._tabpagevar(tabnr, var)$/;"	f
Creator._uniq	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._uniq(list)$/;"	f
Creator.createMirror	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createMirror()$/;"	f
Creator.createTabTree	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createTabTree(name)$/;"	f
Creator.createWindowTree	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createWindowTree(dir)$/;"	f
Creator.toggleTabTree	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.toggleTabTree(dir)$/;"	f
CtrlP	ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlP         cal ctrlp#init(0, { 'dir': <q-args> })$/;"	c
CtrlPAug	ctrlp.vim/autoload/ctrlp.vim	/^	aug CtrlPAug$/;"	a
CtrlPBookmarkDir	ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPBookmarkDir cal ctrlp#init(ctrlp#bookmarkdir#id())$/;"	c
CtrlPBookmarkDirAdd	ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlPBookmarkDirAdd$/;"	c
CtrlPBufTag	ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=buffer CtrlPBufTag$/;"	c
CtrlPBufTagAll	ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPBufTagAll cal ctrlp#init(ctrlp#buffertag#cmd(1))$/;"	c
CtrlPBuffer	ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPBuffer   cal ctrlp#init(1)$/;"	c
CtrlPChange	ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=buffer CtrlPChange$/;"	c
CtrlPChangeAll	ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPChangeAll   cal ctrlp#init(ctrlp#changes#cmd(1))$/;"	c
CtrlPClearAllCaches	ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPClearAllCaches cal ctrlp#clra()$/;"	c
CtrlPClearCache	ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPClearCache     cal ctrlp#clr()$/;"	c
CtrlPCurFile	ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPCurFile cal ctrlp#init(0, { 'mode': 'c' })$/;"	c
CtrlPCurWD	ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPCurWD   cal ctrlp#init(0, { 'mode': '' })$/;"	c
CtrlPDir	ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlPDir$/;"	c
CtrlPLastMode	ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? CtrlPLastMode cal ctrlp#init(-1, { 'args': <q-args> })$/;"	c
CtrlPLine	ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=buffer CtrlPLine$/;"	c
CtrlPMRUFiles	ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlPMRUFiles cal ctrlp#init(2, { 'dir': <q-args> })$/;"	c
CtrlPMixed	ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPMixed       cal ctrlp#init(ctrlp#mixed#id())$/;"	c
CtrlPQuickfix	ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPQuickfix cal ctrlp#init(ctrlp#quickfix#id())$/;"	c
CtrlPRTS	ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPRTS       cal ctrlp#init(ctrlp#rtscript#id())$/;"	c
CtrlPRoot	ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPRoot    cal ctrlp#init(0, { 'mode': 'r' })$/;"	c
CtrlPTag	ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPTag      cal ctrlp#init(ctrlp#tag#id())$/;"	c
CtrlPUndo	ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPUndo      cal ctrlp#init(ctrlp#undo#id())$/;"	c
Cursor	jedi/test/completion/on_import.py	/^from sqlite3 import Cursor$/;"	i
D	jedi/test/completion/dynamic_arrays.py	/^class D(): pass$/;"	c
D	jedi/test/completion/goto.py	/^D = C$/;"	v
DEDENT	jedi/jedi/parser/__init__.py	/^from jedi.parser.token import (DEDENT, INDENT, ENDMARKER, NEWLINE, NUMBER,$/;"	i
DETACHED_PROCESS	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^DETACHED_PROCESS = 0x00000008$/;"	v
DFAState	jedi/jedi/parser/pgen2/pgen.py	/^class DFAState(object):$/;"	c
DOCSTRING_PARAM_PATTERNS	jedi/jedi/evaluate/docstrings.py	/^DOCSTRING_PARAM_PATTERNS = [$/;"	v
DOCSTRING_RETURN_PATTERNS	jedi/jedi/evaluate/docstrings.py	/^DOCSTRING_RETURN_PATTERNS = [$/;"	v
Decorator	jedi/jedi/parser/tree.py	/^class Decorator(BaseNode):$/;"	c
Decorator	jedi/test/completion/decorators.py	/^class Decorator(object):$/;"	c
DecoratorWithoutCall	jedi/test/completion/decorators.py	/^class DecoratorWithoutCall():$/;"	c
Dedent	jedi/jedi/parser/tree.py	/^class Dedent(Leaf):$/;"	c
Definition	jedi/jedi/api/classes.py	/^class Definition(use_metaclass(CachedMetaClass, BaseDefinition)):$/;"	c
Definition	jedi/test/run.py	/^from jedi.api.classes import Definition$/;"	i
Dict	jedi/jedi/evaluate/jedi_typing.py	/^    class Dict(MutableMapping, dict):$/;"	c	function:factory
DictComprehension	jedi/jedi/evaluate/iterable.py	/^class DictComprehension(Comprehension, ArrayMixin):$/;"	c
DocstringMixin	jedi/jedi/parser/tree.py	/^class DocstringMixin(object):$/;"	c
Dude	jedi/test/completion/classes.py	/^class Dude(classgetter()):$/;"	c
DummyFile	jedi/jedi/_compatibility.py	/^class DummyFile(object):$/;"	c
DynamicParam	jedi/test/completion/usages.py	/^class DynamicParam():$/;"	c
E	jedi/test/completion/descriptors.py	/^class E(object):$/;"	c
E	jedi/test/completion/dynamic_arrays.py	/^class E(): pass$/;"	c
ELLIPSIS	jedi/jedi/parser/token.py	/^    ELLIPSIS = N_TOKENS$/;"	v
ENDMARKER	jedi/jedi/parser/__init__.py	/^from jedi.parser.token import (DEDENT, INDENT, ENDMARKER, NEWLINE, NUMBER,$/;"	i
ENDMARKER	jedi/jedi/parser/tokenize.py	/^from jedi.parser.token import (tok_name, N_TOKENS, ENDMARKER, STRING, NUMBER, opmap,$/;"	i
ENHANCED_KEY	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^ENHANCED_KEY = 0x0100$/;"	v
EXTENDED_STARTUPINFO_PRESENT	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^EXTENDED_STARTUPINFO_PRESENT = 0x00080000$/;"	v
Employee	jedi/test/completion/pep0484_comments.py	/^class Employee:$/;"	c
EmptyClass	jedi/test/test_api/test_interpreter.py	/^    class EmptyClass:$/;"	c	function:test_builtin_details
EndMarker	jedi/jedi/parser/tree.py	/^class EndMarker(Leaf):$/;"	c
EndMarkerReached	jedi/jedi/api/helpers.py	/^    class EndMarkerReached(Exception):$/;"	c	function:get_stack_at_position
Error	jedi/docs/_themes/flask_theme_support.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Error	jedi/jedi/evaluate/analysis.py	/^class Error(object):$/;"	c
ErrorLeaf	jedi/jedi/parser/tree.py	/^class ErrorLeaf(LeafWithNewLines):$/;"	c
ErrorNode	jedi/jedi/parser/tree.py	/^class ErrorNode(BaseNode):$/;"	c
Evaluator	jedi/jedi/api/__init__.py	/^from jedi.evaluate import Evaluator$/;"	i
Evaluator	jedi/jedi/evaluate/__init__.py	/^class Evaluator(object):$/;"	c
Evaluator	jedi/test/test_evaluate/test_buildout_detection.py	/^from jedi.evaluate import Evaluator$/;"	i
Evaluator	jedi/test/test_evaluate/test_compiled.py	/^from jedi.evaluate import Evaluator$/;"	i
Evaluator	jedi/test/test_evaluate/test_precedence.py	/^from jedi.evaluate import Evaluator$/;"	i
Evaluator	jedi/test/test_evaluate/test_sys_path.py	/^from jedi.evaluate import sys_path, Evaluator$/;"	i
Event.New	nerdtree/lib/nerdtree/event.vim	/^function! s:Event.New(nerdtree, subject, action, params) abort$/;"	f
Executed	jedi/jedi/evaluate/representation.py	/^class Executed(tree.Base):$/;"	c
ExecutedParam	jedi/jedi/evaluate/finder.py	/^    from jedi.evaluate.param import ExecutedParam, Arguments$/;"	i
ExecutedParam	jedi/jedi/evaluate/param.py	/^class ExecutedParam(tree.Param):$/;"	c
ExecutionRecursionDetector	jedi/jedi/evaluate/recursion.py	/^class ExecutionRecursionDetector(object):$/;"	c
Expfloat	jedi/jedi/parser/tokenize.py	/^Expfloat = r'[0-9]+' + exponent$/;"	v
ExprStmt	jedi/jedi/parser/tree.py	/^class ExprStmt(BaseNode, DocstringMixin):$/;"	c
Extension	jedi/test/test_evaluate/init_extension_module/setup.py	/^from distutils.core import setup, Extension$/;"	i
FILL_CHAR	Conque-GDB/autoload/conque_term/conque_sole_shared_memory.py	/^    FILL_CHAR = None$/;"	v	class:ConqueSoleSharedMemory
FIXTURES	jedi/test/test_parser/test_parser_tree.py	/^    FIXTURES = [$/;"	v	class:TestsFunctionAndLambdaParsing
FLOWS	jedi/jedi/parser/fast.py	/^FLOWS = 'if', 'else', 'elif', 'while', 'with', 'try', 'except', 'finally', 'for'$/;"	v
FOCUS_EVENT	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^FOCUS_EVENT = 0x0010$/;"	v
FOCUS_EVENT_RECORD	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^class FOCUS_EVENT_RECORD(Structure):$/;"	c
FakeDict	jedi/jedi/evaluate/iterable.py	/^class FakeDict(_FakeArray):$/;"	c
FakeDoesNotExist	jedi/jedi/evaluate/compiled/fake.py	/^class FakeDoesNotExist(Exception):$/;"	c
FakeImport	jedi/jedi/evaluate/helpers.py	/^class FakeImport(tree.ImportName):$/;"	c
FakeName	jedi/jedi/api/keywords.py	/^from jedi.evaluate.helpers import FakeName$/;"	i
FakeName	jedi/jedi/evaluate/compiled/__init__.py	/^from jedi.evaluate.helpers import FakeName$/;"	i
FakeName	jedi/jedi/evaluate/compiled/fake.py	/^from jedi.evaluate.helpers import FakeName$/;"	i
FakeName	jedi/jedi/evaluate/helpers.py	/^class FakeName(tree.Name):$/;"	c
FakeName	jedi/jedi/evaluate/param.py	/^from jedi.evaluate.helpers import FakeName$/;"	i
FakeSequence	jedi/jedi/evaluate/docstrings.py	/^from jedi.evaluate.iterable import Array, FakeSequence, AlreadyEvaluated$/;"	i
FakeSequence	jedi/jedi/evaluate/iterable.py	/^class FakeSequence(_FakeArray):$/;"	c
FakeSequence	jedi/jedi/evaluate/pep0484.py	/^    from jedi.evaluate.iterable import FakeSequence$/;"	i
FastModule	jedi/jedi/parser/fast.py	/^class FastModule(tree.Module):$/;"	c
FastParser	jedi/jedi/api/__init__.py	/^from jedi.parser.fast import FastParser$/;"	i
FastParser	jedi/jedi/evaluate/compiled/mixed.py	/^from jedi.parser.fast import FastParser$/;"	i
FastParser	jedi/jedi/parser/fast.py	/^class FastParser(use_metaclass(CachedFastParser)):$/;"	c
FastParser	jedi/test/test_parser/test_fast_parser.py	/^from jedi.parser.fast import FastParser$/;"	i
FastTokenizer	jedi/jedi/parser/fast.py	/^class FastTokenizer(object):$/;"	c
FindClass	jedi/test/completion/classes.py	/^class FindClass():$/;"	c
FlagSet.New	nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.New()$/;"	f
FlagSet._flagsForScope	nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet._flagsForScope(scope)$/;"	f
FlagSet.addFlag	nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.addFlag(scope, flag)$/;"	f
FlagSet.clearFlags	nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.clearFlags(scope)$/;"	f
FlagSet.removeFlag	nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.removeFlag(scope, flag)$/;"	f
FlagSet.renderToString	nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.renderToString()$/;"	f
FlaskyStyle	jedi/docs/_themes/flask_theme_support.py	/^class FlaskyStyle(Style):$/;"	c
Flow	jedi/jedi/parser/tree.py	/^class Flow(BaseNode):$/;"	c
Foo	jedi/test/completion/complex.py	/^class Foo(object):$/;"	c
Foo	jedi/test/completion/parser.py	/^class Foo(object):$/;"	c
Foo	jedi/test/test_api/test_interpreter.py	/^        class Foo():$/;"	c	function:TestInterpreterAPI.test_getitem_side_effects
Foo	jedi/test/test_api/test_interpreter.py	/^        class Foo():$/;"	c	function:TestInterpreterAPI.test_property_error
Foo	jedi/test/test_api/test_interpreter.py	/^        class Foo():$/;"	c	function:TestInterpreterAPI.test_slice
Foo	jedi/test/test_evaluate/flask-site-packages/flask_foo.py	/^class Foo(object):$/;"	c
Foo	jedi/test/test_evaluate/test_imports.py	/^    pytest.mark.xfail(("import flask.ext.bar; flask.ext.bar.", "Foo")),$/;"	i
Foo	jedi/test/test_evaluate/test_imports.py	/^    pytest.mark.xfail(("import flask.ext.baz; flask.ext.baz.", "Foo")),$/;"	i
Foo	jedi/test/test_evaluate/test_imports.py	/^    pytest.mark.xfail(("import flask.ext.foo; flask.ext.foo.", "Foo")),$/;"	i
Foo	jedi/test/test_evaluate/test_imports.py	/^    pytest.mark.xfail(("import flask.ext.moo; flask.ext.moo.", "Foo")),$/;"	i
FooBar	jedi/test/completion/precedence.py	/^class FooBar(object):$/;"	c
FooListComp	jedi/test/completion/recursion.py	/^class FooListComp():$/;"	c
ForStmt	jedi/jedi/parser/tree.py	/^class ForStmt(Flow):$/;"	c
ForceUpdate	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ForceUpdate()$/;"	f
Fore	jedi/jedi/debug.py	/^        from colorama import Fore, init$/;"	i
Fore	jedi/jedi/debug.py	/^    class Fore(object):$/;"	c	function:_lazy_colorama_init
ForwardReference	jedi/test/completion/pep0484_typing.py	/^class ForwardReference:$/;"	c
Function	jedi/jedi/evaluate/representation.py	/^class Function(use_metaclass(CachedMetaClass, Wrapper)):$/;"	c
Function	jedi/jedi/parser/tree.py	/^class Function(ClassOrFunc):$/;"	c
Function	jedi/test/test_evaluate/test_compiled.py	/^from jedi.parser.tree import Function$/;"	i
FunctionExecution	jedi/jedi/evaluate/iterable.py	/^        from jedi.evaluate.representation import FunctionExecution$/;"	i
FunctionExecution	jedi/jedi/evaluate/representation.py	/^class FunctionExecution(Executed):$/;"	c
GDB_BREAK_END_REGEX	Conque-GDB/autoload/conque_gdb/conque_sole_gdb.py	/^GDB_BREAK_END_REGEX = re.compile('^\\(gdb\\)\\s*')$/;"	v
GDB_BREAK_MARK	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^GDB_BREAK_MARK = '\\x1a\\x1a'$/;"	v
GDB_BREAK_MARK_SOLE	Conque-GDB/autoload/conque_gdb/conque_sole_gdb.py	/^GDB_BREAK_MARK_SOLE = 0x2192$/;"	v
GDB_BREAK_REGEX	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^GDB_BREAK_REGEX = re.compile('.*' + GDB_BREAK_MARK + '.*')$/;"	v
GDB_EXIT_MARK	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^GDB_EXIT_MARK = '\\x1a\\x19'$/;"	v
GDB_EXIT_REGEX	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^GDB_EXIT_REGEX = re.compile('.*' + GDB_EXIT_MARK + '.*')$/;"	v
GDB_PROMPT_MARK	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^GDB_PROMPT_MARK = '\\x1a\\x18'$/;"	v
GDB_PROMPT_REGEX	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^GDB_PROMPT_REGEX = re.compile('.*' + GDB_PROMPT_MARK + '.*')$/;"	v
GET_BPS_REGEX	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^GET_BPS_REGEX = re.compile('(bkpt\\s*?\\=\\s*?\\{.*?(?:["].*?["])+?\\s*?\\]?\\s*?\\}(?!\\s*?,\\s*?\\{).*?)', re.I)$/;"	v
GREEN	jedi/jedi/debug.py	/^        GREEN = ''$/;"	v	class:_lazy_colorama_init.Fore
Generator	jedi/jedi/evaluate/iterable.py	/^class Generator(use_metaclass(CachedMetaClass, IterableWrapper, GeneratorMixin)):$/;"	c
GeneratorComprehension	jedi/jedi/evaluate/iterable.py	/^class GeneratorComprehension(Comprehension, GeneratorMixin):$/;"	c
GeneratorMixin	jedi/jedi/evaluate/iterable.py	/^class GeneratorMixin(object):$/;"	c
Generic	jedi/docs/_themes/flask_theme_support.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Get	jedi/test/completion/generators.py	/^class Get():$/;"	c
Get	vim-airline/autoload/airline/highlighter.vim	/^function! s:Get(dict, key, prefix, default)$/;"	f
GetItem	jedi/test/completion/arrays.py	/^class GetItem():$/;"	c
GetItemWithList	jedi/test/completion/arrays.py	/^class GetItemWithList():$/;"	c
GetattrArray	jedi/test/completion/classes.py	/^class GetattrArray():$/;"	c
GlobPath	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:GlobPath(dirs, depth)$/;"	f
GlobalName	jedi/jedi/evaluate/representation.py	/^class GlobalName(helpers.FakeName):$/;"	c
GlobalStmt	jedi/jedi/parser/tree.py	/^class GlobalStmt(KeywordStatement):$/;"	c
Grammar	jedi/jedi/parser/pgen2/grammar.py	/^class Grammar(object):$/;"	c
GrammarTest	jedi/test/test_parser/test_pgen2.py	/^class GrammarTest(TestCase):$/;"	c
HIGH_PRIORITY_CLASS	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^HIGH_PRIORITY_CLASS = 0x00000080$/;"	v
I18NSPHINXOPTS	jedi/docs/Makefile	/^I18NSPHINXOPTS  = $(PAPEROPT_$(PAPER)) $(SPHINXOPTS) .$/;"	m
IDLE_PRIORITY_CLASS	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^IDLE_PRIORITY_CLASS = 0x00000040$/;"	v
INDENT	jedi/jedi/parser/__init__.py	/^from jedi.parser.token import (DEDENT, INDENT, ENDMARKER, NEWLINE, NUMBER,$/;"	i
INDENT	jedi/test/test_parser/test_tokenize.py	/^from jedi.parser.token import NAME, OP, NEWLINE, STRING, INDENT$/;"	i
INHERIT_PARENT_AFFINITY	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^INHERIT_PARENT_AFFINITY = 0x00010000$/;"	v
INPUT_RECORD	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^class INPUT_RECORD(Structure):$/;"	c
INPUT_UNION	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^class INPUT_UNION(Union):$/;"	c
IS_BREAKPOINT_REGEX	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^IS_BREAKPOINT_REGEX = re.compile('.*breakpoint.*', re.I)$/;"	v
IfStmt	jedi/jedi/parser/tree.py	/^class IfStmt(Flow):$/;"	c
ImplicitTuple	jedi/jedi/evaluate/iterable.py	/^class ImplicitTuple(_FakeArray):$/;"	c
Import	jedi/jedi/evaluate/imports.py	/^        self._import = name.get_parent_until(tree.Import)$/;"	i
Import	jedi/jedi/parser/tree.py	/^class Import(BaseNode):$/;"	c
ImportFrom	jedi/jedi/parser/tree.py	/^class ImportFrom(Import):$/;"	c
ImportName	jedi/jedi/parser/tree.py	/^class ImportName(Import):$/;"	c
ImportWrapper	jedi/jedi/evaluate/imports.py	/^class ImportWrapper(tree.Base):$/;"	c
Importer	jedi/jedi/evaluate/imports.py	/^class Importer(object):$/;"	c
InBoth	jedi/test/completion/docstring.py	/^class InBoth():$/;"	c
InClass	jedi/test/completion/docstring.py	/^class InClass():$/;"	c
InInit	jedi/test/completion/docstring.py	/^class InInit():$/;"	c
Indent	jedi/jedi/parser/tree.py	/^class Indent(Leaf):$/;"	c
IndentIssues	jedi/test/completion/parser.py	/^class IndentIssues():$/;"	c
Inherited	jedi/test/static_analysis/attribute_warnings.py	/^class Inherited(Cls):$/;"	c
Instance	jedi/jedi/evaluate/analysis.py	/^    from jedi.evaluate.representation import Instance$/;"	i
Instance	jedi/jedi/evaluate/compiled/__init__.py	/^            from jedi.evaluate.representation import Instance$/;"	i
Instance	jedi/jedi/evaluate/param.py	/^    from jedi.evaluate.representation import Instance$/;"	i
Instance	jedi/jedi/evaluate/representation.py	/^class Instance(use_metaclass(CachedMetaClass, Executed)):$/;"	c
Instance	jedi/test/static_analysis/arguments.py	/^class Instance():$/;"	c
InstanceElement	jedi/jedi/evaluate/iterable.py	/^        from jedi.evaluate.representation import InstanceElement$/;"	i
InstanceElement	jedi/jedi/evaluate/param.py	/^    from jedi.evaluate.representation import InstanceElement$/;"	i
InstanceElement	jedi/jedi/evaluate/representation.py	/^class InstanceElement(use_metaclass(CachedMetaClass, tree.Base)):$/;"	c
InstanceName	jedi/jedi/evaluate/representation.py	/^class InstanceName(tree.Name):$/;"	c
IntegrationTestCase	jedi/test/run.py	/^class IntegrationTestCase(object):$/;"	c
InternalParseError	jedi/jedi/parser/pgen2/parse.py	/^class InternalParseError(Exception):$/;"	c
Interpreter	jedi/jedi/__init__.py	/^from jedi.api import Script, Interpreter, NotFoundError, set_debug_function$/;"	i
Interpreter	jedi/jedi/api/__init__.py	/^class Interpreter(Script):$/;"	c
Interpreter	jedi/jedi/utils.py	/^from jedi import Interpreter$/;"	i
IsScope	jedi/jedi/parser/tree.py	/^class IsScope(use_metaclass(IsScopeMeta)):$/;"	c
IsScopeMeta	jedi/jedi/parser/tree.py	/^class IsScopeMeta(type):$/;"	c
ItemsView	jedi/jedi/evaluate/jedi_typing.py	/^    class ItemsView(abc.ItemsView):$/;"	c	function:factory
Iterable	jedi/jedi/evaluate/jedi_typing.py	/^    class Iterable(abc.Iterable):$/;"	c	function:factory
IterableWrapper	jedi/jedi/evaluate/iterable.py	/^class IterableWrapper(tree.Base):$/;"	c
Iterator	jedi/jedi/evaluate/jedi_typing.py	/^    class Iterator(Iterable, abc.Iterator):$/;"	c	function:factory
JediRL	jedi/jedi/utils.py	/^    class JediRL(object):$/;"	c	function:setup_readline
JustAClass	jedi/test/completion/decorators.py	/^class JustAClass:$/;"	c
KEY_EVENT	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^KEY_EVENT = 0x0001$/;"	v
KEY_EVENT_RECORD	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^class KEY_EVENT_RECORD(Structure):$/;"	c
Key	jedi/test/completion/pep0484_typing.py	/^class Key:$/;"	c
KeyLoop	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:KeyLoop()$/;"	f
KeyMap.Add	nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Add(keymap)$/;"	f
KeyMap.All	nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.All()$/;"	f
KeyMap.BindAll	nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.BindAll()$/;"	f
KeyMap.Create	nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Create(options)$/;"	f
KeyMap.FindFor	nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.FindFor(key, scope)$/;"	f
KeyMap.Invoke	nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Invoke(key)$/;"	f
KeyMap.Remove	nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Remove(key, scope)$/;"	f
KeyMap.bind	nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.bind()$/;"	f
KeyMap.invoke	nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.invoke(...)$/;"	f
KeysView	jedi/jedi/evaluate/jedi_typing.py	/^    class KeysView(Iterable, abc.KeysView):$/;"	c	function:factory
Keyword	jedi/docs/_themes/flask_theme_support.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Keyword	jedi/jedi/api/keywords.py	/^class Keyword(object):$/;"	c
Keyword	jedi/jedi/parser/tree.py	/^class Keyword(Leaf):$/;"	c
KeywordStatement	jedi/jedi/parser/tree.py	/^class KeywordStatement(BaseNode):$/;"	c
LEFT_ALT_PRESSED	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^LEFT_ALT_PRESSED = 0x0002$/;"	v
LEFT_CTRL_PRESSED	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^LEFT_CTRL_PRESSED = 0x0008$/;"	v
LPBYTE	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^LPBYTE = POINTER(c_ubyte)$/;"	v
LPTSTR	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^LPTSTR = POINTER(c_char)$/;"	v
Lambda	jedi/jedi/parser/tree.py	/^class Lambda(Function):$/;"	c
LambdaWrapper	jedi/jedi/evaluate/representation.py	/^class LambdaWrapper(Function):$/;"	c
LazyInstanceDict	jedi/jedi/evaluate/representation.py	/^class LazyInstanceDict(object):$/;"	c
LazyMixedNamesDict	jedi/jedi/evaluate/compiled/mixed.py	/^class LazyMixedNamesDict(compiled.LazyNamesDict):$/;"	c
LazyName	jedi/jedi/api/interpreter.py	/^class LazyName(helpers.FakeName):$/;"	c
LazyName	jedi/jedi/evaluate/helpers.py	/^class LazyName(FakeName):$/;"	c
LazyNamesDict	jedi/jedi/evaluate/compiled/__init__.py	/^class LazyNamesDict(object):$/;"	c
Leaf	jedi/jedi/api/keywords.py	/^from jedi.parser.tree import Leaf$/;"	i
Leaf	jedi/jedi/parser/tree.py	/^class Leaf(Base):$/;"	c
LeafWithNewLines	jedi/jedi/parser/tree.py	/^class LeafWithNewLines(Leaf):$/;"	c
List	jedi/jedi/evaluate/jedi_typing.py	/^    class List(MutableSequence, list):$/;"	c	function:factory
List	jedi/test/completion/pep0484_comments.py	/^from typing import List$/;"	i
ListComprehension	jedi/jedi/evaluate/iterable.py	/^class ListComprehension(Comprehension, ArrayMixin):$/;"	c
Literal	jedi/docs/_themes/flask_theme_support.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Literal	jedi/jedi/parser/tree.py	/^class Literal(LeafWithNewLines):$/;"	c
MAGENTA	jedi/jedi/debug.py	/^        MAGENTA = ''$/;"	v	class:_lazy_colorama_init.Fore
MAX_PARAM_SEARCHES	jedi/jedi/evaluate/dynamic.py	/^MAX_PARAM_SEARCHES = 20$/;"	v
MEMORY_BASIC_INFORMATION	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^class MEMORY_BASIC_INFORMATION(Structure):$/;"	c
MENU_EVENT	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^MENU_EVENT = 0x0008$/;"	v
MENU_EVENT_RECORD	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^class MENU_EVENT_RECORD(Structure):$/;"	c
MOUSE_EVENT	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^MOUSE_EVENT = 0x0002$/;"	v
MOUSE_EVENT_RECORD	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^class MOUSE_EVENT_RECORD(Structure):$/;"	c
MapNorms	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MapNorms()$/;"	f
MapSpecs	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MapSpecs()$/;"	f
Mapping	jedi/jedi/evaluate/jedi_typing.py	/^    class Mapping(Iterable, abc.Mapping):$/;"	c	function:factory
MarkToOpen	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MarkToOpen()$/;"	f
MatchIt	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MatchIt(items, pat, limit, exc)$/;"	f
MatchedItems	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MatchedItems(items, pat, limit)$/;"	f
Memoize	jedi/test/completion/descriptors.py	/^class Memoize():$/;"	c
MemoizeTest	jedi/test/completion/descriptors.py	/^class MemoizeTest():$/;"	c
MenuController.New	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.New(menuItems)$/;"	f
MenuController._allIndexesFor	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._allIndexesFor(shortcut)$/;"	f
MenuController._current	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._current()$/;"	f
MenuController._cursorDown	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorDown()$/;"	f
MenuController._cursorUp	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorUp()$/;"	f
MenuController._echoPrompt	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._echoPrompt()$/;"	f
MenuController._handleKeypress	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._handleKeypress(key)$/;"	f
MenuController._nextIndexFor	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._nextIndexFor(shortcut)$/;"	f
MenuController._restoreOptions	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._restoreOptions()$/;"	f
MenuController._saveOptions	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._saveOptions()$/;"	f
MenuController._setCmdheight	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._setCmdheight()$/;"	f
MenuController.showMenu	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.showMenu()$/;"	f
MenuItem.All	nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.All()$/;"	f
MenuItem.AllEnabled	nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.AllEnabled()$/;"	f
MenuItem.Create	nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.Create(options)$/;"	f
MenuItem.CreateSeparator	nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSeparator(options)$/;"	f
MenuItem.CreateSubmenu	nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSubmenu(options)$/;"	f
MenuItem.enabled	nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.enabled()$/;"	f
MenuItem.execute	nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.execute()$/;"	f
MenuItem.isSeparator	nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSeparator()$/;"	f
MenuItem.isSubmenu	nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSubmenu()$/;"	f
MergedArray	jedi/jedi/evaluate/iterable.py	/^class MergedArray(_FakeArray):$/;"	c
MergedNamesDict	jedi/jedi/parser/fast.py	/^class MergedNamesDict(object):$/;"	c
MergedNodes	jedi/jedi/evaluate/analysis.py	/^    from jedi.evaluate.iterable import MergedNodes$/;"	i
MergedNodes	jedi/jedi/evaluate/iterable.py	/^class MergedNodes(frozenset):$/;"	c
MethodDecoratorAsClass	jedi/test/completion/decorators.py	/^class MethodDecoratorAsClass():$/;"	c
MethodDecoratorDoesntExist	jedi/test/completion/decorators.py	/^class MethodDecoratorDoesntExist(Base):$/;"	c
MethodDecorators	jedi/test/completion/decorators.py	/^class MethodDecorators():$/;"	c
MethodDescriptorType	jedi/jedi/evaluate/compiled/fake.py	/^MethodDescriptorType = type(str.replace)$/;"	v
MixedModule	jedi/jedi/api/interpreter.py	/^class MixedModule(object):$/;"	c
MixedName	jedi/jedi/evaluate/compiled/mixed.py	/^class MixedName(compiled.CompiledName):$/;"	c
MixedObject	jedi/jedi/evaluate/compiled/mixed.py	/^class MixedObject(object):$/;"	c
Mixin	jedi/test/completion/classes.py	/^class Mixin(SuperClass):$/;"	c
MixinTestFullName	jedi/test/test_api/test_full_name.py	/^class MixinTestFullName(object):$/;"	c
Mock	jedi/test/test_parser/test_fast_parser.py	/^        class Mock(FastParser):$/;"	c	function:test_split_parts.splits
Module	jedi/jedi/parser/tree.py	/^class Module(Scope):$/;"	c
ModuleWrapper	jedi/jedi/api/interpreter.py	/^from jedi.evaluate.representation import ModuleWrapper$/;"	i
ModuleWrapper	jedi/jedi/evaluate/imports.py	/^        from jedi.evaluate.representation import ModuleWrapper$/;"	i
ModuleWrapper	jedi/jedi/evaluate/representation.py	/^class ModuleWrapper(use_metaclass(CachedMetaClass, tree.Module, Wrapper)):$/;"	c
Moo	jedi/test/test_evaluate/flask-site-packages/flaskext/moo/__init__.py	/^Moo = 1$/;"	v
MutableMapping	jedi/jedi/evaluate/jedi_typing.py	/^    class MutableMapping(Mapping, abc.MutableMapping):$/;"	c	function:factory
MutableSequence	jedi/jedi/evaluate/jedi_typing.py	/^    class MutableSequence(Sequence, abc.MutableSequence):$/;"	c	function:factory
MutableSet	jedi/jedi/evaluate/jedi_typing.py	/^    class MutableSet(AbstractSet, abc.MutableSet):$/;"	c	function:factory
MyAppend1	vim-airline/t/airline.vim	/^function! MyAppend1(...)$/;"	f
MyAppend2	vim-airline/t/airline.vim	/^function! MyAppend2(...)$/;"	f
MyClass	jedi/test/completion/completion.py	/^class MyClass:$/;"	c
MyException	jedi/test/completion/basic.py	/^class MyException(Exception):$/;"	c
MyFuncref	vim-airline/t/airline.vim	/^function! MyFuncref(...)$/;"	f
MyIgnoreFuncref	vim-airline/t/airline.vim	/^function! MyIgnoreFuncref(...)$/;"	f
NAME	jedi/test/test_parser/test_tokenize.py	/^from jedi.parser.token import NAME, OP, NEWLINE, STRING, INDENT$/;"	i
NERDTree	nerdtree/plugin/NERD_tree.vim	/^augroup NERDTree$/;"	a
NERDTree.AddPathFilter	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.AddPathFilter(callback)$/;"	f
NERDTree.Close	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.Close()$/;"	f
NERDTree.CloseIfQuitOnOpen	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CloseIfQuitOnOpen()$/;"	f
NERDTree.CursorToBookmarkTable	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToBookmarkTable()$/;"	f
NERDTree.CursorToTreeWin	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToTreeWin()$/;"	f
NERDTree.ExistsForBuf	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForBuf()$/;"	f
NERDTree.ExistsForTab	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForTab()$/;"	f
NERDTree.ForCurrentBuf	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ForCurrentBuf()$/;"	f
NERDTree.ForCurrentTab	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ForCurrentTab()$/;"	f
NERDTree.GetWinNum	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.GetWinNum()$/;"	f
NERDTree.IsOpen	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.IsOpen()$/;"	f
NERDTree.MustBeOpen	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.MustBeOpen()$/;"	f
NERDTree.New	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.New(path, type)$/;"	f
NERDTree.PathFilters	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.PathFilters()$/;"	f
NERDTree.changeRoot	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.changeRoot(node)$/;"	f
NERDTree.getRoot	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.getRoot()$/;"	f
NERDTree.isTabTree	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.isTabTree()$/;"	f
NERDTree.isWinTree	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.isWinTree()$/;"	f
NERDTree.previousBuf	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.previousBuf()$/;"	f
NERDTree.render	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.render()$/;"	f
NERDTree.setPreviousBuf	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.setPreviousBuf(bnum)$/;"	f
NERDTreeAddKeyMap	nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddKeyMap(options)$/;"	f
NERDTreeAddMenuItem	nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuItem(options)$/;"	f
NERDTreeAddMenuSeparator	nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuSeparator(...)$/;"	f
NERDTreeAddNode	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeAddNode()$/;"	f
NERDTreeAddPathFilter	nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddPathFilter(callback)$/;"	f
NERDTreeAddSubmenu	nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddSubmenu(options)$/;"	f
NERDTreeCWD	nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeCWD()$/;"	f
NERDTreeCopyNode	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyNode()$/;"	f
NERDTreeDeleteNode	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeDeleteNode()$/;"	f
NERDTreeExecFile	nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFile()$/;"	f
NERDTreeExecFileActive	nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFileActive()$/;"	f
NERDTreeExecuteFile	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFile()$/;"	f
NERDTreeFocus	nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeFocus()$/;"	f
NERDTreeHijackNetrw	nerdtree/plugin/NERD_tree.vim	/^    augroup NERDTreeHijackNetrw$/;"	a
NERDTreeListNode	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeListNode()$/;"	f
NERDTreeListNodeWin32	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeListNodeWin32()$/;"	f
NERDTreeMoveNode	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeMoveNode()$/;"	f
NERDTreeQuickLook	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeQuickLook()$/;"	f
NERDTreeRender	nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeRender()$/;"	f
NERDTreeRevealInFinder	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealInFinder()$/;"	f
NEWLINE	jedi/jedi/parser/__init__.py	/^from jedi.parser.token import (DEDENT, INDENT, ENDMARKER, NEWLINE, NUMBER,$/;"	i
NEWLINE	jedi/jedi/parser/fast.py	/^from jedi.parser.tokenize import (source_tokens, NEWLINE,$/;"	i
NEWLINE	jedi/test/test_parser/test_tokenize.py	/^from jedi.parser.token import NAME, OP, NEWLINE, STRING, INDENT$/;"	i
NFAState	jedi/jedi/parser/pgen2/pgen.py	/^class NFAState(object):$/;"	c
NL	jedi/jedi/parser/token.py	/^NL = N_TOKENS$/;"	v
NORMAL_PRIORITY_CLASS	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^NORMAL_PRIORITY_CLASS = 0x00000020$/;"	v
NOTICE	jedi/jedi/debug.py	/^NOTICE = object()$/;"	v
NOT_CLASS_TYPES	jedi/jedi/evaluate/compiled/fake.py	/^NOT_CLASS_TYPES = ($/;"	v
NO_DEFAULT	jedi/jedi/evaluate/cache.py	/^NO_DEFAULT = object()$/;"	v
NO_DEFAULT	jedi/jedi/evaluate/imports.py	/^from jedi.evaluate.cache import memoize_default, NO_DEFAULT$/;"	i
NO_DEFAULT	jedi/jedi/evaluate/representation.py	/^from jedi.evaluate.cache import memoize_default, CachedMetaClass, NO_DEFAULT$/;"	i
NUMBER	jedi/jedi/parser/__init__.py	/^from jedi.parser.token import (DEDENT, INDENT, ENDMARKER, NEWLINE, NUMBER,$/;"	i
NUMBER	jedi/jedi/parser/tokenize.py	/^from jedi.parser.token import (tok_name, N_TOKENS, ENDMARKER, STRING, NUMBER, opmap,$/;"	i
NUMLOCK_ON	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^NUMLOCK_ON = 0x0020$/;"	v
N_TOKENS	jedi/jedi/parser/tokenize.py	/^from jedi.parser.token import (tok_name, N_TOKENS, ENDMARKER, STRING, NUMBER, opmap,$/;"	i
Name	jedi/docs/_themes/flask_theme_support.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Name	jedi/jedi/parser/tree.py	/^class Name(Leaf):$/;"	c
NameFinder	jedi/jedi/evaluate/finder.py	/^class NameFinder(object):$/;"	c
NameSpace	jedi/test/test_utils.py	/^    class NameSpace(object):$/;"	c	class:TestSetupReadline
Nested	jedi/test/static_analysis/class_simple.py	/^    class Nested():$/;"	c	class:Base
NestedClass	jedi/test/completion/usages.py	/^class NestedClass():$/;"	c
NestedImportModule	jedi/jedi/evaluate/imports.py	/^class NestedImportModule(tree.Module):$/;"	c
Newline	jedi/jedi/parser/tree.py	/^class Newline(LeafWithNewLines):$/;"	c
Node	jedi/jedi/parser/tree.py	/^class Node(BaseNode):$/;"	c
NotCalled	jedi/test/static_analysis/attribute_error.py	/^class NotCalled():$/;"	c
NotFoundError	jedi/jedi/__init__.py	/^from jedi.api import Script, Interpreter, NotFoundError, set_debug_function$/;"	i
NotFoundError	jedi/jedi/api/__init__.py	/^class NotFoundError(Exception):$/;"	c
NotInStdLib	jedi/jedi/evaluate/stdlib.py	/^class NotInStdLib(LookupError):$/;"	c
Notifier.AddListener	nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.AddListener(event, funcname)$/;"	f
Notifier.GetListenersForEvent	nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersForEvent(name)$/;"	f
Notifier.GetListenersMap	nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersMap()$/;"	f
Notifier.NotifyListeners	nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.NotifyListeners(event, path, nerdtree, params)$/;"	f
Number	jedi/docs/_themes/flask_theme_support.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Number	jedi/jedi/parser/tree.py	/^class Number(Literal):$/;"	c
NumpyDocString	jedi/jedi/evaluate/docstrings.py	/^    from numpydoc.docscrape import NumpyDocString$/;"	i
OP	jedi/test/test_parser/test_tokenize.py	/^from jedi.parser.token import NAME, OP, NEWLINE, STRING, INDENT$/;"	i
OPERATOR_KEYWORDS	jedi/jedi/parser/__init__.py	/^OPERATOR_KEYWORDS = 'and', 'for', 'if', 'else', 'in', 'is', 'lambda', 'not', 'or'$/;"	v
ObjectDoesNotExist	jedi/test/completion/thirdparty/django_.py	/^from django.core.exceptions import ObjectDoesNotExist$/;"	i
OnErrorLeaf	jedi/jedi/api/helpers.py	/^class OnErrorLeaf(Exception):$/;"	c
Open	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Open()$/;"	f
OpenMulti	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:OpenMulti(...)$/;"	f
OpenNoMarks	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:OpenNoMarks(md, line)$/;"	f
Opener.New	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.New(path, opts)$/;"	f
Opener._bufInWindows	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._bufInWindows(bnum)$/;"	f
Opener._checkToCloseTree	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._checkToCloseTree(newtab)$/;"	f
Opener._firstUsableWindow	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._firstUsableWindow()$/;"	f
Opener._gotoTargetWin	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._gotoTargetWin()$/;"	f
Opener._isWindowUsable	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._isWindowUsable(winnumber)$/;"	f
Opener._newSplit	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newSplit()$/;"	f
Opener._newVSplit	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newVSplit()$/;"	f
Opener._openDirectory	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openDirectory(node)$/;"	f
Opener._openFile	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openFile()$/;"	f
Opener._previousWindow	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._previousWindow()$/;"	f
Opener._restoreCursorPos	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._restoreCursorPos()$/;"	f
Opener._reuseWindow	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._reuseWindow()$/;"	f
Opener._saveCursorPos	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._saveCursorPos()$/;"	f
Opener.open	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.open(target)$/;"	f
Operator	jedi/docs/_themes/flask_theme_support.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Operator	jedi/jedi/evaluate/compiled/__init__.py	/^from jedi.parser.tree import Param, Base, Operator, zero_position_modifier$/;"	i
Operator	jedi/jedi/parser/tree.py	/^class Operator(Leaf):$/;"	c
Other	jedi/docs/_themes/flask_theme_support.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
PAPER	jedi/docs/Makefile	/^PAPER         =$/;"	m
PAPEROPT_a4	jedi/docs/Makefile	/^PAPEROPT_a4     = -D latex_paper_size=a4$/;"	m
PAPEROPT_letter	jedi/docs/Makefile	/^PAPEROPT_letter = -D latex_paper_size=letter$/;"	m
PBAdd	PopupBuffer.vim/plugin/PopupBuffer.vim	/^function! <SID>PBAdd( fname, bnum )$/;"	f
PBFormat	PopupBuffer.vim/plugin/PopupBuffer.vim	/^func! <SID>PBFormat(fname, bnum)$/;"	f
PBRemove	PopupBuffer.vim/plugin/PopupBuffer.vim	/^func! <SID>PBRemove()$/;"	f
PBShow	PopupBuffer.vim/plugin/PopupBuffer.vim	/^function! <SID>PBShow()$/;"	f
PROCESS_CREATE_PROCESS	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^PROCESS_CREATE_PROCESS = 0x0080$/;"	v
PROCESS_CREATE_THREAD	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^PROCESS_CREATE_THREAD = 0x0002$/;"	v
PROCESS_DUP_HANDLE	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^PROCESS_DUP_HANDLE = 0x0040$/;"	v
PROCESS_INFORMATION	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^class PROCESS_INFORMATION(Structure):$/;"	c
PROCESS_QUERY_INFORMATION	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^PROCESS_QUERY_INFORMATION = 0x0400$/;"	v
PROCESS_QUERY_LIMITED_INFORMATION	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^PROCESS_QUERY_LIMITED_INFORMATION = 0x1000$/;"	v
PROCESS_SET_INFORMATION	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^PROCESS_SET_INFORMATION = 0x0200$/;"	v
PROCESS_SET_QUOTA	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^PROCESS_SET_QUOTA = 0x0100$/;"	v
PROCESS_SUSPEND_RESUME	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^PROCESS_SUSPEND_RESUME = 0x0800$/;"	v
PROCESS_TERMINATE	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^PROCESS_TERMINATE = 0x0001$/;"	v
PROCESS_VM_OPERATION	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^PROCESS_VM_OPERATION = 0x0008$/;"	v
PROCESS_VM_READ	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^PROCESS_VM_READ = 0x0010$/;"	v
PROCESS_VM_WRITE	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^PROCESS_VM_WRITE = 0x0020$/;"	v
Param	jedi/jedi/evaluate/compiled/__init__.py	/^from jedi.parser.tree import Param, Base, Operator, zero_position_modifier$/;"	i
Param	jedi/jedi/parser/tree.py	/^class Param(BaseNode):$/;"	c
ParamListener	jedi/jedi/evaluate/dynamic.py	/^class ParamListener(object):$/;"	c
ParseError	jedi/jedi/evaluate/pep0484.py	/^    Parser, load_grammar, ParseError, ParserWithRecovery, tree$/;"	i
ParseError	jedi/jedi/parser/__init__.py	/^class ParseError(Exception):$/;"	c
ParseError	jedi/test/test_parser/test_pgen2.py	/^from jedi.parser import Parser, load_grammar, ParseError$/;"	i
Parser	jedi/jedi/evaluate/pep0484.py	/^    Parser, load_grammar, ParseError, ParserWithRecovery, tree$/;"	i
Parser	jedi/jedi/parser/__init__.py	/^class Parser(object):$/;"	c
Parser	jedi/test/run.py	/^from jedi.parser import Parser, load_grammar$/;"	i
Parser	jedi/test/test_evaluate/test_precedence.py	/^from jedi.parser import load_grammar, Parser$/;"	i
Parser	jedi/test/test_parser/test_param_splitting.py	/^from jedi.parser import Parser, load_grammar$/;"	i
Parser	jedi/test/test_parser/test_pgen2.py	/^from jedi.parser import Parser, load_grammar, ParseError$/;"	i
ParserCacheItem	jedi/jedi/parser/utils.py	/^class ParserCacheItem(object):$/;"	c
ParserCacheItem	jedi/test/test_cache.py	/^from jedi.parser.utils import ParserCacheItem, ParserPickling$/;"	i
ParserGenerator	jedi/jedi/parser/pgen2/pgen.py	/^class ParserGenerator(object):$/;"	c
ParserNode	jedi/jedi/parser/fast.py	/^class ParserNode(object):$/;"	c
ParserPickling	jedi/jedi/parser/utils.py	/^ParserPickling = ParserPickling()$/;"	v
ParserPickling	jedi/jedi/parser/utils.py	/^class ParserPickling(object):$/;"	c
ParserPickling	jedi/test/test_cache.py	/^ParserPickling = ParserPicklingCls()$/;"	v
ParserPickling	jedi/test/test_cache.py	/^from jedi.parser.utils import ParserCacheItem, ParserPickling$/;"	i
ParserPicklingCls	jedi/test/test_cache.py	/^ParserPicklingCls = type(ParserPickling)$/;"	v
ParserSyntaxError	jedi/jedi/parser/__init__.py	/^class ParserSyntaxError(object):$/;"	c
ParserWithRecovery	jedi/jedi/evaluate/compiled/fake.py	/^from jedi.parser import ParserWithRecovery, load_grammar$/;"	i
ParserWithRecovery	jedi/jedi/evaluate/docstrings.py	/^from jedi.parser import ParserWithRecovery, load_grammar$/;"	i
ParserWithRecovery	jedi/jedi/evaluate/pep0484.py	/^    Parser, load_grammar, ParseError, ParserWithRecovery, tree$/;"	i
ParserWithRecovery	jedi/jedi/evaluate/stdlib.py	/^from jedi.parser import ParserWithRecovery$/;"	i
ParserWithRecovery	jedi/jedi/evaluate/sys_path.py	/^from jedi.parser import ParserWithRecovery$/;"	i
ParserWithRecovery	jedi/jedi/parser/__init__.py	/^class ParserWithRecovery(Parser):$/;"	c
ParserWithRecovery	jedi/jedi/parser/fast.py	/^from jedi.parser import ParserWithRecovery$/;"	i
ParserWithRecovery	jedi/test/test_evaluate/test_absolute_import.py	/^from jedi.parser import ParserWithRecovery, load_grammar$/;"	i
ParserWithRecovery	jedi/test/test_evaluate/test_buildout_detection.py	/^from jedi.parser import ParserWithRecovery, load_grammar$/;"	i
ParserWithRecovery	jedi/test/test_evaluate/test_sys_path.py	/^from jedi.parser import ParserWithRecovery, load_grammar$/;"	i
ParserWithRecovery	jedi/test/test_new_parser.py	/^from jedi.parser import ParserWithRecovery, load_grammar$/;"	i
ParserWithRecovery	jedi/test/test_parser/test_get_code.py	/^from jedi.parser import ParserWithRecovery, load_grammar$/;"	i
ParserWithRecovery	jedi/test/test_parser/test_parser.py	/^from jedi.parser import ParserWithRecovery, load_grammar$/;"	i
ParserWithRecovery	jedi/test/test_parser/test_parser_tree.py	/^from jedi.parser import ParserWithRecovery, load_grammar$/;"	i
ParserWithRecovery	jedi/test/test_parser/test_tokenize.py	/^from jedi.parser import ParserWithRecovery, load_grammar, tokenize$/;"	i
ParserWithRecovery	jedi/test/test_regression.py	/^from jedi.parser import ParserWithRecovery, load_grammar$/;"	i
Path.AbsolutePathFor	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.AbsolutePathFor(str)$/;"	f
Path.CopyingSupported	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.CopyingSupported()$/;"	f
Path.Create	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Create(fullpath)$/;"	f
Path.JoinPathStrings	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.JoinPathStrings(...)$/;"	f
Path.New	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.New(path)$/;"	f
Path.Resolve	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Resolve(path)$/;"	f
Path.Slash	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Slash()$/;"	f
Path.WinToUnixPath	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.WinToUnixPath(pathstr)$/;"	f
Path._escChars	nerdtree/lib/nerdtree/path.vim	/^function! s:Path._escChars()$/;"	f
Path._ignorePatternMatches	nerdtree/lib/nerdtree/path.vim	/^function! s:Path._ignorePatternMatches(pattern)$/;"	f
Path._str	nerdtree/lib/nerdtree/path.vim	/^function! s:Path._str()$/;"	f
Path._strForCd	nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForCd()$/;"	f
Path._strForEdit	nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForEdit()$/;"	f
Path._strForGlob	nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForGlob()$/;"	f
Path._strForUI	nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForUI()$/;"	f
Path.bookmarkNames	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.bookmarkNames()$/;"	f
Path.cacheDisplayString	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.cacheDisplayString() abort$/;"	f
Path.changeToDir	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.changeToDir()$/;"	f
Path.compareTo	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.compareTo(path)$/;"	f
Path.copy	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copy(dest)$/;"	f
Path.copyingWillOverwrite	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copyingWillOverwrite(dest)$/;"	f
Path.createParentDirectories	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.createParentDirectories(path)$/;"	f
Path.delete	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.delete()$/;"	f
Path.displayString	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.displayString()$/;"	f
Path.edit	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.edit()$/;"	f
Path.equals	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.equals(path)$/;"	f
Path.exists	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.exists()$/;"	f
Path.extractDriveLetter	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.extractDriveLetter(fullpath)$/;"	f
Path.getDir	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getDir()$/;"	f
Path.getLastPathComponent	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getLastPathComponent(dirSlash)$/;"	f
Path.getParent	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getParent()$/;"	f
Path.getSortKey	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortKey()$/;"	f
Path.getSortOrderIndex	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortOrderIndex()$/;"	f
Path.ignore	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.ignore(nerdtree)$/;"	f
Path.isAncestor	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isAncestor(path)$/;"	f
Path.isUnder	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnder(path)$/;"	f
Path.isUnixHiddenFile	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenFile()$/;"	f
Path.isUnixHiddenPath	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenPath()$/;"	f
Path.readInfoFromDisk	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.readInfoFromDisk(fullpath)$/;"	f
Path.refresh	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refresh(nerdtree)$/;"	f
Path.refreshFlags	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refreshFlags(nerdtree)$/;"	f
Path.rename	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.rename(newPath)$/;"	f
Path.str	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.str(...)$/;"	f
Path.strTrunk	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.strTrunk()$/;"	f
Path.tabnr	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.tabnr()$/;"	f
PgenParser	jedi/jedi/parser/__init__.py	/^from jedi.parser.pgen2.parse import PgenParser$/;"	i
PgenParser	jedi/jedi/parser/pgen2/parse.py	/^class PgenParser(object):$/;"	c
PositionModifier	jedi/jedi/parser/tree.py	/^class PositionModifier(object):$/;"	c
PrivateVar	jedi/test/completion/classes.py	/^class PrivateVar():$/;"	c
ProgramNode	jedi/test/completion/docstring.py	/^class ProgramNode():$/;"	c
ProgramNode2	jedi/test/completion/docstring.py	/^class ProgramNode2():$/;"	c
PropClass	jedi/test/completion/descriptors.py	/^class PropClass():$/;"	c
PrtAdd	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtAdd(char)$/;"	f
PrtBS	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtBS()$/;"	f
PrtClear	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtClear()$/;"	f
PrtClearCache	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtClearCache()$/;"	f
PrtCurEnd	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurEnd()$/;"	f
PrtCurLeft	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurLeft()$/;"	f
PrtCurRight	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurRight()$/;"	f
PrtCurStart	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurStart()$/;"	f
PrtDelete	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDelete()$/;"	f
PrtDeleteEnt	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDeleteEnt()$/;"	f
PrtDeleteMRU	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDeleteMRU()$/;"	f
PrtDeleteWord	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDeleteWord()$/;"	f
PrtExit	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtExit()$/;"	f
PrtExpandDir	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtExpandDir()$/;"	f
PrtFocusMap	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtFocusMap(char)$/;"	f
PrtHistory	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtHistory(...)$/;"	f
PrtInsert	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtInsert(...)$/;"	f
PrtSelectJump	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtSelectJump(char)$/;"	f
PrtSelectMove	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtSelectMove(dir)$/;"	f
PrtSwitcher	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtSwitcher()$/;"	f
Punctuation	jedi/docs/_themes/flask_theme_support.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
PushBackIterator	jedi/jedi/common.py	/^class PushBackIterator(object):$/;"	c
PyInit_init_extension_module	jedi/test/test_evaluate/init_extension_module/module.c	/^PyMODINIT_FUNC PyInit_init_extension_module(void){$/;"	f
Python	jedi/jedi/_compatibility.py	/^    from itertools import izip_longest as zip_longest  # Python 2$/;"	i
Python3Method	jedi/jedi/_compatibility.py	/^class Python3Method(object):$/;"	c
Python3Method	jedi/jedi/evaluate/representation.py	/^from jedi._compatibility import use_metaclass, unicode, Python3Method, is_py3$/;"	i
Python3Method	jedi/jedi/parser/tree.py	/^from jedi._compatibility import (Python3Method, encoding, is_py3, utf8_repr,$/;"	i
QtGui	jedi/test/completion/thirdparty/PyQt4_.py	/^from PyQt4 import QtGui$/;"	i
RARROW	jedi/jedi/parser/token.py	/^    RARROW = N_TOKENS$/;"	v
REACHABLE	jedi/jedi/evaluate/flow_analysis.py	/^REACHABLE = Status(True, 'reachable')$/;"	v
READLINE_DEBUG	jedi/jedi/utils.py	/^READLINE_DEBUG = False$/;"	v
REALTIME_PRIORITY_CLASS	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^REALTIME_PRIORITY_CLASS = 0x00000100$/;"	v
RED	jedi/jedi/debug.py	/^        RED = ''$/;"	v	class:_lazy_colorama_init.Fore
RESET	jedi/jedi/debug.py	/^        RESET = ''$/;"	v	class:_lazy_colorama_init.Fore
REST_ROLE_PATTERN	jedi/jedi/evaluate/docstrings.py	/^REST_ROLE_PATTERN = re.compile(r':[^`]+:`([^`]+)`')$/;"	v
RIGHT_ALT_PRESSED	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^RIGHT_ALT_PRESSED = 0x0001$/;"	v
RIGHT_CTRL_PRESSED	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^RIGHT_CTRL_PRESSED = 0x0004$/;"	v
Recursion	jedi/test/completion/recursion.py	/^def Recursion():$/;"	f
RecursionDetector	jedi/jedi/evaluate/recursion.py	/^class RecursionDetector(object):$/;"	c
Refactoring	jedi/jedi/refactoring.py	/^class Refactoring(object):$/;"	c
RefactoringCase	jedi/test/refactor.py	/^class RefactoringCase(object):$/;"	c
RegisteredBpDict	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^class RegisteredBpDict(collections.MutableMapping):$/;"	c
RegisteredBreakpoint	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^class RegisteredBreakpoint:$/;"	c
Render	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Render(lines, pat)$/;"	f
Reset	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Reset(args)$/;"	f
ReturnStmt	jedi/jedi/parser/tree.py	/^class ReturnStmt(KeywordStatement):$/;"	c
RevealAccess	jedi/test/completion/descriptors.py	/^class RevealAccess(object):$/;"	c
SCROLLLOCK_ON	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^SCROLLLOCK_ON = 0x0040$/;"	v
SECURITY_ATTRIBUTES	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^class SECURITY_ATTRIBUTES(Structure):$/;"	c
SHIFT_PRESSED	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^SHIFT_PRESSED = 0x0010$/;"	v
SID	nerdtree/autoload/nerdtree/ui_glue.vim	/^function s:SID()$/;"	f
SMALL_RECT	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^class SMALL_RECT(Structure):$/;"	c
SPEED	jedi/jedi/debug.py	/^SPEED = object()$/;"	v
SPHINXBUILD	jedi/docs/Makefile	/^SPHINXBUILD   = sphinx-build$/;"	m
SPHINXOPTS	jedi/docs/Makefile	/^SPHINXOPTS    =$/;"	m
STARTF_FORCEOFFFEEDBACK	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^STARTF_FORCEOFFFEEDBACK = 0x00000080$/;"	v
STARTF_FORCEONFEEDBACK	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^STARTF_FORCEONFEEDBACK = 0x00000040$/;"	v
STARTF_PREVENTPINNING	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^STARTF_PREVENTPINNING = 0x00002000$/;"	v
STARTF_RUNFULLSCREEN	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^STARTF_RUNFULLSCREEN = 0x00000020$/;"	v
STARTF_TITLEISAPPID	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^STARTF_TITLEISAPPID = 0x00001000$/;"	v
STARTF_TITLEISLINKNAME	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^STARTF_TITLEISLINKNAME = 0x00000800$/;"	v
STARTF_USECOUNTCHARS	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^STARTF_USECOUNTCHARS = 0x00000008$/;"	v
STARTF_USEFILLATTRIBUTE	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^STARTF_USEFILLATTRIBUTE = 0x00000010$/;"	v
STARTF_USEHOTKEY	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^STARTF_USEHOTKEY = 0x00000200$/;"	v
STARTF_USEPOSITION	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^STARTF_USEPOSITION = 0x00000004$/;"	v
STARTF_USESHOWWINDOW	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^STARTF_USESHOWWINDOW = 0x00000001$/;"	v
STARTF_USESIZE	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^STARTF_USESIZE = 0x00000002$/;"	v
STARTF_USESTDHANDLES	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^STARTF_USESTDHANDLES = 0x00000100$/;"	v
STARTUPINFO	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^class STARTUPINFO(Structure):$/;"	c
STATEMENT_KEYWORDS	jedi/jedi/parser/__init__.py	/^    'return', 'yield', 'pass', 'continue', 'break'$/;"	v
STD_ERROR_HANDLE	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^STD_ERROR_HANDLE = c_ulong(-12)$/;"	v
STD_INPUT_HANDLE	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^STD_INPUT_HANDLE = c_ulong(-10)$/;"	v
STD_OUTPUT_HANDLE	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^STD_OUTPUT_HANDLE = c_ulong(-11)$/;"	v
STRING	jedi/jedi/parser/tokenize.py	/^from jedi.parser.token import (tok_name, N_TOKENS, ENDMARKER, STRING, NUMBER, opmap,$/;"	i
STRING	jedi/test/test_parser/test_tokenize.py	/^from jedi.parser.token import NAME, OP, NEWLINE, STRING, INDENT$/;"	i
SW_FORCEMINIMIZE	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^SW_FORCEMINIMIZE = 11$/;"	v
SW_HIDE	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^SW_HIDE = 0$/;"	v
SW_MAXIMIZE	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^SW_MAXIMIZE = 3$/;"	v
SW_MINIMIZE	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^SW_MINIMIZE = 6$/;"	v
SW_RESTORE	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^SW_RESTORE = 9$/;"	v
SW_SHOW	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^SW_SHOW = 5$/;"	v
SW_SHOWDEFAULT	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^SW_SHOWDEFAULT = 10$/;"	v
SW_SHOWMAXIMIZED	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^SW_SHOWMAXIMIZED = 3$/;"	v
SW_SHOWMINIMIZED	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^SW_SHOWMINIMIZED = 2$/;"	v
SW_SHOWMINNOACTIVE	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^SW_SHOWMINNOACTIVE = 7$/;"	v
SW_SHOWNA	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^SW_SHOWNA = 8$/;"	v
SW_SHOWNOACTIVATE	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^SW_SHOWNOACTIVATE = 4$/;"	v
SW_SHOWNORMAL	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^SW_SHOWNORMAL = 1$/;"	v
Scope	jedi/jedi/parser/tree.py	/^class Scope(BaseNode, DocstringMixin):$/;"	c
Scr	jedi/test/test_api/test_classes.py	/^    docstr('import jedi\\njedi.Scr', cleandoc(Script.__doc__))$/;"	i
Script	jedi/jedi/__init__.py	/^from jedi.api import Script, Interpreter, NotFoundError, set_debug_function$/;"	i
Script	jedi/jedi/api/__init__.py	/^class Script(object):$/;"	c
Script	jedi/test/test_api/test_call_signatures.py	/^from jedi import Script$/;"	i
Script	jedi/test/test_api/test_classes.py	/^from jedi import Script, defined_names, __doc__ as jedi_doc, names$/;"	i
Script	jedi/test/test_api/test_completion_context.py	/^from jedi import Script$/;"	i
Script	jedi/test/test_api/test_unicode.py	/^from jedi import Script$/;"	i
Script	jedi/test/test_evaluate/test_compiled.py	/^from jedi import Script$/;"	i
Script	jedi/test/test_evaluate/test_representation.py	/^from jedi import Script$/;"	i
Script	jedi/test/test_integration_analysis.py	/^from jedi import Script$/;"	i
Script	jedi/test/test_integration_import.py	/^from jedi import Script$/;"	i
Script	jedi/test/test_integration_keyword.py	/^from jedi import Script$/;"	i
Script	jedi/test/test_integration_stdlib.py	/^from jedi import Script$/;"	i
Script	jedi/test/test_regression.py	/^from jedi import Script$/;"	i
SectionSpec	vim-airline/t/section.vim	/^function! SectionSpec()$/;"	f
SelfReference	jedi/test/completion/pep0484.py	/^class SelfReference:$/;"	c
SelfVars	jedi/test/completion/decorators.py	/^class SelfVars():$/;"	c
Sequence	jedi/jedi/evaluate/jedi_typing.py	/^    class Sequence(abc.Sequence):$/;"	c	function:factory
SetComprehension	jedi/jedi/evaluate/iterable.py	/^class SetComprehension(Comprehension, ArrayMixin):$/;"	c
SetDefTxt	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SetDefTxt()$/;"	f
SetWD	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SetWD(args)$/;"	f
SetattrCls	jedi/test/static_analysis/attribute_warnings.py	/^class SetattrCls():$/;"	c
SideEffectContainer	jedi/test/test_api/test_interpreter.py	/^    class SideEffectContainer():$/;"	c	class:_GlobalNameSpace
Slice	jedi/jedi/evaluate/iterable.py	/^class Slice(object):$/;"	c
Something	jedi/test/completion/functions.py	/^class Something():$/;"	c
SourceFinder	jedi/sith.py	/^class SourceFinder(object):$/;"	c
SpecInputs	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SpecInputs(str)$/;"	f
SplitPattern	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SplitPattern(str)$/;"	f
Stack	jedi/jedi/api/helpers.py	/^class Stack(list):$/;"	c
StaticAnalysisCase	jedi/test/conftest.py	/^class StaticAnalysisCase(object):$/;"	c
Status	jedi/jedi/evaluate/flow_analysis.py	/^class Status(object):$/;"	c
String	jedi/docs/_themes/flask_theme_support.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
String	jedi/jedi/parser/tree.py	/^class String(Literal):$/;"	c
StringIO	jedi/jedi/parser/tokenize.py	/^from io import StringIO$/;"	i
StringIO	jedi/test/run.py	/^from io import StringIO$/;"	i
StringIO	jedi/test/test_parser/test_tokenize.py	/^from io import StringIO$/;"	i
Style	jedi/docs/_themes/flask_theme_support.py	/^from pygments.style import Style$/;"	i
SubClass	jedi/test/completion/classes.py	/^class SubClass(SuperClass):$/;"	c
Super	jedi/test/completion/classes.py	/^class Super(object):$/;"	c
Super	jedi/test/completion/usages.py	/^class Super(object):$/;"	c
SuperClass	jedi/test/completion/classes.py	/^class SuperClass(Base):$/;"	c
SuperInstance	jedi/jedi/evaluate/stdlib.py	/^class SuperInstance(er.Instance):$/;"	c
SuperYeah	jedi/test/completion/arrays.py	/^class SuperYeah(list):$/;"	c
TERMINATOR	Conque-GDB/autoload/conque_term/conque_sole_shared_memory.py	/^    TERMINATOR = None$/;"	v	class:ConqueSoleSharedMemory
TEST_ASSIGNMENTS	jedi/test/run.py	/^TEST_ASSIGNMENTS = 2$/;"	v
TEST_COMPLETIONS	jedi/test/run.py	/^TEST_COMPLETIONS = 0$/;"	v
TEST_DEFINITIONS	jedi/test/run.py	/^TEST_DEFINITIONS = 1$/;"	v
TEST_USAGES	jedi/test/run.py	/^TEST_USAGES = 3$/;"	v
TarFile	jedi/test/static_analysis/descriptors.py	/^class TarFile():$/;"	c
Test	jedi/test/completion/docstring.py	/^class Test(object):$/;"	c
Test	jedi/test/completion/isinstance.py	/^class Test():$/;"	c
Test	jedi/test/completion/lambdas.py	/^class Test(object):$/;"	c
Test	jedi/test/completion/named_param.py	/^class Test(object):$/;"	c
TestAsyncAwait	jedi/test/test_parser/test_pgen2.py	/^class TestAsyncAwait(GrammarTest):$/;"	c
TestCallAndName	jedi/test/test_parser/test_parser.py	/^class TestCallAndName():$/;"	c
TestCallSignatures	jedi/test/test_api/test_call_signatures.py	/^class TestCallSignatures(TestCase):$/;"	c
TestCase	jedi/sith.py	/^class TestCase(object):$/;"	c
TestCase	jedi/test/helpers.py	/^TestCase = unittest.TestCase$/;"	v
TestCase	jedi/test/test_api/test_call_signatures.py	/^from ..helpers import TestCase$/;"	i
TestCase	jedi/test/test_api/test_classes.py	/^from ..helpers import TestCase$/;"	i
TestCase	jedi/test/test_api/test_defined_names.py	/^from ..helpers import TestCase$/;"	i
TestCase	jedi/test/test_api/test_full_name.py	/^from ..helpers import TestCase$/;"	i
TestCase	jedi/test/test_api/test_interpreter.py	/^from ..helpers import TestCase$/;"	i
TestCase	jedi/test/test_evaluate/absolute_import/unittest.py	/^class TestCase(Assertions):$/;"	c
TestCase	jedi/test/test_parser/test_pgen2.py	/^from test.helpers import TestCase$/;"	i
TestCase	jedi/test/test_regression.py	/^from .helpers import TestCase, cwd_at$/;"	i
TestCase	jedi/test/test_speed.py	/^from .helpers import TestCase, cwd_at$/;"	i
TestClass	jedi/test/completion/classes.py	/^class TestClass(object):$/;"	c
TestClass	jedi/test/completion/usages.py	/^class TestClass(Super):$/;"	c
TestClassDef	jedi/test/test_parser/test_pgen2.py	/^class TestClassDef(GrammarTest):$/;"	c
TestClassVar	jedi/test/completion/usages.py	/^class TestClassVar(object):$/;"	c
TestDefinedNames	jedi/test/test_api/test_defined_names.py	/^class TestDefinedNames(TestCase):$/;"	c
TestDict	jedi/test/completion/pep0484_typing.py	/^class TestDict(typing.Dict[str, int]):$/;"	c
TestDocstring	jedi/test/test_evaluate/test_docstring.py	/^class TestDocstring(unittest.TestCase):$/;"	c
TestDriver	jedi/test/test_parser/test_pgen2.py	/^class TestDriver(TestCase):$/;"	c
TestExcept	jedi/test/test_parser/test_pgen2.py	/^class TestExcept(GrammarTest):$/;"	c
TestFullDefinedName	jedi/test/test_api/test_full_name.py	/^class TestFullDefinedName(TestCase):$/;"	c
TestFullNameWithCompletions	jedi/test/test_api/test_full_name.py	/^class TestFullNameWithCompletions(MixinTestFullName, TestCase):$/;"	c
TestFullNameWithGotoDefinitions	jedi/test/test_api/test_full_name.py	/^class TestFullNameWithGotoDefinitions(MixinTestFullName, TestCase):$/;"	c
TestFunctionAnnotations	jedi/test/test_parser/test_pgen2.py	/^class TestFunctionAnnotations(GrammarTest):$/;"	c
TestGotoAssignments	jedi/test/test_api/test_classes.py	/^class TestGotoAssignments(TestCase):$/;"	c
TestImports	jedi/test/test_parser/test_parser.py	/^class TestImports():$/;"	c
TestInstanceVar	jedi/test/completion/usages.py	/^class TestInstanceVar():$/;"	c
TestInterpreterAPI	jedi/test/test_api/test_interpreter.py	/^class TestInterpreterAPI(TestCase):$/;"	c
TestIsDefinition	jedi/test/test_api/test_classes.py	/^class TestIsDefinition(TestCase):$/;"	c
TestLiterals	jedi/test/test_parser/test_pgen2.py	/^class TestLiterals(GrammarTest):$/;"	c
TestMatrixMultiplication	jedi/test/test_parser/test_pgen2.py	/^class TestMatrixMultiplication(GrammarTest):$/;"	c
TestMethods	jedi/test/completion/usages.py	/^class TestMethods(object):$/;"	c
TestNumericLiterals	jedi/test/test_parser/test_pgen2.py	/^class TestNumericLiterals(GrammarTest):$/;"	c
TestParams	jedi/test/test_api/test_call_signatures.py	/^class TestParams(TestCase):$/;"	c
TestParent	jedi/test/test_api/test_classes.py	/^class TestParent(TestCase):$/;"	c
TestParserIdempotency	jedi/test/test_parser/test_pgen2.py	/^class TestParserIdempotency(TestCase):$/;"	c
TestProperty	jedi/test/completion/usages.py	/^class TestProperty:$/;"	c
TestRaiseChanges	jedi/test/test_parser/test_pgen2.py	/^class TestRaiseChanges(GrammarTest):$/;"	c
TestRegression	jedi/test/test_regression.py	/^class TestRegression(TestCase):$/;"	c
TestSetLiteral	jedi/test/test_parser/test_pgen2.py	/^class TestSetLiteral(GrammarTest):$/;"	c
TestSetupReadline	jedi/test/test_utils.py	/^class TestSetupReadline(unittest.TestCase):$/;"	c
TestSpeed	jedi/test/test_speed.py	/^class TestSpeed(TestCase):$/;"	c
TestSubscopes	jedi/test/test_parser/test_parser.py	/^class TestSubscopes():$/;"	c
TestSuper	jedi/test/completion/classes.py	/^class TestSuper(Super):$/;"	c
TestX	jedi/test/completion/classes.py	/^class TestX(object):$/;"	c
TestYieldFrom	jedi/test/test_parser/test_pgen2.py	/^class TestYieldFrom(GrammarTest):$/;"	c
TestsFunctionAndLambdaParsing	jedi/test/test_parser/test_parser_tree.py	/^class TestsFunctionAndLambdaParsing(object):$/;"	c
ToggleByFname	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleByFname()$/;"	f
ToggleFocus	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleFocus()$/;"	f
ToggleKeyLoop	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleKeyLoop()$/;"	f
ToggleMRURelative	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleMRURelative()$/;"	f
ToggleRegex	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleRegex()$/;"	f
ToggleType	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleType(dir)$/;"	f
TokenInfo	jedi/jedi/parser/tokenize.py	/^class TokenInfo(namedtuple('Token', ['type', 'string', 'start_pos', 'prefix'])):$/;"	c
TokenTest	jedi/test/test_parser/test_tokenize.py	/^class TokenTest(unittest.TestCase):$/;"	c
TreeDirNode.AbsoluteTreeRoot	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.AbsoluteTreeRoot()$/;"	f
TreeDirNode.GetSelected	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.GetSelected()$/;"	f
TreeDirNode.New	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.New(path, nerdtree)$/;"	f
TreeDirNode._initChildren	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._initChildren(silent)$/;"	f
TreeDirNode._openInNewTab	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openInNewTab()$/;"	f
TreeDirNode._openRecursively2	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openRecursively2(forceOpen)$/;"	f
TreeDirNode.activate	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.activate(...)$/;"	f
TreeDirNode.addChild	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.addChild(treenode, inOrder)$/;"	f
TreeDirNode.close	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.close()$/;"	f
TreeDirNode.closeChildren	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.closeChildren()$/;"	f
TreeDirNode.createChild	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.createChild(path, inOrder)$/;"	f
TreeDirNode.displayString	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.displayString()$/;"	f
TreeDirNode.findNode	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.findNode(path)$/;"	f
TreeDirNode.getCascade	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getCascade()$/;"	f
TreeDirNode.getChild	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChild(path)$/;"	f
TreeDirNode.getChildByIndex	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildByIndex(indx, visible)$/;"	f
TreeDirNode.getChildCount	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildCount()$/;"	f
TreeDirNode.getChildIndex	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildIndex(path)$/;"	f
TreeDirNode.getDirChildren	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getDirChildren()$/;"	f
TreeDirNode.getVisibleChildCount	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildCount()$/;"	f
TreeDirNode.getVisibleChildren	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildren()$/;"	f
TreeDirNode.hasVisibleChildren	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.hasVisibleChildren()$/;"	f
TreeDirNode.isCascadable	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.isCascadable()$/;"	f
TreeDirNode.open	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.open(...)$/;"	f
TreeDirNode.openAlong	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openAlong(...)$/;"	f
TreeDirNode.openExplorer	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openExplorer()$/;"	f
TreeDirNode.openInNewTab	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openInNewTab(options)$/;"	f
TreeDirNode.openRecursively	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openRecursively()$/;"	f
TreeDirNode.refresh	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refresh()$/;"	f
TreeDirNode.refreshDirFlags	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshDirFlags()$/;"	f
TreeDirNode.refreshFlags	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshFlags()$/;"	f
TreeDirNode.removeChild	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.removeChild(treenode)$/;"	f
TreeDirNode.reveal	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.reveal(path, ...)$/;"	f
TreeDirNode.sortChildren	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.sortChildren()$/;"	f
TreeDirNode.toggleOpen	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.toggleOpen(...)$/;"	f
TreeDirNode.transplantChild	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.transplantChild(newNode)$/;"	f
TreeFileNode.GetRootForTab	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetRootForTab()$/;"	f
TreeFileNode.GetSelected	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetSelected()$/;"	f
TreeFileNode.New	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.New(path, nerdtree)$/;"	f
TreeFileNode._renderToString	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode._renderToString(depth, drawText)$/;"	f
TreeFileNode.activate	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.activate(...)$/;"	f
TreeFileNode.bookmark	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.bookmark(name)$/;"	f
TreeFileNode.cacheParent	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.cacheParent()$/;"	f
TreeFileNode.clearBookmarks	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.clearBookmarks()$/;"	f
TreeFileNode.copy	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.copy(dest)$/;"	f
TreeFileNode.delete	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.delete()$/;"	f
TreeFileNode.displayString	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.displayString()$/;"	f
TreeFileNode.equals	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.equals(treenode)$/;"	f
TreeFileNode.findNode	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findNode(path)$/;"	f
TreeFileNode.findOpenDirSiblingWithVisibleChildren	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findOpenDirSiblingWithVisibleChildren(direction)$/;"	f
TreeFileNode.findSibling	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findSibling(direction)$/;"	f
TreeFileNode.getNerdtree	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.getNerdtree()$/;"	f
TreeFileNode.isRoot	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isRoot()$/;"	f
TreeFileNode.isVisible	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isVisible()$/;"	f
TreeFileNode.open	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.open(...)$/;"	f
TreeFileNode.openInNewTab	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openInNewTab(options)$/;"	f
TreeFileNode.openSplit	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openSplit()$/;"	f
TreeFileNode.openVSplit	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openVSplit()$/;"	f
TreeFileNode.putCursorHere	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.putCursorHere(isJump, recurseUpward)$/;"	f
TreeFileNode.refresh	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refresh()$/;"	f
TreeFileNode.refreshFlags	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refreshFlags()$/;"	f
TreeFileNode.rename	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.rename(newName)$/;"	f
TreeFileNode.renderToString	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.renderToString()$/;"	f
TryStmt	jedi/jedi/parser/tree.py	/^class TryStmt(Flow):$/;"	c
Tuple	jedi/jedi/evaluate/jedi_typing.py	/^    class Tuple(Sequence, tuple):$/;"	c	function:factory
U	jedi/test/completion/pep0484_typing.py	/^from typing import Union as U$/;"	i
UI.IndentWid	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.IndentWid()$/;"	f
UI.MarkupReg	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.MarkupReg()$/;"	f
UI.New	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.New(nerdtree)$/;"	f
UI.UpDirLine	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.UpDirLine()$/;"	f
UI._dumpHelp	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._dumpHelp()$/;"	f
UI._indentLevelFor	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._indentLevelFor(line)$/;"	f
UI._renderBookmarks	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._renderBookmarks()$/;"	f
UI._stripMarkup	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._stripMarkup(line, removeLeadingSpaces)$/;"	f
UI.centerView	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.centerView()$/;"	f
UI.getLineNum	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getLineNum(file_node)$/;"	f
UI.getPath	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getPath(ln)$/;"	f
UI.getRootLineNum	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getRootLineNum()$/;"	f
UI.getShowBookmarks	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowBookmarks()$/;"	f
UI.getShowFiles	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowFiles()$/;"	f
UI.getShowHelp	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowHelp()$/;"	f
UI.getShowHidden	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowHidden()$/;"	f
UI.isIgnoreFilterEnabled	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.isIgnoreFilterEnabled()$/;"	f
UI.isMinimal	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.isMinimal()$/;"	f
UI.render	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.render()$/;"	f
UI.renderViewSavingPosition	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.renderViewSavingPosition()$/;"	f
UI.restoreScreenState	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.restoreScreenState()$/;"	f
UI.saveScreenState	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.saveScreenState()$/;"	f
UI.setShowHidden	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.setShowHidden(val)$/;"	f
UI.toggleHelp	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleHelp()$/;"	f
UI.toggleIgnoreFilter	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleIgnoreFilter()$/;"	f
UI.toggleShowBookmarks	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowBookmarks()$/;"	f
UI.toggleShowFiles	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowFiles()$/;"	f
UI.toggleShowHidden	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowHidden()$/;"	f
UI.toggleZoom	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleZoom()$/;"	f
UNREACHABLE	jedi/jedi/evaluate/flow_analysis.py	/^UNREACHABLE = Status(False, 'unreachable')$/;"	v
UNSURE	jedi/jedi/evaluate/flow_analysis.py	/^UNSURE = Status(None, 'unsure')$/;"	v
UncaughtAttributeError	jedi/jedi/common.py	/^class UncaughtAttributeError(Exception):$/;"	c
Union	jedi/test/completion/pep0484_typing.py	/^from typing import Union$/;"	i
Update	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Update(str)$/;"	f
UserCmd	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:UserCmd(lscmd)$/;"	f
Util1	vim-airline/t/util.vim	/^function! Util1()$/;"	f
Util2	vim-airline/t/util.vim	/^function! Util2()$/;"	f
Util3	vim-airline/t/util.vim	/^function! Util3(...)$/;"	f
V	jedi/test/completion/classes.py	/^class V:$/;"	c
VENVS	jedi/test/test_evaluate/test_sys_path.py	/^VENVS = list(glob($/;"	v
Value	jedi/test/completion/pep0484_typing.py	/^class Value:$/;"	c
ValuesView	jedi/jedi/evaluate/jedi_typing.py	/^    class ValuesView(abc.ValuesView):$/;"	c	function:factory
WARNING	jedi/jedi/debug.py	/^WARNING = object()$/;"	v
WINDOW_BUFFER_SIZE_EVENT	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^WINDOW_BUFFER_SIZE_EVENT = 0x0004$/;"	v
WINDOW_BUFFER_SIZE_RECORD	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^class WINDOW_BUFFER_SIZE_RECORD(Structure):$/;"	c
Warning	jedi/jedi/evaluate/analysis.py	/^class Warning(Error):$/;"	c
Warning	jedi/test/conftest.py	/^from jedi.evaluate.analysis import Warning$/;"	i
WhileStmt	jedi/jedi/parser/tree.py	/^class WhileStmt(Flow):$/;"	c
Whitespace	jedi/docs/_themes/flask_theme_support.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
WithStmt	jedi/jedi/parser/tree.py	/^class WithStmt(Flow):$/;"	c
WithoutMethod	jedi/test/completion/classes.py	/^class WithoutMethod():$/;"	c
Wrapper	jedi/jedi/evaluate/representation.py	/^class Wrapper(tree.Base):$/;"	c
Wrapper	jedi/test/completion/classes.py	/^class Wrapper():$/;"	c
Wrapper2	jedi/test/completion/classes.py	/^class Wrapper2():$/;"	c
X	jedi/test/completion/comprehensions.py	/^class X():$/;"	c
X	jedi/test/completion/context.py	/^class X(Base):$/;"	c
X	jedi/test/completion/decorators.py	/^class X():$/;"	c
X	jedi/test/completion/flow_analysis.py	/^class X():$/;"	c
X	jedi/test/completion/goto.py	/^class X():$/;"	c
X	jedi/test/completion/pep0484.py	/^X = str$/;"	v
X	jedi/test/completion/recursion.py	/^class X():$/;"	c
X	jedi/test/completion/stdlib.py	/^class X(): pass$/;"	c
X	jedi/test/static_analysis/class_simple.py	/^class X(Base.Nested):$/;"	c
XX	jedi/test/test_api/test_interpreter.py	/^    class XX():$/;"	c	function:test_nested_resolve
Y	jedi/test/completion/context.py	/^class Y(X):$/;"	c
Y	jedi/test/completion/pep0484.py	/^Y = int$/;"	v
YELLOW	jedi/jedi/debug.py	/^        YELLOW = ''$/;"	v	class:_lazy_colorama_init.Fore
YieldExpr	jedi/jedi/parser/tree.py	/^class YieldExpr(BaseNode):$/;"	c
_ArrayInstance	jedi/jedi/evaluate/iterable.py	/^class _ArrayInstance(IterableWrapper):$/;"	c
_FLOWS_NEED_COLON	jedi/jedi/parser/fast.py	/^    _FLOWS_NEED_COLON = 'else', 'try', 'except', 'finally'$/;"	v	class:FastParser
_FLOWS_NEED_SPACE	jedi/jedi/parser/fast.py	/^    _FLOWS_NEED_SPACE = 'if', 'elif', 'while', 'with', 'except', 'for'$/;"	v	class:FastParser
_FakeArray	jedi/jedi/evaluate/iterable.py	/^class _FakeArray(Array):$/;"	c
_GlobalNameSpace	jedi/test/test_api/test_interpreter.py	/^class _GlobalNameSpace():$/;"	c
_Help	jedi/jedi/api/classes.py	/^class _Help(object):$/;"	c
_IGNORE_EXECUTE_NODES	jedi/jedi/parser/tree.py	/^    _IGNORE_EXECUTE_NODES = set([$/;"	v	class:Node
_Param	jedi/jedi/api/classes.py	/^class _Param(Definition):$/;"	c
_RecursionNode	jedi/jedi/evaluate/recursion.py	/^class _RecursionNode(object):$/;"	c
_SPECIAL_OBJECTS	jedi/jedi/evaluate/compiled/__init__.py	/^_SPECIAL_OBJECTS = {$/;"	v
_StrangeSlice	jedi/test/completion/arrays.py	/^class _StrangeSlice():$/;"	c
__AUTHOR_EMAIL__	jedi/setup.py	/^__AUTHOR_EMAIL__ = 'davidhalter88@gmail.com'$/;"	v
__AUTHOR__	jedi/setup.py	/^__AUTHOR__ = 'David Halter'$/;"	v
__and__	jedi/jedi/evaluate/flow_analysis.py	/^    def __and__(self, other):$/;"	m	class:Status	file:
__call__	jedi/jedi/evaluate/cache.py	/^    def __call__(self, *args, **kwargs):$/;"	m	class:CachedMetaClass	file:
__call__	jedi/jedi/evaluate/recursion.py	/^    def __call__(self, execution):$/;"	m	class:ExecutionRecursionDetector	file:
__call__	jedi/jedi/parser/fast.py	/^    def __call__(self, grammar, source, module_path=None):$/;"	m	class:CachedFastParser	file:
__call__	jedi/test/completion/classes.py	/^    def __call__(self):$/;"	m	class:CallClass	file:
__call__	jedi/test/completion/decorators.py	/^    def __call__(self, *args, **kwargs):$/;"	m	class:Decorator	file:
__call__	jedi/test/completion/descriptors.py	/^    def __call__(self, *args, **kwargs):$/;"	m	class:Memoize	file:
__call__	jedi/test/completion/named_param.py	/^    def __call__(self, hello):$/;"	m	class:Test	file:
__class__	jedi/test/completion/context.py	/^    def __class__$/;"	m	class:Y	file:
__delitem__	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    def __delitem__(self, key):$/;"	m	class:RegisteredBpDict	file:
__delitem__	Conque-GDB/autoload/conque_term/conque_screen.py	/^    def __delitem__(self, key):$/;"	m	class:ConqueScreen	file:
__eq__	jedi/jedi/api/classes.py	/^    def __eq__(self, other):$/;"	m	class:Definition	file:
__eq__	jedi/jedi/evaluate/analysis.py	/^    def __eq__(self, other):$/;"	m	class:Error	file:
__eq__	jedi/jedi/evaluate/recursion.py	/^    def __eq__(self, other):$/;"	m	class:_RecursionNode	file:
__eq__	jedi/jedi/parser/pgen2/pgen.py	/^    def __eq__(self, other):$/;"	m	class:DFAState	file:
__eq__	jedi/jedi/parser/tree.py	/^    def __eq__(self, other):$/;"	m	class:Keyword	file:
__eq__	jedi/jedi/parser/tree.py	/^    def __eq__(self, other):$/;"	m	class:Operator	file:
__get__	jedi/jedi/_compatibility.py	/^    def __get__(self, obj, objtype):$/;"	m	class:Python3Method	file:
__get__	jedi/jedi/evaluate/compiled/__init__.py	/^    def __get__(self, instance, owner):$/;"	m	class:CheckAttribute	file:
__get__	jedi/test/completion/descriptors.py	/^    def __get__(self, obj, objtype):$/;"	m	class:Memoize	file:
__get__	jedi/test/completion/descriptors.py	/^    def __get__(self, obj, objtype):$/;"	m	class:RevealAccess	file:
__getattr__	jedi/jedi/api/interpreter.py	/^    def __getattr__(self, name):$/;"	m	class:MixedModule	file:
__getattr__	jedi/jedi/evaluate/compiled/mixed.py	/^    def __getattr__(self, name):$/;"	m	class:MixedObject	file:
__getattr__	jedi/jedi/evaluate/imports.py	/^    def __getattr__(self, name):$/;"	m	class:NestedImportModule	file:
__getattr__	jedi/jedi/evaluate/iterable.py	/^    def __getattr__(self, name):$/;"	m	class:Array	file:
__getattr__	jedi/jedi/evaluate/iterable.py	/^    def __getattr__(self, name):$/;"	m	class:BuiltinMethod	file:
__getattr__	jedi/jedi/evaluate/iterable.py	/^    def __getattr__(self, name):$/;"	m	class:Generator	file:
__getattr__	jedi/jedi/evaluate/param.py	/^    def __getattr__(self, name):$/;"	m	class:ExecutedParam	file:
__getattr__	jedi/jedi/evaluate/representation.py	/^    def __getattr__(self, name):$/;"	m	class:Class	file:
__getattr__	jedi/jedi/evaluate/representation.py	/^    def __getattr__(self, name):$/;"	m	class:Function	file:
__getattr__	jedi/jedi/evaluate/representation.py	/^    def __getattr__(self, name):$/;"	m	class:FunctionExecution	file:
__getattr__	jedi/jedi/evaluate/representation.py	/^    def __getattr__(self, name):$/;"	m	class:Instance	file:
__getattr__	jedi/jedi/evaluate/representation.py	/^    def __getattr__(self, name):$/;"	m	class:InstanceElement	file:
__getattr__	jedi/jedi/evaluate/representation.py	/^    def __getattr__(self, name):$/;"	m	class:ModuleWrapper	file:
__getattr__	jedi/test/completion/classes.py	/^    def __getattr__(self, name):$/;"	m	class:GetattrArray	file:
__getattr__	jedi/test/completion/classes.py	/^    def __getattr__(self, name):$/;"	m	class:Wrapper	file:
__getattr__	jedi/test/completion/usages.py	/^    def __getattr__(self, name):$/;"	m	class:NestedClass	file:
__getattr__	jedi/test/static_analysis/attribute_warnings.py	/^    def __getattr__(self, name):$/;"	m	class:Cls	file:
__getattribute__	jedi/test/completion/classes.py	/^    def __getattribute__(self, name):$/;"	m	class:Wrapper2	file:
__getitem__	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    def __getitem__(self, key):$/;"	m	class:RegisteredBpDict	file:
__getitem__	Conque-GDB/autoload/conque_term/conque_screen.py	/^    def __getitem__(self, key):$/;"	m	class:ConqueScreen	file:
__getitem__	jedi/jedi/evaluate/compiled/__init__.py	/^    def __getitem__(self, name):$/;"	m	class:LazyNamesDict	file:
__getitem__	jedi/jedi/evaluate/jedi_typing.py	/^        def __getitem__(self, index):$/;"	m	class:factory.Sequence	file:
__getitem__	jedi/jedi/evaluate/jedi_typing.py	/^        def __getitem__(self, index):$/;"	m	class:factory.Tuple	file:
__getitem__	jedi/jedi/evaluate/jedi_typing.py	/^        def __getitem__(self, item):$/;"	m	class:factory.Mapping	file:
__getitem__	jedi/jedi/evaluate/representation.py	/^    def __getitem__(self, index):$/;"	m	class:InstanceElement	file:
__getitem__	jedi/jedi/evaluate/representation.py	/^    def __getitem__(self, name):$/;"	m	class:LazyInstanceDict	file:
__getitem__	jedi/jedi/parser/fast.py	/^    def __getitem__(self, value):$/;"	m	class:MergedNamesDict	file:
__getitem__	jedi/test/completion/arrays.py	/^    def __getitem__(self, index):$/;"	m	class:GetItem	file:
__getitem__	jedi/test/completion/arrays.py	/^    def __getitem__(self, index):$/;"	m	class:GetItemWithList	file:
__getitem__	jedi/test/completion/arrays.py	/^    def __getitem__(self, index):$/;"	m	class:SuperYeah	file:
__getitem__	jedi/test/completion/arrays.py	/^    def __getitem__(self, sliced):$/;"	m	class:_StrangeSlice	file:
__getitem__	jedi/test/test_api/test_interpreter.py	/^            def __getitem__(self, index):$/;"	m	class:TestInterpreterAPI.test_getitem_side_effects.Foo	file:
__hash__	jedi/jedi/api/classes.py	/^    def __hash__(self):$/;"	m	class:Definition	file:
__hash__	jedi/jedi/evaluate/analysis.py	/^    def __hash__(self):$/;"	m	class:Error	file:
__hash__	jedi/jedi/parser/pgen2/pgen.py	/^    __hash__ = None  # For Py3 compatibility.$/;"	v	class:DFAState
__hash__	jedi/jedi/parser/tree.py	/^    def __hash__(self):$/;"	m	class:Keyword	file:
__hash__	jedi/jedi/parser/tree.py	/^    def __hash__(self):$/;"	m	class:Operator	file:
__init__	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    def __init__(self):$/;"	m	class:RegisteredBpDict
__init__	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    def __init__(self, fname, line, enable):$/;"	m	class:RegisteredBreakpoint
__init__	Conque-GDB/autoload/conque_term/conque_screen.py	/^    def __init__(self):$/;"	m	class:ConqueScreen
__init__	Conque-GDB/autoload/conque_term/conque_sole_shared_memory.py	/^    def __init__(self, mem_size, mem_type, mem_key, fixed_length=False, fill_char=' ', serialize=False, encoding='utf-8'):$/;"	m	class:ConqueSoleSharedMemory
__init__	jedi/jedi/_compatibility.py	/^    def __init__(self, func):$/;"	m	class:Python3Method
__init__	jedi/jedi/_compatibility.py	/^    def __init__(self, loader, string):$/;"	m	class:DummyFile
__init__	jedi/jedi/api/__init__.py	/^    def __init__(self, source, namespaces, **kwds):$/;"	m	class:Interpreter
__init__	jedi/jedi/api/__init__.py	/^    def __init__(self, source=None, line=None, column=None, path=None,$/;"	m	class:Script
__init__	jedi/jedi/api/classes.py	/^    def __init__(self, definition):$/;"	m	class:_Help
__init__	jedi/jedi/api/classes.py	/^    def __init__(self, evaluator, definition):$/;"	m	class:Definition
__init__	jedi/jedi/api/classes.py	/^    def __init__(self, evaluator, executable_name, bracket_start_pos, index, key_name_str):$/;"	m	class:CallSignature
__init__	jedi/jedi/api/classes.py	/^    def __init__(self, evaluator, name):$/;"	m	class:BaseDefinition
__init__	jedi/jedi/api/classes.py	/^    def __init__(self, evaluator, name, stack, like_name_length):$/;"	m	class:Completion
__init__	jedi/jedi/api/completion.py	/^    def __init__(self, evaluator, module, code_lines, position, call_signatures_method):$/;"	m	class:Completion
__init__	jedi/jedi/api/interpreter.py	/^    def __init__(self, evaluator, module, name, value):$/;"	m	class:LazyName
__init__	jedi/jedi/api/interpreter.py	/^    def __init__(self, evaluator, parser_module, namespaces):$/;"	m	class:MixedModule
__init__	jedi/jedi/api/keywords.py	/^    def __init__(self, evaluator, name, pos):$/;"	m	class:Keyword
__init__	jedi/jedi/common.py	/^    def __init__(self, iterator):$/;"	m	class:PushBackIterator
__init__	jedi/jedi/evaluate/__init__.py	/^    def __init__(self, grammar, sys_path=None):$/;"	m	class:Evaluator
__init__	jedi/jedi/evaluate/analysis.py	/^    def __init__(self, name, module_path, start_pos, message=None):$/;"	m	class:Error
__init__	jedi/jedi/evaluate/compiled/__init__.py	/^    def __init__(self, evaluator, compiled_obj, is_instance=False):$/;"	m	class:LazyNamesDict
__init__	jedi/jedi/evaluate/compiled/__init__.py	/^    def __init__(self, evaluator, compiled_obj, name):$/;"	m	class:CompiledName
__init__	jedi/jedi/evaluate/compiled/__init__.py	/^    def __init__(self, evaluator, obj, parent=None):$/;"	m	class:CompiledObject
__init__	jedi/jedi/evaluate/compiled/__init__.py	/^    def __init__(self, func):$/;"	m	class:CheckAttribute
__init__	jedi/jedi/evaluate/compiled/mixed.py	/^    def __init__(self, evaluator, obj, node_name):$/;"	m	class:MixedObject
__init__	jedi/jedi/evaluate/dynamic.py	/^    def __init__(self):$/;"	m	class:ParamListener
__init__	jedi/jedi/evaluate/finder.py	/^    def __init__(self, evaluator, scope, name_str, position=None):$/;"	m	class:NameFinder
__init__	jedi/jedi/evaluate/flow_analysis.py	/^    def __init__(self, value, name):$/;"	m	class:Status
__init__	jedi/jedi/evaluate/helpers.py	/^    def __init__(self, name, parent, level=0):$/;"	m	class:FakeImport
__init__	jedi/jedi/evaluate/helpers.py	/^    def __init__(self, name, parent_callback, is_definition=None):$/;"	m	class:LazyName
__init__	jedi/jedi/evaluate/helpers.py	/^    def __init__(self, name_str, parent=None, start_pos=(0, 0), is_definition=None):$/;"	m	class:FakeName
__init__	jedi/jedi/evaluate/imports.py	/^    def __init__(self, evaluator, import_path, module, level=0):$/;"	m	class:Importer
__init__	jedi/jedi/evaluate/imports.py	/^    def __init__(self, evaluator, name):$/;"	m	class:ImportWrapper
__init__	jedi/jedi/evaluate/imports.py	/^    def __init__(self, module, nested_import):$/;"	m	class:NestedImportModule
__init__	jedi/jedi/evaluate/iterable.py	/^    def __init__(self, builtin, method, builtin_func):$/;"	m	class:BuiltinMethod
__init__	jedi/jedi/evaluate/iterable.py	/^    def __init__(self, evaluator, arrays):$/;"	m	class:MergedArray
__init__	jedi/jedi/evaluate/iterable.py	/^    def __init__(self, evaluator, atom):$/;"	m	class:Array
__init__	jedi/jedi/evaluate/iterable.py	/^    def __init__(self, evaluator, atom):$/;"	m	class:Comprehension
__init__	jedi/jedi/evaluate/iterable.py	/^    def __init__(self, evaluator, container, type):$/;"	m	class:_FakeArray
__init__	jedi/jedi/evaluate/iterable.py	/^    def __init__(self, evaluator, dct):$/;"	m	class:FakeDict
__init__	jedi/jedi/evaluate/iterable.py	/^    def __init__(self, evaluator, func, var_args):$/;"	m	class:Generator
__init__	jedi/jedi/evaluate/iterable.py	/^    def __init__(self, evaluator, instance):$/;"	m	class:_ArrayInstance
__init__	jedi/jedi/evaluate/iterable.py	/^    def __init__(self, evaluator, sequence_values, type):$/;"	m	class:FakeSequence
__init__	jedi/jedi/evaluate/iterable.py	/^    def __init__(self, evaluator, start, stop, step):$/;"	m	class:Slice
__init__	jedi/jedi/evaluate/iterable.py	/^    def __init__(self, evaluator, testlist):$/;"	m	class:ImplicitTuple
__init__	jedi/jedi/evaluate/param.py	/^    def __init__(self, evaluator, argument_node, trailer=None):$/;"	m	class:Arguments
__init__	jedi/jedi/evaluate/param.py	/^    def __init__(self, original_param, var_args, values):$/;"	m	class:ExecutedParam
__init__	jedi/jedi/evaluate/recursion.py	/^    def __init__(self, evaluator):$/;"	m	class:ExecutionRecursionDetector
__init__	jedi/jedi/evaluate/recursion.py	/^    def __init__(self, evaluator):$/;"	m	class:RecursionDetector
__init__	jedi/jedi/evaluate/recursion.py	/^    def __init__(self, evaluator, stmt, parent):$/;"	m	class:_RecursionNode
__init__	jedi/jedi/evaluate/representation.py	/^    def __init__(self, evaluator, base):$/;"	m	class:Class
__init__	jedi/jedi/evaluate/representation.py	/^    def __init__(self, evaluator, base, *args, **kwargs):$/;"	m	class:FunctionExecution
__init__	jedi/jedi/evaluate/representation.py	/^    def __init__(self, evaluator, base, var_args, is_generated=False):$/;"	m	class:Instance
__init__	jedi/jedi/evaluate/representation.py	/^    def __init__(self, evaluator, base, var_args=()):$/;"	m	class:Executed
__init__	jedi/jedi/evaluate/representation.py	/^    def __init__(self, evaluator, func, is_decorated=False):$/;"	m	class:Function
__init__	jedi/jedi/evaluate/representation.py	/^    def __init__(self, evaluator, instance, dct):$/;"	m	class:LazyInstanceDict
__init__	jedi/jedi/evaluate/representation.py	/^    def __init__(self, evaluator, instance, var, is_class_var):$/;"	m	class:InstanceElement
__init__	jedi/jedi/evaluate/representation.py	/^    def __init__(self, evaluator, module, parent_module=None):$/;"	m	class:ModuleWrapper
__init__	jedi/jedi/evaluate/representation.py	/^    def __init__(self, name):$/;"	m	class:GlobalName
__init__	jedi/jedi/evaluate/representation.py	/^    def __init__(self, origin_name, parent):$/;"	m	class:InstanceName
__init__	jedi/jedi/evaluate/stdlib.py	/^    def __init__(self, evaluator, cls):$/;"	m	class:SuperInstance
__init__	jedi/jedi/parser/__init__.py	/^    def __init__(self, grammar, source, module_path=None, tokenizer=None,$/;"	m	class:ParserWithRecovery
__init__	jedi/jedi/parser/__init__.py	/^    def __init__(self, grammar, source, start_symbol='file_input',$/;"	m	class:Parser
__init__	jedi/jedi/parser/__init__.py	/^    def __init__(self, message, position):$/;"	m	class:ParserSyntaxError
__init__	jedi/jedi/parser/fast.py	/^    def __init__(self, dicts):$/;"	m	class:MergedNamesDict
__init__	jedi/jedi/parser/fast.py	/^    def __init__(self, fast_module, parser, source):$/;"	m	class:ParserNode
__init__	jedi/jedi/parser/fast.py	/^    def __init__(self, grammar, source, module_path=None):$/;"	m	class:FastParser
__init__	jedi/jedi/parser/fast.py	/^    def __init__(self, module_path):$/;"	m	class:FastModule
__init__	jedi/jedi/parser/fast.py	/^    def __init__(self, source):$/;"	m	class:FastTokenizer
__init__	jedi/jedi/parser/pgen2/grammar.py	/^    def __init__(self):$/;"	m	class:Grammar
__init__	jedi/jedi/parser/pgen2/parse.py	/^    def __init__(self, grammar, convert_node, convert_leaf, error_recovery, start):$/;"	m	class:PgenParser
__init__	jedi/jedi/parser/pgen2/parse.py	/^    def __init__(self, msg, type, value, start_pos):$/;"	m	class:InternalParseError
__init__	jedi/jedi/parser/pgen2/pgen.py	/^    def __init__(self):$/;"	m	class:NFAState
__init__	jedi/jedi/parser/pgen2/pgen.py	/^    def __init__(self, filename, stream=None):$/;"	m	class:ParserGenerator
__init__	jedi/jedi/parser/pgen2/pgen.py	/^    def __init__(self, nfaset, final):$/;"	m	class:DFAState
__init__	jedi/jedi/parser/tree.py	/^    def __init__(self):$/;"	m	class:PositionModifier
__init__	jedi/jedi/parser/tree.py	/^    def __init__(self, children):$/;"	m	class:BaseNode
__init__	jedi/jedi/parser/tree.py	/^    def __init__(self, children):$/;"	m	class:Class
__init__	jedi/jedi/parser/tree.py	/^    def __init__(self, children):$/;"	m	class:Function
__init__	jedi/jedi/parser/tree.py	/^    def __init__(self, children):$/;"	m	class:Lambda
__init__	jedi/jedi/parser/tree.py	/^    def __init__(self, children):$/;"	m	class:Module
__init__	jedi/jedi/parser/tree.py	/^    def __init__(self, children):$/;"	m	class:Scope
__init__	jedi/jedi/parser/tree.py	/^    def __init__(self, children, parent):$/;"	m	class:Param
__init__	jedi/jedi/parser/tree.py	/^    def __init__(self, position_modifier, original_type, value, start_pos, prefix=''):$/;"	m	class:ErrorLeaf
__init__	jedi/jedi/parser/tree.py	/^    def __init__(self, position_modifier, value, start_pos, prefix=''):$/;"	m	class:Leaf
__init__	jedi/jedi/parser/tree.py	/^    def __init__(self, type, children):$/;"	m	class:Node
__init__	jedi/jedi/parser/utils.py	/^    def __init__(self):$/;"	m	class:ParserPickling
__init__	jedi/jedi/parser/utils.py	/^    def __init__(self, parser, change_time=None):$/;"	m	class:ParserCacheItem
__init__	jedi/jedi/refactoring.py	/^    def __init__(self, change_dct):$/;"	m	class:Refactoring
__init__	jedi/sith.py	/^    def __init__(self, operation, path, line, column, traceback=None):$/;"	m	class:TestCase
__init__	jedi/test/completion/arrays.py	/^    def __init__(self):$/;"	m	class:C
__init__	jedi/test/completion/arrays.py	/^    def __init__(self, el):$/;"	m	class:GetItem
__init__	jedi/test/completion/basic.py	/^    def __init__(self):$/;"	m	class:A
__init__	jedi/test/completion/basic.py	/^    def __init__(self, my_attr):$/;"	m	class:MyException
__init__	jedi/test/completion/classes.py	/^    def __init__(self):$/;"	m	class:A
__init__	jedi/test/completion/classes.py	/^    def __init__(self):$/;"	m	class:PrivateVar
__init__	jedi/test/completion/classes.py	/^    def __init__(self):$/;"	m	class:SubClass
__init__	jedi/test/completion/classes.py	/^    def __init__(self):$/;"	m	class:SuperClass
__init__	jedi/test/completion/classes.py	/^    def __init__(self):$/;"	m	class:WithoutMethod
__init__	jedi/test/completion/classes.py	/^    def __init__(self, a):$/;"	m	class:V
__init__	jedi/test/completion/classes.py	/^    def __init__(self, obj):$/;"	m	class:Wrapper
__init__	jedi/test/completion/classes.py	/^    def __init__(self2, first_param, second_param, third=1.0):$/;"	m	class:TestClass
__init__	jedi/test/completion/comprehensions.py	/^    def __init__(self, bar):$/;"	m	class:X
__init__	jedi/test/completion/decorators.py	/^    def __init__(self):$/;"	m	class:Base
__init__	jedi/test/completion/decorators.py	/^    def __init__(self):$/;"	m	class:MethodDecorators
__init__	jedi/test/completion/decorators.py	/^    def __init__(self):$/;"	m	class:SelfVars
__init__	jedi/test/completion/decorators.py	/^    def __init__(self, func):$/;"	m	class:Decorator
__init__	jedi/test/completion/decorators.py	/^    def __init__(self, func):$/;"	m	class:DecoratorWithoutCall
__init__	jedi/test/completion/descriptors.py	/^    def __init__(self):$/;"	m	class:C
__init__	jedi/test/completion/descriptors.py	/^    def __init__(self, a):$/;"	m	class:E
__init__	jedi/test/completion/descriptors.py	/^    def __init__(self, a):$/;"	m	class:PropClass
__init__	jedi/test/completion/descriptors.py	/^    def __init__(self, func):$/;"	m	class:Memoize
__init__	jedi/test/completion/descriptors.py	/^    def __init__(self, initval=None, name='var'):$/;"	m	class:RevealAccess
__init__	jedi/test/completion/descriptors.py	/^    def __init__(self, x):$/;"	m	class:MemoizeTest
__init__	jedi/test/completion/docstring.py	/^    def __init__(self):$/;"	m	class:Test
__init__	jedi/test/completion/docstring.py	/^    def __init__(self, foo):$/;"	m	class:InBoth
__init__	jedi/test/completion/docstring.py	/^    def __init__(self, foo):$/;"	m	class:InClass
__init__	jedi/test/completion/docstring.py	/^    def __init__(self, foo):$/;"	m	class:InInit
__init__	jedi/test/completion/docstring.py	/^def __init__(foo):$/;"	f
__init__	jedi/test/completion/dynamic_params.py	/^    def __init__(self, a):$/;"	m	class:A
__init__	jedi/test/completion/generators.py	/^    def __init__(self, low, high):$/;"	m	class:Counter
__init__	jedi/test/completion/isinstance.py	/^    def __init__(self, testing):$/;"	m	class:Test
__init__	jedi/test/completion/lambdas.py	/^    def __init__(self, foo=1.0):$/;"	m	class:C
__init__	jedi/test/completion/lambdas.py	/^    def __init__(self, pred=lambda a, b: a):$/;"	m	class:Test
__init__	jedi/test/completion/named_param.py	/^    def __init__(self, hello_other):$/;"	m	class:Test
__init__	jedi/test/completion/ordering.py	/^    def __init__(self):$/;"	m	class:A
__init__	jedi/test/completion/ordering.py	/^    def __init__(self, a):$/;"	m	class:a
__init__	jedi/test/completion/recursion.py	/^    def __init__(self):$/;"	m	class:FooListComp
__init__	jedi/test/completion/recursion.py	/^    def __init__(self):$/;"	m	class:X
__init__	jedi/test/conftest.py	/^    def __init__(self, path):$/;"	m	class:StaticAnalysisCase
__init__	jedi/test/refactor.py	/^    def __init__(self, name, source, line_nr, index, path,$/;"	m	class:RefactoringCase
__init__	jedi/test/run.py	/^    def __init__(self, test_type, correct, line_nr, column, start, line,$/;"	m	class:IntegrationTestCase
__init__	jedi/test/static_analysis/arguments.py	/^    def __init__(self, foo):$/;"	m	class:Instance
__init__	jedi/test/static_analysis/attribute_error.py	/^    def __init__(self, input):$/;"	m	class:Cls
__init__	jedi/test/static_analysis/attribute_warnings.py	/^    def __init__(self, dct):$/;"	m	class:SetattrCls
__init__	jedi/test/test_parser/test_fast_parser.py	/^            def __init__(self, *args):$/;"	m	class:test_split_parts.splits.Mock
__init__	jedi/test/test_utils.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:TestSetupReadline
__instancecheck__	jedi/jedi/parser/tree.py	/^    def __instancecheck__(self, other):$/;"	m	class:IsScopeMeta	file:
__iter__	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    def __iter__(self):$/;"	m	class:RegisteredBpDict	file:
__iter__	jedi/jedi/common.py	/^    def __iter__(self):$/;"	m	class:PushBackIterator	file:
__iter__	jedi/jedi/evaluate/compiled/__init__.py	/^    def __iter__(self):$/;"	m	class:LazyNamesDict	file:
__iter__	jedi/jedi/evaluate/jedi_typing.py	/^        def __iter__(self):$/;"	m	class:factory.ItemsView	file:
__iter__	jedi/jedi/evaluate/jedi_typing.py	/^        def __iter__(self):$/;"	m	class:factory.Iterable	file:
__iter__	jedi/jedi/evaluate/jedi_typing.py	/^        def __iter__(self):$/;"	m	class:factory.ValuesView	file:
__iter__	jedi/jedi/evaluate/representation.py	/^    def __iter__(self):$/;"	m	class:InstanceElement	file:
__iter__	jedi/jedi/parser/fast.py	/^    def __iter__(self):$/;"	m	class:FastTokenizer	file:
__iter__	jedi/jedi/parser/fast.py	/^    def __iter__(self):$/;"	m	class:MergedNamesDict	file:
__iter__	jedi/test/completion/generators.py	/^    def __iter__(self):$/;"	m	class:Counter	file:
__iter__	jedi/test/completion/generators.py	/^    def __iter__(self):$/;"	m	class:Get	file:
__jedi_version__	jedi/jedi/api/replstartup.py	/^from jedi import __version__ as __jedi_version__$/;"	i
__keytransform__	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    def __keytransform__(self, key):$/;"	m	class:RegisteredBpDict	file:
__len__	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    def __len__(self):$/;"	m	class:RegisteredBpDict	file:
__len__	Conque-GDB/autoload/conque_term/conque_screen.py	/^    def __len__(self):$/;"	m	class:ConqueScreen	file:
__len__	jedi/jedi/evaluate/iterable.py	/^    def __len__(self):$/;"	m	class:MergedArray	file:
__main__	jedi/jedi/utils.py	/^import __main__$/;"	i
__ne__	jedi/jedi/api/classes.py	/^    def __ne__(self, other):$/;"	m	class:Definition	file:
__ne__	jedi/jedi/evaluate/analysis.py	/^    def __ne__(self, other):$/;"	m	class:Error	file:
__ne__	jedi/jedi/parser/tree.py	/^    def __ne__(self, other):$/;"	m	class:Keyword	file:
__ne__	jedi/jedi/parser/tree.py	/^    def __ne__(self, other):$/;"	m	class:Operator	file:
__next__	jedi/jedi/common.py	/^    def __next__(self):$/;"	m	class:PushBackIterator	file:
__next__	jedi/jedi/evaluate/jedi_typing.py	/^        def __next__(self):$/;"	m	class:factory.Iterator	file:
__next__	jedi/jedi/parser/fast.py	/^    def __next__(self):$/;"	m	class:FastTokenizer	file:
__next__	jedi/test/completion/generators.py	/^    def __next__(self):$/;"	m	class:Counter	file:
__path__	jedi/test/test_evaluate/namespace_package/ns1/pkg/__init__.py	/^    __path__ = pkgutil.extend_path(__path__, __name__)$/;"	v
__repr__	jedi/jedi/api/__init__.py	/^    def __repr__(self):$/;"	m	class:Script	file:
__repr__	jedi/jedi/api/classes.py	/^    def __repr__(self):$/;"	m	class:BaseDefinition	file:
__repr__	jedi/jedi/api/classes.py	/^    def __repr__(self):$/;"	m	class:CallSignature	file:
__repr__	jedi/jedi/api/classes.py	/^    def __repr__(self):$/;"	m	class:Completion	file:
__repr__	jedi/jedi/api/keywords.py	/^    def __repr__(self):$/;"	m	class:Keyword	file:
__repr__	jedi/jedi/evaluate/analysis.py	/^    def __repr__(self):$/;"	m	class:Error	file:
__repr__	jedi/jedi/evaluate/compiled/__init__.py	/^    def __repr__(self):$/;"	m	class:CompiledName	file:
__repr__	jedi/jedi/evaluate/compiled/__init__.py	/^    def __repr__(self):$/;"	m	class:CompiledObject	file:
__repr__	jedi/jedi/evaluate/compiled/mixed.py	/^    def __repr__(self):$/;"	m	class:MixedObject	file:
__repr__	jedi/jedi/evaluate/flow_analysis.py	/^    def __repr__(self):$/;"	m	class:Status	file:
__repr__	jedi/jedi/evaluate/imports.py	/^    def __repr__(self):$/;"	m	class:NestedImportModule	file:
__repr__	jedi/jedi/evaluate/iterable.py	/^    def __repr__(self):$/;"	m	class:Array	file:
__repr__	jedi/jedi/evaluate/iterable.py	/^    def __repr__(self):$/;"	m	class:Comprehension	file:
__repr__	jedi/jedi/evaluate/iterable.py	/^    def __repr__(self):$/;"	m	class:Generator	file:
__repr__	jedi/jedi/evaluate/param.py	/^    def __repr__(self):$/;"	m	class:Arguments	file:
__repr__	jedi/jedi/evaluate/representation.py	/^    def __repr__(self):$/;"	m	class:Class	file:
__repr__	jedi/jedi/evaluate/representation.py	/^    def __repr__(self):$/;"	m	class:Function	file:
__repr__	jedi/jedi/evaluate/representation.py	/^    def __repr__(self):$/;"	m	class:FunctionExecution	file:
__repr__	jedi/jedi/evaluate/representation.py	/^    def __repr__(self):$/;"	m	class:Instance	file:
__repr__	jedi/jedi/evaluate/representation.py	/^    def __repr__(self):$/;"	m	class:InstanceElement	file:
__repr__	jedi/jedi/evaluate/representation.py	/^    def __repr__(self):$/;"	m	class:ModuleWrapper	file:
__repr__	jedi/jedi/parser/__init__.py	/^    def __repr__(self):$/;"	m	class:ParserWithRecovery	file:
__repr__	jedi/jedi/parser/fast.py	/^    def __repr__(self):$/;"	m	class:FastModule	file:
__repr__	jedi/jedi/parser/fast.py	/^    def __repr__(self):$/;"	m	class:ParserNode	file:
__repr__	jedi/jedi/parser/tokenize.py	/^    def __repr__(self):$/;"	m	class:TokenInfo	file:
__repr__	jedi/jedi/parser/tree.py	/^    def __repr__(self):$/;"	m	class:BaseNode	file:
__repr__	jedi/jedi/parser/tree.py	/^    def __repr__(self):$/;"	m	class:ErrorLeaf	file:
__repr__	jedi/jedi/parser/tree.py	/^    def __repr__(self):$/;"	m	class:Lambda	file:
__repr__	jedi/jedi/parser/tree.py	/^    def __repr__(self):$/;"	m	class:Leaf	file:
__repr__	jedi/jedi/parser/tree.py	/^    def __repr__(self):$/;"	m	class:LeafWithNewLines	file:
__repr__	jedi/jedi/parser/tree.py	/^    def __repr__(self):$/;"	m	class:Name	file:
__repr__	jedi/jedi/parser/tree.py	/^    def __repr__(self):$/;"	m	class:Newline	file:
__repr__	jedi/jedi/parser/tree.py	/^    def __repr__(self):$/;"	m	class:Node	file:
__repr__	jedi/jedi/parser/tree.py	/^    def __repr__(self):$/;"	m	class:Param	file:
__repr__	jedi/jedi/parser/tree.py	/^    def __repr__(self):$/;"	m	class:Scope	file:
__repr__	jedi/test/completion/context.py	/^    def __repr__$/;"	m	class:Y	file:
__repr__	jedi/test/conftest.py	/^    def __repr__(self):$/;"	m	class:StaticAnalysisCase	file:
__repr__	jedi/test/refactor.py	/^    def __repr__(self):$/;"	m	class:RefactoringCase	file:
__repr__	jedi/test/run.py	/^    def __repr__(self):$/;"	m	class:IntegrationTestCase	file:
__set__	jedi/test/completion/descriptors.py	/^    def __set__(self, obj, val):$/;"	m	class:RevealAccess	file:
__setitem__	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    def __setitem__(self, key, r_bp):$/;"	m	class:RegisteredBpDict	file:
__setitem__	Conque-GDB/autoload/conque_term/conque_screen.py	/^    def __setitem__(self, key, value):$/;"	m	class:ConqueScreen	file:
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ('children', 'parent')$/;"	v	class:BaseNode
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ('listeners',)$/;"	v	class:Function
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ('names_dict',)$/;"	v	class:Scope
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ('original_type')$/;"	v	class:ErrorLeaf
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ('path', 'global_names', 'used_names', '_name')$/;"	v	class:Module
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ('position_modifier', 'value', 'parent', '_start_pos', 'prefix')$/;"	v	class:Leaf
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ('type',)$/;"	v	class:Node
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:AssertStmt
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:Base
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:Class
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:ClassOrFunc
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:CompFor
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:Decorator
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:Dedent
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:DocstringMixin
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:EndMarker
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:ErrorNode
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:ExprStmt
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:Flow
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:ForStmt
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:GlobalStmt
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:IfStmt
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:Import
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:ImportFrom
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:ImportName
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:Indent
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:Keyword
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:KeywordStatement
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:Lambda
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:LeafWithNewLines
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:Literal
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:Name
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:Newline
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:Number
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:Operator
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:ReturnStmt
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:String
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:TryStmt
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:WhileStmt
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:WithStmt
__slots__	jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:YieldExpr
__str__	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    def __str__(self):$/;"	m	class:RegisteredBreakpoint	file:
__str__	jedi/jedi/evaluate/analysis.py	/^    def __str__(self):$/;"	m	class:Error	file:
__str__	jedi/jedi/parser/tree.py	/^    def __str__(self):$/;"	m	class:Name	file:
__str__	jedi/jedi/parser/tree.py	/^    def __str__(self):$/;"	m	class:Operator	file:
__unicode__	jedi/jedi/evaluate/analysis.py	/^    def __unicode__(self):$/;"	m	class:Error	file:
__unicode__	jedi/jedi/parser/tree.py	/^    def __unicode__(self):$/;"	m	class:Name	file:
__version__	jedi/jedi/__init__.py	/^__version__ = '0.10.0'$/;"	v
__version__	jedi/jedi/utils.py	/^    from jedi import __version__$/;"	i
_a_generator	jedi/jedi/evaluate/compiled/__init__.py	/^def _a_generator(foo):$/;"	f
_add_error	jedi/jedi/evaluate/imports.py	/^def _add_error(evaluator, name, message=None):$/;"	f
_analysis	jedi/jedi/api/__init__.py	/^    def _analysis(self):$/;"	m	class:Script
_as_name_tuples	jedi/jedi/parser/tree.py	/^    def _as_name_tuples(self):$/;"	m	class:ImportFrom
_bool_is_definitions	jedi/test/test_api/test_classes.py	/^    def _bool_is_definitions(self, source):$/;"	m	class:TestIsDefinition
_break_check	jedi/jedi/evaluate/flow_analysis.py	/^def _break_check(evaluator, stmt, base_scope, element_scope):$/;"	f
_builtins	jedi/jedi/evaluate/compiled/__init__.py	/^from jedi._compatibility import builtins as _builtins, unicode$/;"	i
_cache_directory	jedi/jedi/parser/utils.py	/^    def _cache_directory(self):$/;"	m	class:ParserPickling
_cache_directory	jedi/jedi/settings.py	/^    _cache_directory = os.path.join('~', 'Library', 'Caches', 'Jedi')$/;"	v
_cache_directory	jedi/jedi/settings.py	/^    _cache_directory = os.path.join(os.getenv('APPDATA') or '~', 'Jedi',$/;"	v
_cache_directory	jedi/jedi/settings.py	/^    _cache_directory = os.path.join(os.getenv('XDG_CACHE_HOME') or '~\/.cache',$/;"	v
_check_array_additions	jedi/jedi/evaluate/iterable.py	/^def _check_array_additions(evaluator, compare_array, module, is_list):$/;"	f
_check_for_exception_catch	jedi/jedi/evaluate/analysis.py	/^def _check_for_exception_catch(evaluator, jedi_obj, exception, payload=None):$/;"	f
_check_for_setattr	jedi/jedi/evaluate/analysis.py	/^def _check_for_setattr(instance):$/;"	f
_check_getattr	jedi/jedi/evaluate/finder.py	/^    def _check_getattr(self, inst):$/;"	m	class:NameFinder
_check_if	jedi/jedi/evaluate/flow_analysis.py	/^def _check_if(evaluator, node):$/;"	f
_check_isinstance_type	jedi/jedi/evaluate/finder.py	/^def _check_isinstance_type(evaluator, element, search_name):$/;"	f
_check_module	jedi/jedi/evaluate/sys_path.py	/^def _check_module(evaluator, module):$/;"	f
_check_number	jedi/test/test_api/test_api.py	/^def _check_number(source, result='float'):$/;"	f
_check_recursion	jedi/jedi/evaluate/recursion.py	/^    def _check_recursion(self):$/;"	m	class:RecursionDetector
_check_speed	jedi/test/test_speed.py	/^    def _check_speed(time_per_run, number=4, run_warm=True):$/;"	m	class:TestSpeed
_class_var	jedi/test/completion/decorators.py	/^    _class_var = 1$/;"	v	class:MethodDecorators
_clean_names	jedi/jedi/evaluate/finder.py	/^    def _clean_names(self, names):$/;"	m	class:NameFinder
_close	jedi/jedi/parser/fast.py	/^    def _close(self):$/;"	m	class:FastTokenizer
_cls	jedi/jedi/evaluate/compiled/__init__.py	/^    def _cls(self):$/;"	m	class:CompiledObject
_compatibility	jedi/jedi/evaluate/pep0484.py	/^from jedi import _compatibility$/;"	i
_compile	jedi/jedi/parser/tokenize.py	/^def _compile(expr):$/;"	f
_complete	jedi/jedi/api/classes.py	/^    def _complete(self, like_name):$/;"	m	class:Completion
_create_from_name	jedi/jedi/evaluate/compiled/__init__.py	/^def _create_from_name(evaluator, module, parent, name):$/;"	f
_create_params	jedi/jedi/parser/tree.py	/^def _create_params(parent, argslist_list):$/;"	f
_debug_indent	jedi/jedi/debug.py	/^_debug_indent = 0$/;"	v
_def	jedi/test/test_api/test_classes.py	/^    def _def(self, source, index=-1):$/;"	m	class:TestIsDefinition
_defined_names	jedi/jedi/parser/tree.py	/^def _defined_names(current):$/;"	f
_detect_django_path	jedi/jedi/evaluate/sys_path.py	/^def _detect_django_path(module_path):$/;"	f
_do_import	jedi/jedi/evaluate/imports.py	/^    def _do_import(self, import_path, sys_path):$/;"	m	class:Importer
_dotted_as_names	jedi/jedi/parser/tree.py	/^    def _dotted_as_names(self):$/;"	m	class:ImportName
_element_calculate	jedi/jedi/evaluate/precedence.py	/^def _element_calculate(evaluator, left, operator, right):$/;"	f
_error_argument_count	jedi/jedi/evaluate/param.py	/^def _error_argument_count(func, actual_count):$/;"	f
_eval_atom	jedi/jedi/evaluate/__init__.py	/^    def _eval_atom(self, atom):$/;"	m	class:Evaluator
_eval_element_cached	jedi/jedi/evaluate/__init__.py	/^    def _eval_element_cached(self, element):$/;"	m	class:Evaluator
_eval_element_if_evaluated	jedi/jedi/evaluate/__init__.py	/^    def _eval_element_if_evaluated(self, element):$/;"	m	class:Evaluator
_eval_element_not_cached	jedi/jedi/evaluate/__init__.py	/^    def _eval_element_not_cached(self, element):$/;"	m	class:Evaluator
_eval_node	jedi/jedi/evaluate/iterable.py	/^    def _eval_node(self, index=0):$/;"	m	class:Comprehension
_eval_param	jedi/jedi/evaluate/finder.py	/^def _eval_param(evaluator, param, scope):$/;"	f
_eval_yield	jedi/jedi/evaluate/representation.py	/^    def _eval_yield(self, yield_expr):$/;"	m	class:FunctionExecution
_evaluate_for_annotation	jedi/jedi/evaluate/pep0484.py	/^def _evaluate_for_annotation(evaluator, annotation, index=None):$/;"	f
_evaluate_for_statement_string	jedi/jedi/evaluate/docstrings.py	/^def _evaluate_for_statement_string(evaluator, string, module):$/;"	f
_evaluator	jedi/test/test_evaluate/test_compiled.py	/^def _evaluator():$/;"	f
_execute_array_values	jedi/jedi/evaluate/docstrings.py	/^def _execute_array_values(evaluator, array):$/;"	f
_execute_code	jedi/jedi/evaluate/sys_path.py	/^def _execute_code(module_path, code):$/;"	f
_execute_function	jedi/jedi/evaluate/compiled/__init__.py	/^    def _execute_function(self, params):$/;"	m	class:CompiledObject
_execute_types_in_stmt	jedi/jedi/evaluate/docstrings.py	/^def _execute_types_in_stmt(evaluator, stmt):$/;"	f
_faked	jedi/jedi/evaluate/compiled/fake.py	/^def _faked(module, obj, name):$/;"	f
_fields_	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("BaseAddress",       c_void_p),$/;"	v	class:MEMORY_BASIC_INFORMATION
_fields_	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("Char", CHAR_UNION),$/;"	v	class:CHAR_INFO
_fields_	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("EventType", c_short),$/;"	v	class:INPUT_RECORD
_fields_	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("KeyEvent", KEY_EVENT_RECORD),$/;"	v	class:INPUT_UNION
_fields_	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("Left", c_short),$/;"	v	class:SMALL_RECT
_fields_	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("Length", c_ulong),$/;"	v	class:SECURITY_ATTRIBUTES
_fields_	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("UnicodeChar", c_wchar),$/;"	v	class:CHAR_UNION
_fields_	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("X", c_short),$/;"	v	class:COORD
_fields_	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("bKeyDown", c_byte),$/;"	v	class:KEY_EVENT_RECORD
_fields_	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("bSetFocus", c_byte)]$/;"	v	class:FOCUS_EVENT_RECORD
_fields_	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("cb",            c_ulong),$/;"	v	class:STARTUPINFO
_fields_	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("dwCommandId", c_uint)]$/;"	v	class:MENU_EVENT_RECORD
_fields_	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("dwMousePosition", COORD),$/;"	v	class:MOUSE_EVENT_RECORD
_fields_	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("dwSize", COORD),$/;"	v	class:CONSOLE_SCREEN_BUFFER_INFO
_fields_	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("dwSize", COORD)]$/;"	v	class:WINDOW_BUFFER_SIZE_RECORD
_fields_	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("hProcess",    c_void_p),$/;"	v	class:PROCESS_INFORMATION
_files	jedi/sith.py	/^    _files = None$/;"	v	class:SourceFinder
_find_type_from_comment_hint	jedi/jedi/evaluate/pep0484.py	/^def _find_type_from_comment_hint(evaluator, node, varlist, name):$/;"	f
_finish_dedents	jedi/jedi/parser/fast.py	/^    def _finish_dedents(self):$/;"	m	class:FastTokenizer
_fix_forward_reference	jedi/jedi/evaluate/pep0484.py	/^def _fix_forward_reference(evaluator, node):$/;"	f
_flush_index	jedi/jedi/parser/utils.py	/^    def _flush_index(self):$/;"	m	class:ParserPickling
_follow_param	jedi/jedi/evaluate/stdlib.py	/^def _follow_param(evaluator, arguments, index):$/;"	f
_follow_statements_imports	jedi/jedi/api/classes.py	/^    def _follow_statements_imports(self):$/;"	m	class:BaseDefinition
_follow_statements_imports	jedi/jedi/api/classes.py	/^    def _follow_statements_imports(self):$/;"	m	class:Completion
_generate_name	jedi/jedi/evaluate/imports.py	/^    def _generate_name(self, name):$/;"	m	class:Importer
_get_buildout_scripts	jedi/jedi/evaluate/sys_path.py	/^def _get_buildout_scripts(module_path):$/;"	f
_get_call_signature_details_from_error_node	jedi/jedi/api/helpers.py	/^def _get_call_signature_details_from_error_node(node, position):$/;"	f
_get_calling_var_args	jedi/jedi/evaluate/param.py	/^def _get_calling_var_args(evaluator, var_args):$/;"	f
_get_class	jedi/jedi/evaluate/compiled/__init__.py	/^    def _get_class(self):$/;"	m	class:CompiledObject
_get_class_context_completions	jedi/jedi/api/completion.py	/^    def _get_class_context_completions(self, is_function=True):$/;"	m	class:Completion
_get_code	jedi/jedi/api/helpers.py	/^def _get_code(code_lines, start_pos, end_pos):$/;"	f
_get_code_for_stack	jedi/jedi/api/helpers.py	/^def _get_code_for_stack(code_lines, module, position):$/;"	f
_get_comp_for	jedi/jedi/evaluate/iterable.py	/^    def _get_comp_for(self):$/;"	m	class:Comprehension
_get_comp_for	jedi/jedi/evaluate/iterable.py	/^    def _get_comp_for(self):$/;"	m	class:DictComprehension
_get_comprehension	jedi/jedi/evaluate/iterable.py	/^    def _get_comprehension(self):$/;"	m	class:Comprehension
_get_context_completions	jedi/jedi/api/completion.py	/^    def _get_context_completions(self):$/;"	m	class:Completion
_get_faked	jedi/jedi/evaluate/compiled/fake.py	/^def _get_faked(module, obj, name=None):$/;"	f
_get_func_self_name	jedi/jedi/evaluate/representation.py	/^    def _get_func_self_name(self, func):$/;"	m	class:Instance
_get_global_stmt_scopes	jedi/jedi/evaluate/finder.py	/^def _get_global_stmt_scopes(evaluator, global_stmt, name):$/;"	f
_get_hashed_path	jedi/jedi/parser/utils.py	/^    def _get_hashed_path(self, path):$/;"	m	class:ParserPickling
_get_importer_names	jedi/jedi/api/completion.py	/^    def _get_importer_names(self, names, level=0, only_modules=True):$/;"	m	class:Completion
_get_index_and_key	jedi/jedi/api/helpers.py	/^def _get_index_and_key(nodes, position):$/;"	f
_get_init_directory	jedi/jedi/evaluate/representation.py	/^    def _get_init_directory(self):$/;"	m	class:ModuleWrapper
_get_keyword_completion_names	jedi/jedi/api/completion.py	/^    def _get_keyword_completion_names(self, keywords_):$/;"	m	class:Completion
_get_method_execution	jedi/jedi/evaluate/representation.py	/^    def _get_method_execution(self, func):$/;"	m	class:Instance
_get_module	jedi/jedi/api/__init__.py	/^    def _get_module(self):$/;"	m	class:Interpreter
_get_module	jedi/jedi/api/__init__.py	/^    def _get_module(self):$/;"	m	class:Script
_get_module_names	jedi/jedi/evaluate/imports.py	/^    def _get_module_names(self, search_path=None):$/;"	m	class:Importer
_get_names_dict	jedi/jedi/evaluate/iterable.py	/^    def _get_names_dict(self, names_dict):$/;"	m	class:IterableWrapper
_get_nested_import_name	jedi/jedi/evaluate/imports.py	/^    def _get_nested_import_name(self):$/;"	m	class:NestedImportModule
_get_paramlist_code	jedi/jedi/parser/tree.py	/^    def _get_paramlist_code(self):$/;"	m	class:Function
_get_paramlist_code	jedi/jedi/parser/tree.py	/^    def _get_paramlist_code(self):$/;"	m	class:Lambda
_get_params	jedi/jedi/evaluate/representation.py	/^    def _get_params(self):$/;"	m	class:FunctionExecution
_get_parent_dir_with_file	jedi/jedi/evaluate/sys_path.py	/^def _get_parent_dir_with_file(path, filename):$/;"	f
_get_parent_dir_with_file	jedi/test/test_evaluate/test_buildout_detection.py	/^from jedi.evaluate.sys_path import (_get_parent_dir_with_file,$/;"	i
_get_path	jedi/jedi/parser/utils.py	/^    def _get_path(self, file):$/;"	m	class:ParserPickling
_get_paths_from_buildout_script	jedi/jedi/evaluate/sys_path.py	/^def _get_paths_from_buildout_script(evaluator, buildout_script):$/;"	f
_get_prefix	jedi/jedi/parser/fast.py	/^    def _get_prefix(self):$/;"	m	class:FastTokenizer
_get_sys_path_with_egglinks	jedi/jedi/evaluate/sys_path.py	/^def _get_sys_path_with_egglinks(sys_path):$/;"	f
_get_typing_replacement_module	jedi/jedi/evaluate/pep0484.py	/^def _get_typing_replacement_module():$/;"	f
_get_venv_path_dirs	jedi/jedi/evaluate/sys_path.py	/^def _get_venv_path_dirs(venv):$/;"	f
_get_venv_sitepackages	jedi/jedi/evaluate/sys_path.py	/^def _get_venv_sitepackages(venv):$/;"	f
_global_completions	jedi/jedi/api/completion.py	/^    def _global_completions(self):$/;"	m	class:Completion
_goto	jedi/jedi/api/__init__.py	/^    def _goto(self):$/;"	m	class:Script
_imitate_items	jedi/jedi/evaluate/iterable.py	/^    def _imitate_items(self):$/;"	m	class:ArrayMixin
_imitate_items	jedi/jedi/evaluate/iterable.py	/^    def _imitate_items(self):$/;"	m	class:DictComprehension
_imitate_values	jedi/jedi/evaluate/iterable.py	/^    def _imitate_values(self):$/;"	m	class:ArrayMixin
_implemented	jedi/jedi/evaluate/stdlib.py	/^_implemented = {$/;"	v
_indent	jedi/jedi/parser/fast.py	/^    def _indent(self):$/;"	m	class:ParserNode
_index	jedi/jedi/parser/utils.py	/^    def _index(self):$/;"	m	class:ParserPickling
_init_pathinfo	jedi/jedi/evaluate/site.py	/^def _init_pathinfo(sys_path):$/;"	f
_inited	jedi/jedi/debug.py	/^_inited=False$/;"	v
_invalidate_star_import_cache_module	jedi/jedi/cache.py	/^def _invalidate_star_import_cache_module(module, only_main=False):$/;"	f
_is_list	jedi/jedi/evaluate/precedence.py	/^def _is_list(obj):$/;"	f
_is_number	jedi/jedi/evaluate/precedence.py	/^def _is_number(obj):$/;"	f
_is_on_comment	jedi/jedi/api/helpers.py	/^def _is_on_comment(leaf, position):$/;"	f
_is_tuple	jedi/jedi/evaluate/precedence.py	/^def _is_tuple(obj):$/;"	f
_items	jedi/jedi/evaluate/iterable.py	/^    def _items(self):$/;"	m	class:Array
_items	jedi/jedi/evaluate/iterable.py	/^    def _items(self):$/;"	m	class:FakeDict
_items	jedi/jedi/evaluate/iterable.py	/^    def _items(self):$/;"	m	class:FakeSequence
_items	jedi/jedi/evaluate/iterable.py	/^    def _items(self):$/;"	m	class:ImplicitTuple
_items	jedi/jedi/evaluate/iterable.py	/^    def _items(self):$/;"	m	class:MergedArray
_iterate	jedi/jedi/evaluate/iterable.py	/^    def _iterate(self):$/;"	m	class:Comprehension
_iterate_star_args	jedi/jedi/evaluate/param.py	/^def _iterate_star_args(evaluator, array, input_node, func=None):$/;"	f
_keyword_re	jedi/jedi/parser/fast.py	/^    _keyword_re = re.compile('^[ \\t]*(def |class |@|(?:%s)|(?:%s)\\s*:)'$/;"	v	class:FastParser
_lazy_colorama_init	jedi/jedi/debug.py	/^        def _lazy_colorama_init():$/;"	f	function:_lazy_colorama_init
_lazy_colorama_init	jedi/jedi/debug.py	/^def _lazy_colorama_init():$/;"	f
_list	jedi/test/completion/functions.py	/^_list = [1,""]$/;"	v
_load_faked_module	jedi/jedi/evaluate/compiled/fake.py	/^def _load_faked_module(module):$/;"	f
_load_module	jedi/jedi/evaluate/compiled/mixed.py	/^def _load_module(evaluator, path, python_object):$/;"	f
_load_module	jedi/jedi/evaluate/imports.py	/^def _load_module(evaluator, path=None, source=None, sys_path=None, parent_module=None):$/;"	f
_loaded_grammars	jedi/jedi/parser/__init__.py	/^_loaded_grammars = {}$/;"	v
_mapping	jedi/jedi/api/classes.py	/^    _mapping = {$/;"	v	class:BaseDefinition
_module_attributes_dict	jedi/jedi/evaluate/representation.py	/^    def _module_attributes_dict(self):$/;"	m	class:ModuleWrapper
_name_to_types	jedi/jedi/evaluate/finder.py	/^def _name_to_types(evaluator, name, scope):$/;"	f
_names_dict_ensure_one_dict	jedi/jedi/evaluate/compiled/__init__.py	/^    def _names_dict_ensure_one_dict(self, is_instance):$/;"	m	class:CompiledObject
_names_to_types	jedi/jedi/evaluate/finder.py	/^    def _names_to_types(self, names, attribute_lookup):$/;"	m	class:NameFinder
_nested	jedi/jedi/evaluate/iterable.py	/^    def _nested(self, comp_fors):$/;"	m	class:Comprehension
_parent	jedi/test/test_api/test_classes.py	/^    def _parent(self, source, line=None, column=None):$/;"	m	class:TestParent
_parse	jedi/jedi/parser/fast.py	/^    def _parse(self, source):$/;"	m	class:FastParser
_parse_dotted_names	jedi/jedi/api/completion.py	/^    def _parse_dotted_names(self, nodes):$/;"	m	class:Completion
_parse_function_doc	jedi/jedi/evaluate/compiled/__init__.py	/^    def _parse_function_doc(self):$/;"	m	class:CompiledObject
_parse_function_doc	jedi/jedi/evaluate/compiled/__init__.py	/^def _parse_function_doc(doc):$/;"	f
_parse_part	jedi/jedi/parser/fast.py	/^    def _parse_part(self, source, parser_code, code_part_end_line, nodes):$/;"	m	class:FastParser
_path	jedi/jedi/api/classes.py	/^    def _path(self):$/;"	m	class:BaseDefinition
_path_re	jedi/jedi/evaluate/compiled/__init__.py	/^_path_re = re.compile('(?:\\.[^{0}]+|[{0}]__init__\\.py)$'.format(re.escape(_sep)))$/;"	v
_paths_from_assignment	jedi/jedi/evaluate/sys_path.py	/^def _paths_from_assignment(evaluator, expr_stmt):$/;"	f
_paths_from_list_modifications	jedi/jedi/evaluate/sys_path.py	/^def _paths_from_list_modifications(module_path, trailer1, trailer2):$/;"	f
_py__path__	jedi/jedi/evaluate/representation.py	/^    def _py__path__(self):$/;"	m	class:ModuleWrapper
_remove_old_modules	jedi/jedi/parser/utils.py	/^    def _remove_old_modules(self):$/;"	m	class:ParserPickling
_remove_statements	jedi/jedi/evaluate/finder.py	/^def _remove_statements(evaluator, stmt, name):$/;"	f
_rename	jedi/jedi/refactoring.py	/^def _rename(names, replace_str):$/;"	f
_reorder_var_args	jedi/jedi/evaluate/param.py	/^    def _reorder_var_args(var_args):$/;"	m	class:Arguments
_reset_caches	jedi/jedi/parser/fast.py	/^    def _reset_caches(self):$/;"	m	class:FastParser
_resolve_descriptors	jedi/jedi/evaluate/finder.py	/^    def _resolve_descriptors(self, name, types):$/;"	m	class:NameFinder
_return_first_param	jedi/jedi/evaluate/stdlib.py	/^def _return_first_param(evaluator, firsts):$/;"	f
_rewrite_last_newline	jedi/jedi/parser/fast.py	/^    def _rewrite_last_newline(self):$/;"	m	class:ParserNode
_run_simple	jedi/test/test_api/test_call_signatures.py	/^    def _run_simple(self, source, name, index=0, column=None, line=1):$/;"	m	class:TestCallSignatures
_search_in_scope	jedi/jedi/parser/tree.py	/^    def _search_in_scope(self, typ):$/;"	m	class:Scope
_search_param_in_docstr	jedi/jedi/evaluate/docstrings.py	/^def _search_param_in_docstr(docstr, param_str):$/;"	f
_search_param_in_numpydocstr	jedi/jedi/evaluate/docstrings.py	/^    def _search_param_in_numpydocstr(docstr, param_str):$/;"	f
_self_names_dict	jedi/jedi/evaluate/representation.py	/^    def _self_names_dict(self, add_mro=True):$/;"	m	class:Instance
_sep	jedi/jedi/evaluate/compiled/__init__.py	/^_sep = os.path.sep$/;"	v
_split	jedi/jedi/evaluate/param.py	/^    def _split(self):$/;"	m	class:Arguments
_split_parts	jedi/jedi/parser/fast.py	/^    def _split_parts(self, source):$/;"	m	class:FastParser
_sre	jedi/test/completion/usages.py	/^import _sre$/;"	i
_sre	jedi/test/static_analysis/attribute_error.py	/^import _sre$/;"	i
_stack_removal	jedi/jedi/parser/__init__.py	/^    def _stack_removal(self, grammar, stack, arcs, start_index, value, start_pos):$/;"	m	class:ParserWithRecovery
_star_star_dict	jedi/jedi/evaluate/param.py	/^def _star_star_dict(evaluator, array, input_node, func):$/;"	f
_start_linter	jedi/jedi/__main__.py	/^def _start_linter():$/;"	f
_start_time	jedi/jedi/debug.py	/^_start_time = time.time()$/;"	v
_strip_rst_role	jedi/jedi/evaluate/docstrings.py	/^def _strip_rst_role(type_str):$/;"	f
_sub_modules_dict	jedi/jedi/evaluate/representation.py	/^    def _sub_modules_dict(self):$/;"	m	class:ModuleWrapper
_temp	jedi/jedi/cache.py	/^    def _temp(key_func):$/;"	f	function:time_cache
_tfpdef	jedi/jedi/parser/tree.py	/^    def _tfpdef(self):$/;"	m	class:Param
_time_caches	jedi/jedi/cache.py	/^_time_caches = {}$/;"	v
_tokenize	jedi/jedi/parser/__init__.py	/^    def _tokenize(self, tokenizer):$/;"	m	class:ParserWithRecovery
_trailer_completions	jedi/jedi/api/completion.py	/^    def _trailer_completions(self, atom_expr):$/;"	m	class:Completion
_tuple_mapping	jedi/jedi/api/classes.py	/^    _tuple_mapping = dict((tuple(k.split('.')), v) for (k, v) in {$/;"	v	class:BaseDefinition
_typing_module	jedi/jedi/evaluate/pep0484.py	/^_typing_module = None$/;"	v
_values	jedi/jedi/evaluate/iterable.py	/^    def _values(self):$/;"	m	class:Array
a	jedi/test/completion/arrays.py	/^a = (1)$/;"	v
a	jedi/test/completion/arrays.py	/^a = (1, "")$/;"	v
a	jedi/test/completion/arrays.py	/^a = ['']*2$/;"	v
a	jedi/test/completion/arrays.py	/^a = [1, ""]$/;"	v
a	jedi/test/completion/arrays.py	/^a = list()$/;"	v
a	jedi/test/completion/arrays.py	/^def a(): return ''$/;"	f
a	jedi/test/completion/basic.py	/^    a = ''$/;"	v
a	jedi/test/completion/basic.py	/^    a = 3$/;"	v
a	jedi/test/completion/basic.py	/^a = 'smörbröd'$/;"	v
a	jedi/test/completion/basic.py	/^a = 3$/;"	v
a	jedi/test/completion/basic.py	/^a = []$/;"	v
a	jedi/test/completion/basic.py	/^def a():$/;"	f
a	jedi/test/completion/classes.py	/^        def a():$/;"	f	function:TestSuper.test
a	jedi/test/completion/classes.py	/^    a = 1$/;"	v	class:WithoutMethod
a	jedi/test/completion/classes.py	/^    a = 3$/;"	v	class:A
a	jedi/test/completion/classes.py	/^    a = 3$/;"	v	class:Super
a	jedi/test/completion/classes.py	/^a = A()$/;"	v
a	jedi/test/completion/classes.py	/^a = WithoutMethod().m()$/;"	v
a	jedi/test/completion/comprehensions.py	/^a = ['' for a in [1]]$/;"	v
a	jedi/test/completion/comprehensions.py	/^a = [[int(v) for v in line.strip().split() if v] for line in ["123", "123", "123"] if line]$/;"	v
a	jedi/test/completion/comprehensions.py	/^a = [a for a in (1, 2)]$/;"	v
a	jedi/test/completion/comprehensions.py	/^a = [a for a in [1]]$/;"	v
a	jedi/test/completion/comprehensions.py	/^a = [a for a in arr]$/;"	v
a	jedi/test/completion/comprehensions.py	/^a = [a for a,b in [(1,'')]]$/;"	v
a	jedi/test/completion/comprehensions.py	/^a = [a if 1.0 else '' for a in [1] if [1.0]]$/;"	v
a	jedi/test/completion/decorators.py	/^    def a(self):$/;"	m	class:JustAClass
a	jedi/test/completion/decorators.py	/^    def a(self):$/;"	m	class:MethodDecoratorDoesntExist
a	jedi/test/completion/descriptors.py	/^    a = ''$/;"	v	class:E
a	jedi/test/completion/dynamic_arrays.py	/^a = set([1.0])$/;"	v
a	jedi/test/completion/dynamic_arrays.py	/^a = set(arr)$/;"	v
a	jedi/test/completion/flow_analysis.py	/^    a = ''$/;"	v
a	jedi/test/completion/flow_analysis.py	/^    a = 0$/;"	v
a	jedi/test/completion/flow_analysis.py	/^    a = 1$/;"	v
a	jedi/test/completion/flow_analysis.py	/^    a = 1$/;"	v	class:X
a	jedi/test/completion/flow_analysis.py	/^    a = 1.0$/;"	v
a	jedi/test/completion/flow_analysis.py	/^    a = dict$/;"	v
a	jedi/test/completion/flow_analysis.py	/^    a = int$/;"	v
a	jedi/test/completion/flow_analysis.py	/^    a = list$/;"	v
a	jedi/test/completion/flow_analysis.py	/^    a = set$/;"	v
a	jedi/test/completion/flow_analysis.py	/^a = list$/;"	v
a	jedi/test/completion/functions.py	/^a = 'a'$/;"	v
a	jedi/test/completion/functions.py	/^def a(): pass$/;"	f
a	jedi/test/completion/functions.py	/^def a():$/;"	f
a	jedi/test/completion/generators.py	/^a = ''$/;"	v
a	jedi/test/completion/goto.py	/^a = definition$/;"	v
a	jedi/test/completion/import_tree/__init__.py	/^a = ''$/;"	v
a	jedi/test/completion/import_tree/mod1.py	/^a = 1$/;"	v
a	jedi/test/completion/import_tree/pkg/__init__.py	/^a = list$/;"	v
a	jedi/test/completion/import_tree/pkg/mod1.py	/^a = 1.0$/;"	v
a	jedi/test/completion/import_tree/random.py	/^a = set$/;"	v
a	jedi/test/completion/import_tree/recurse_class1.py	/^    def a(self):$/;"	m	class:C
a	jedi/test/completion/imports.py	/^    a = not_existing_import$/;"	v
a	jedi/test/completion/invalid.py	/^a = ''$/;"	v
a	jedi/test/completion/invalid.py	/^a = 1 if$/;"	v
a	jedi/test/completion/invalid.py	/^a = [a for a in [1,2]$/;"	v
a	jedi/test/completion/invalid.py	/^a = [for a in$/;"	v
a	jedi/test/completion/lambdas.py	/^a = lambda x: x$/;"	v
a	jedi/test/completion/lambdas.py	/^a = lambda: 3$/;"	v
a	jedi/test/completion/named_param.py	/^def a(*some_args, **some_kwargs):$/;"	f
a	jedi/test/completion/named_param.py	/^def a(abc):$/;"	f
a	jedi/test/completion/ordering.py	/^    a = ""$/;"	v	class:A
a	jedi/test/completion/ordering.py	/^    a = 3$/;"	v	class:A
a	jedi/test/completion/ordering.py	/^    a = list$/;"	v
a	jedi/test/completion/ordering.py	/^    a = list()$/;"	v	class:A
a	jedi/test/completion/ordering.py	/^a = ""$/;"	v
a	jedi/test/completion/ordering.py	/^a = 1$/;"	v
a	jedi/test/completion/ordering.py	/^a = 3$/;"	v
a	jedi/test/completion/ordering.py	/^a = A()$/;"	v
a	jedi/test/completion/ordering.py	/^a = list$/;"	v
a	jedi/test/completion/ordering.py	/^a = temp$/;"	v
a	jedi/test/completion/ordering.py	/^a = tuple$/;"	v
a	jedi/test/completion/ordering.py	/^class a():$/;"	c
a	jedi/test/completion/ordering.py	/^def a(a=3):$/;"	f
a	jedi/test/completion/pep0484_comments.py	/^a = 3  # type: str$/;"	v
a	jedi/test/completion/precedence.py	/^    a = ''$/;"	v
a	jedi/test/completion/precedence.py	/^a = "a"*3$/;"	v
a	jedi/test/completion/precedence.py	/^a = 3 * "a"$/;"	v
a	jedi/test/completion/precedence.py	/^a = foobarbaz + 'hello'$/;"	v
a	jedi/test/completion/stdlib.py	/^a = functools.partial(function, 0)$/;"	v
a	jedi/test/completion/usages.py	/^    def a(self):$/;"	m	class:TestClassVar
a	jedi/test/completion/usages.py	/^    def a(self):$/;"	m	class:TestInstanceVar
a	jedi/test/completion/usages.py	/^    def a(self):$/;"	m	class:TestProperty
a	jedi/test/completion/usages.py	/^    def a(self, Abc):$/;"	m	class:Abc
a	jedi/test/completion/usages.py	/^def a(): pass$/;"	f
a	jedi/test/static_analysis/operations.py	/^a = 3$/;"	v
a	jedi/test/test_api/test_classes.py	/^        assert self._bool_is_definitions('import x as a') == [False, True]$/;"	i
a2	jedi/test/completion/invalid.py	/^a2 = [for a2 in [0]]$/;"	v
a3	jedi/test/completion/invalid.py	/^a3 = [a4 for a in for x in y]$/;"	v
a3	jedi/test/completion/invalid.py	/^a3 = [a4 for in 'b']$/;"	v
a3	jedi/test/completion/invalid.py	/^a3 = [for xyz in]$/;"	v
a_func	jedi/test/completion/classes.py	/^    def a_func(self):$/;"	m	class:A
a_func	jedi/test/completion/classes.py	/^def a_func():$/;"	f
a_method	jedi/test/completion/usages.py	/^    def a_method(self):$/;"	m	class:TestMethods
a_param	jedi/test/completion/ordering.py	/^a_param = 3$/;"	v
aaa	jedi/test/completion/pep0484_comments.py	/^aaa$/;"	v
ab1	jedi/test/completion/goto.py	/^def ab1(param): pass$/;"	f
ab2	jedi/test/completion/goto.py	/^def ab2(param): pass$/;"	f
ab3	jedi/test/completion/goto.py	/^def ab3(a=param): pass$/;"	f
abc	jedi/jedi/evaluate/jedi_typing.py	/^    from collections import abc$/;"	i
abc	jedi/jedi/evaluate/jedi_typing.py	/^    import collections as abc$/;"	i
abc	jedi/jedi/parser/tree.py	/^import abc$/;"	i
abc	jedi/test/completion/import_tree/rename1.py	/^abc = 3$/;"	v
abc	jedi/test/completion/import_tree/rename2.py	/^from rename1 import abc$/;"	i
abc	jedi/test/completion/usages.py	/^abc = $/;"	v
abc	jedi/test/completion/usages.py	/^abc = 5$/;"	v
abc	jedi/test/completion/usages.py	/^def abc(): pass$/;"	f
abc	jedi/test/test_api/test_call_signatures.py	/^        run("import time; abc = time; abc.sleep(", 'sleep', 0)$/;"	i
abc	jedi/test/test_evaluate/test_imports.py	/^    import abc$/;"	i
abort	Conque-GDB/autoload/conque_term/conque.py	/^    def abort(self):$/;"	m	class:Conque
abort	Conque-GDB/autoload/conque_term/conque_sole.py	/^    def abort(self):$/;"	m	class:ConqueSole
absolute_coords	Conque-GDB/autoload/conque_term/conque.py	/^    absolute_coords = True$/;"	v	class:Conque
absolute_import	jedi/jedi/parser/token.py	/^from __future__ import absolute_import$/;"	i
absolute_import	jedi/jedi/parser/tokenize.py	/^from __future__ import absolute_import$/;"	i
absolute_import	jedi/jedi/utils.py	/^from __future__ import absolute_import$/;"	i
absolute_import	jedi/test/test_evaluate/absolute_import/local_module.py	/^from __future__ import absolute_import$/;"	i
abspath	jedi/jedi/__main__.py	/^from os.path import join, dirname, abspath, isdir$/;"	i
abspath	jedi/scripts/wx_check.py	/^from os.path import abspath, dirname$/;"	i
abspath	jedi/test/helpers.py	/^from os.path import abspath, dirname$/;"	i
abspath	jedi/test/static_analysis/imports.py	/^from os.path import abspath$/;"	i
activateAll	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateAll()$/;"	f
activateBookmark	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateBookmark(bm)$/;"	f
activateDirNode	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateDirNode(node)$/;"	f
activateFileNode	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateFileNode(node)$/;"	f
actual	jedi/jedi/evaluate/representation.py	/^        def actual(params):$/;"	f	function:Instance.py__call__
actual_function	jedi/test/completion/context.py	/^    def actual_function$/;"	m	class:Y
actual_function	jedi/test/completion/context.py	/^    def actual_function(self):$/;"	m	class:Y
add	jedi/jedi/evaluate/analysis.py	/^def add(evaluator, name, jedi_obj, message=None, typ=Error, payload=None):$/;"	f
add	jedi/jedi/evaluate/representation.py	/^        def add(cls):$/;"	f	function:Class.py__mro__
add_attribute_error	jedi/jedi/evaluate/analysis.py	/^def add_attribute_error(evaluator, scope, name):$/;"	f
add_bracket_after_function	jedi/jedi/settings.py	/^add_bracket_after_function = False$/;"	v
add_conceal_color	Conque-GDB/autoload/conque_term/conque_sole.py	/^    def add_conceal_color(self, text, attributes, stats, line_nr):$/;"	m	class:ConqueSole
add_module	jedi/jedi/evaluate/imports.py	/^def add_module(evaluator, module_name, module):$/;"	f
add_node	jedi/jedi/parser/fast.py	/^    def add_node(self, node, start_line, indent):$/;"	m	class:ParserNode
add_results	jedi/jedi/api/helpers.py	/^    def add_results(label_index):$/;"	f	function:get_possible_completion_types
add_section	vim-airline/autoload/airline/extensions/default.vim	/^  function! s:add_section(builder, context, key)$/;"	f
add_to_arr	jedi/test/completion/dynamic_arrays.py	/^def add_to_arr(arr2, a):$/;"	f
addarc	jedi/jedi/parser/pgen2/pgen.py	/^    def addarc(self, next, label):$/;"	m	class:DFAState
addarc	jedi/jedi/parser/pgen2/pgen.py	/^    def addarc(self, next, label=None):$/;"	m	class:NFAState
addclosure	jedi/jedi/parser/pgen2/pgen.py	/^        def addclosure(state, base):$/;"	f	function:ParserGenerator.make_dfa
addfirstsets	jedi/jedi/parser/pgen2/pgen.py	/^    def addfirstsets(self):$/;"	m	class:ParserGenerator
addition	jedi/test/static_analysis/branches.py	/^def addition(a, b):$/;"	f
additional_dynamic_modules	jedi/jedi/settings.py	/^additional_dynamic_modules = []$/;"	v
addpackage	jedi/jedi/evaluate/site.py	/^def addpackage(sys_path, sitedir, name, known_paths):$/;"	f
addsitedir	jedi/jedi/evaluate/site.py	/^def addsitedir(sys_path, sitedir, known_paths=None):$/;"	f
addsitedir	jedi/jedi/evaluate/sys_path.py	/^from jedi.evaluate.site import addsitedir$/;"	i
addtoken	jedi/jedi/parser/pgen2/parse.py	/^    def addtoken(self, type_, value, start_pos, prefix):$/;"	m	class:PgenParser
addtomrufs	ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:addtomrufs(fname)$/;"	f
after	jedi/test/completion/ordering.py	/^    def after(self):$/;"	m	class:A
airline#add_inactive_statusline_func	vim-airline/autoload/airline.vim	/^function! airline#add_inactive_statusline_func(name)$/;"	f
airline#add_statusline_func	vim-airline/autoload/airline.vim	/^function! airline#add_statusline_func(name)$/;"	f
airline#add_statusline_funcref	vim-airline/autoload/airline.vim	/^function! airline#add_statusline_funcref(function)$/;"	f
airline#builder#new	vim-airline/autoload/airline/builder.vim	/^function! airline#builder#new(context)$/;"	f
airline#check_mode	vim-airline/autoload/airline.vim	/^function! airline#check_mode(winnr)$/;"	f
airline#cmdwinenter	vim-airline/plugin/airline.vim	/^function! airline#cmdwinenter(...)$/;"	f
airline#debug#profile1	vim-airline/autoload/airline/debug.vim	/^function! airline#debug#profile1()$/;"	f
airline#debug#profile2	vim-airline/autoload/airline/debug.vim	/^function! airline#debug#profile2()$/;"	f
airline#debug#profile3	vim-airline/autoload/airline/debug.vim	/^function! airline#debug#profile3()$/;"	f
airline#extensions#ale#get_errors	vim-airline/autoload/airline/extensions/ale.vim	/^function! airline#extensions#ale#get_errors()$/;"	f
airline#extensions#ale#get_warnings	vim-airline/autoload/airline/extensions/ale.vim	/^function! airline#extensions#ale#get_warnings()$/;"	f
airline#extensions#ale#init	vim-airline/autoload/airline/extensions/ale.vim	/^function! airline#extensions#ale#init(ext)$/;"	f
airline#extensions#append_to_section	vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#append_to_section(name, value)$/;"	f
airline#extensions#apply	vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#apply(...)$/;"	f
airline#extensions#apply_left_override	vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#apply_left_override(section1, section2)$/;"	f
airline#extensions#branch#get_head	vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#get_head()$/;"	f
airline#extensions#branch#head	vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#head()$/;"	f
airline#extensions#branch#init	vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#init(ext)$/;"	f
airline#extensions#bufferline#init	vim-airline/autoload/airline/extensions/bufferline.vim	/^function! airline#extensions#bufferline#init(ext)$/;"	f
airline#extensions#capslock#init	vim-airline/autoload/airline/extensions/capslock.vim	/^function! airline#extensions#capslock#init(ext)$/;"	f
airline#extensions#capslock#status	vim-airline/autoload/airline/extensions/capslock.vim	/^function! airline#extensions#capslock#status()$/;"	f
airline#extensions#commandt#apply	vim-airline/autoload/airline/extensions/commandt.vim	/^function! airline#extensions#commandt#apply(...)$/;"	f
airline#extensions#commandt#init	vim-airline/autoload/airline/extensions/commandt.vim	/^function! airline#extensions#commandt#init(ext)$/;"	f
airline#extensions#csv#apply	vim-airline/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#apply(...)$/;"	f
airline#extensions#csv#get_column	vim-airline/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#get_column()$/;"	f
airline#extensions#csv#init	vim-airline/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#init(ext)$/;"	f
airline#extensions#ctrlp#apply	vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#apply(...)$/;"	f
airline#extensions#ctrlp#ctrlp_airline	vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#ctrlp_airline(...)$/;"	f
airline#extensions#ctrlp#ctrlp_airline_status	vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#ctrlp_airline_status(...)$/;"	f
airline#extensions#ctrlp#generate_color_map	vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#generate_color_map(dark, light, white)$/;"	f
airline#extensions#ctrlp#init	vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#init(ext)$/;"	f
airline#extensions#ctrlp#load_theme	vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#load_theme(palette)$/;"	f
airline#extensions#ctrlspace#init	vim-airline/autoload/airline/extensions/ctrlspace.vim	/^function! airline#extensions#ctrlspace#init(ext)$/;"	f
airline#extensions#ctrlspace#statusline	vim-airline/autoload/airline/extensions/ctrlspace.vim	/^function! airline#extensions#ctrlspace#statusline(...)$/;"	f
airline#extensions#default#apply	vim-airline/autoload/airline/extensions/default.vim	/^function! airline#extensions#default#apply(builder, context)$/;"	f
airline#extensions#eclim#creat_line	vim-airline/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#creat_line(...)$/;"	f
airline#extensions#eclim#get_warnings	vim-airline/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#get_warnings()$/;"	f
airline#extensions#eclim#init	vim-airline/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#init(ext)$/;"	f
airline#extensions#example#apply	vim-airline/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#apply(...)$/;"	f
airline#extensions#example#get_cats	vim-airline/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#get_cats()$/;"	f
airline#extensions#example#init	vim-airline/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#init(ext)$/;"	f
airline#extensions#hunks#get_hunks	vim-airline/autoload/airline/extensions/hunks.vim	/^function! airline#extensions#hunks#get_hunks()$/;"	f
airline#extensions#hunks#init	vim-airline/autoload/airline/extensions/hunks.vim	/^function! airline#extensions#hunks#init(ext)$/;"	f
airline#extensions#load	vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#load()$/;"	f
airline#extensions#load_theme	vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#load_theme()$/;"	f
airline#extensions#neomake#get_errors	vim-airline/autoload/airline/extensions/neomake.vim	/^function! airline#extensions#neomake#get_errors()$/;"	f
airline#extensions#neomake#get_warnings	vim-airline/autoload/airline/extensions/neomake.vim	/^function! airline#extensions#neomake#get_warnings()$/;"	f
airline#extensions#neomake#init	vim-airline/autoload/airline/extensions/neomake.vim	/^function! airline#extensions#neomake#init(ext)$/;"	f
airline#extensions#netrw#apply	vim-airline/autoload/airline/extensions/netrw.vim	/^function! airline#extensions#netrw#apply(...)$/;"	f
airline#extensions#netrw#init	vim-airline/autoload/airline/extensions/netrw.vim	/^function! airline#extensions#netrw#init(ext)$/;"	f
airline#extensions#netrw#sortstring	vim-airline/autoload/airline/extensions/netrw.vim	/^function! airline#extensions#netrw#sortstring()$/;"	f
airline#extensions#nrrwrgn#apply	vim-airline/autoload/airline/extensions/nrrwrgn.vim	/^function! airline#extensions#nrrwrgn#apply(...)$/;"	f
airline#extensions#nrrwrgn#init	vim-airline/autoload/airline/extensions/nrrwrgn.vim	/^function! airline#extensions#nrrwrgn#init(ext)$/;"	f
airline#extensions#obsession#get_status	vim-airline/autoload/airline/extensions/obsession.vim	/^function! airline#extensions#obsession#get_status()$/;"	f
airline#extensions#obsession#init	vim-airline/autoload/airline/extensions/obsession.vim	/^function! airline#extensions#obsession#init(ext)$/;"	f
airline#extensions#po#apply	vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#apply(...)$/;"	f
airline#extensions#po#init	vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#init(ext)$/;"	f
airline#extensions#po#stats	vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#stats()$/;"	f
airline#extensions#prepend_to_section	vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#prepend_to_section(name, value)$/;"	f
airline#extensions#promptline#init	vim-airline/autoload/airline/extensions/promptline.vim	/^function! airline#extensions#promptline#init(ext)$/;"	f
airline#extensions#promptline#set_prompt_colors	vim-airline/autoload/airline/extensions/promptline.vim	/^function! airline#extensions#promptline#set_prompt_colors(palette)$/;"	f
airline#extensions#quickfix#apply	vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#apply(...)$/;"	f
airline#extensions#quickfix#inactive_qf_window	vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#inactive_qf_window(...)$/;"	f
airline#extensions#quickfix#init	vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#init(ext)$/;"	f
airline#extensions#syntastic#get_warnings	vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#get_warnings()$/;"	f
airline#extensions#syntastic#init	vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#init(ext)$/;"	f
airline#extensions#tabline#autoshow#off	vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^function! airline#extensions#tabline#autoshow#off()$/;"	f
airline#extensions#tabline#autoshow#on	vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^function! airline#extensions#tabline#autoshow#on()$/;"	f
airline#extensions#tabline#buffers#clickbuf	vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#clickbuf(minwid, clicks, button, modifiers) abort$/;"	f
airline#extensions#tabline#buffers#get	vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#get()$/;"	f
airline#extensions#tabline#buffers#invalidate	vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#invalidate()$/;"	f
airline#extensions#tabline#buffers#off	vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#off()$/;"	f
airline#extensions#tabline#buffers#on	vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#on()$/;"	f
airline#extensions#tabline#buflist#invalidate	vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! airline#extensions#tabline#buflist#invalidate()$/;"	f
airline#extensions#tabline#buflist#list	vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! airline#extensions#tabline#buflist#list()$/;"	f
airline#extensions#tabline#ctrlspace#add_buffer_section	vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#add_buffer_section(builder, cur_tab, cur_buf, pos)$/;"	f
airline#extensions#tabline#ctrlspace#add_tab_section	vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#add_tab_section(builder, pos)$/;"	f
airline#extensions#tabline#ctrlspace#get	vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#get()$/;"	f
airline#extensions#tabline#ctrlspace#invalidate	vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#invalidate()$/;"	f
airline#extensions#tabline#ctrlspace#off	vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#off()$/;"	f
airline#extensions#tabline#ctrlspace#on	vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#on()$/;"	f
airline#extensions#tabline#formatters#default#format	vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^function! airline#extensions#tabline#formatters#default#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#default#wrap_name	vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^function! airline#extensions#tabline#formatters#default#wrap_name(bufnr, buffer_name)$/;"	f
airline#extensions#tabline#formatters#unique_tail#format	vim-airline/autoload/airline/extensions/tabline/formatters/unique_tail.vim	/^function! airline#extensions#tabline#formatters#unique_tail#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#unique_tail_improved#format	vim-airline/autoload/airline/extensions/tabline/formatters/unique_tail_improved.vim	/^function! airline#extensions#tabline#formatters#unique_tail_improved#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#get	vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#get()$/;"	f
airline#extensions#tabline#get_buffer_name	vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#get_buffer_name(nr, ...)$/;"	f
airline#extensions#tabline#group_of_bufnr	vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#group_of_bufnr(tab_bufs, bufnr)$/;"	f
airline#extensions#tabline#init	vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#init(ext)$/;"	f
airline#extensions#tabline#load_theme	vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#load_theme(palette)$/;"	f
airline#extensions#tabline#new_builder	vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#new_builder()$/;"	f
airline#extensions#tabline#tabs#get	vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#get()$/;"	f
airline#extensions#tabline#tabs#invalidate	vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#invalidate()$/;"	f
airline#extensions#tabline#tabs#map_keys	vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#map_keys()$/;"	f
airline#extensions#tabline#tabs#off	vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#off()$/;"	f
airline#extensions#tabline#tabs#on	vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#on()$/;"	f
airline#extensions#tabline#title	vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#title(n)$/;"	f
airline#extensions#tagbar#currenttag	vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#currenttag()$/;"	f
airline#extensions#tagbar#get_status	vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#get_status(...)$/;"	f
airline#extensions#tagbar#inactive_apply	vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#inactive_apply(...)$/;"	f
airline#extensions#tagbar#init	vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#init(ext)$/;"	f
airline#extensions#tmuxline#init	vim-airline/autoload/airline/extensions/tmuxline.vim	/^function! airline#extensions#tmuxline#init(ext)$/;"	f
airline#extensions#tmuxline#set_tmux_colors	vim-airline/autoload/airline/extensions/tmuxline.vim	/^function! airline#extensions#tmuxline#set_tmux_colors(palette)$/;"	f
airline#extensions#undotree#apply	vim-airline/autoload/airline/extensions/undotree.vim	/^function! airline#extensions#undotree#apply(...)$/;"	f
airline#extensions#undotree#init	vim-airline/autoload/airline/extensions/undotree.vim	/^function! airline#extensions#undotree#init(ext)$/;"	f
airline#extensions#unicode#apply	vim-airline/autoload/airline/extensions/unicode.vim	/^function! airline#extensions#unicode#apply(...)$/;"	f
airline#extensions#unicode#init	vim-airline/autoload/airline/extensions/unicode.vim	/^function! airline#extensions#unicode#init(ext)$/;"	f
airline#extensions#unite#apply	vim-airline/autoload/airline/extensions/unite.vim	/^function! airline#extensions#unite#apply(...)$/;"	f
airline#extensions#unite#init	vim-airline/autoload/airline/extensions/unite.vim	/^function! airline#extensions#unite#init(ext)$/;"	f
airline#extensions#virtualenv#apply	vim-airline/autoload/airline/extensions/virtualenv.vim	/^function! airline#extensions#virtualenv#apply(...)$/;"	f
airline#extensions#virtualenv#init	vim-airline/autoload/airline/extensions/virtualenv.vim	/^function! airline#extensions#virtualenv#init(ext)$/;"	f
airline#extensions#virtualenv#update	vim-airline/autoload/airline/extensions/virtualenv.vim	/^function! airline#extensions#virtualenv#update()$/;"	f
airline#extensions#whitespace#check	vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#check()$/;"	f
airline#extensions#whitespace#init	vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#init(...)$/;"	f
airline#extensions#whitespace#toggle	vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#toggle()$/;"	f
airline#extensions#windowswap#get_status	vim-airline/autoload/airline/extensions/windowswap.vim	/^function! airline#extensions#windowswap#get_status()$/;"	f
airline#extensions#windowswap#init	vim-airline/autoload/airline/extensions/windowswap.vim	/^function! airline#extensions#windowswap#init(ext)$/;"	f
airline#extensions#wordcount#apply	vim-airline/autoload/airline/extensions/wordcount.vim	/^function! airline#extensions#wordcount#apply(...)$/;"	f
airline#extensions#wordcount#formatters#default#format	vim-airline/autoload/airline/extensions/wordcount/formatters/default.vim	/^function! airline#extensions#wordcount#formatters#default#format()$/;"	f
airline#extensions#wordcount#init	vim-airline/autoload/airline/extensions/wordcount.vim	/^function! airline#extensions#wordcount#init(ext)$/;"	f
airline#extensions#ycm#get_error_count	vim-airline/autoload/airline/extensions/ycm.vim	/^function! airline#extensions#ycm#get_error_count()$/;"	f
airline#extensions#ycm#get_warning_count	vim-airline/autoload/airline/extensions/ycm.vim	/^function! airline#extensions#ycm#get_warning_count()$/;"	f
airline#extensions#ycm#init	vim-airline/autoload/airline/extensions/ycm.vim	/^function! airline#extensions#ycm#init(ext)$/;"	f
airline#highlighter#add_accent	vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#add_accent(accent)$/;"	f
airline#highlighter#add_separator	vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#add_separator(from, to, inverse)$/;"	f
airline#highlighter#exec	vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#exec(group, colors)$/;"	f
airline#highlighter#get_highlight	vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#get_highlight(group, ...)$/;"	f
airline#highlighter#get_highlight2	vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#get_highlight2(fg, bg, ...)$/;"	f
airline#highlighter#highlight	vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#highlight(modes, ...)$/;"	f
airline#highlighter#highlight_modified_inactive	vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#highlight_modified_inactive(bufnr)$/;"	f
airline#highlighter#load_theme	vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#load_theme()$/;"	f
airline#init#bootstrap	vim-airline/autoload/airline/init.vim	/^function! airline#init#bootstrap()$/;"	f
airline#init#gui_mode	vim-airline/autoload/airline/init.vim	/^function! airline#init#gui_mode()$/;"	f
airline#init#sections	vim-airline/autoload/airline/init.vim	/^function! airline#init#sections()$/;"	f
airline#load_theme	vim-airline/autoload/airline.vim	/^function! airline#load_theme()$/;"	f
airline#msdos#round_msdos_colors	vim-airline/autoload/airline/msdos.vim	/^function! airline#msdos#round_msdos_colors(rgblist)$/;"	f
airline#parts#crypt	vim-airline/autoload/airline/parts.vim	/^function! airline#parts#crypt()$/;"	f
airline#parts#define	vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define(key, config)$/;"	f
airline#parts#define_accent	vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_accent(key, accent)$/;"	f
airline#parts#define_condition	vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_condition(key, predicate)$/;"	f
airline#parts#define_empty	vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_empty(keys)$/;"	f
airline#parts#define_function	vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_function(key, name)$/;"	f
airline#parts#define_minwidth	vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_minwidth(key, width)$/;"	f
airline#parts#define_raw	vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_raw(key, raw)$/;"	f
airline#parts#define_text	vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_text(key, text)$/;"	f
airline#parts#ffenc	vim-airline/autoload/airline/parts.vim	/^function! airline#parts#ffenc()$/;"	f
airline#parts#filetype	vim-airline/autoload/airline/parts.vim	/^function! airline#parts#filetype()$/;"	f
airline#parts#get	vim-airline/autoload/airline/parts.vim	/^function! airline#parts#get(key)$/;"	f
airline#parts#iminsert	vim-airline/autoload/airline/parts.vim	/^function! airline#parts#iminsert()$/;"	f
airline#parts#mode	vim-airline/autoload/airline/parts.vim	/^function! airline#parts#mode()$/;"	f
airline#parts#paste	vim-airline/autoload/airline/parts.vim	/^function! airline#parts#paste()$/;"	f
airline#parts#readonly	vim-airline/autoload/airline/parts.vim	/^function! airline#parts#readonly()$/;"	f
airline#parts#spell	vim-airline/autoload/airline/parts.vim	/^function! airline#parts#spell()$/;"	f
airline#remove_statusline_func	vim-airline/autoload/airline.vim	/^function! airline#remove_statusline_func(name)$/;"	f
airline#section#create	vim-airline/autoload/airline/section.vim	/^function! airline#section#create(parts)$/;"	f
airline#section#create_left	vim-airline/autoload/airline/section.vim	/^function! airline#section#create_left(parts)$/;"	f
airline#section#create_right	vim-airline/autoload/airline/section.vim	/^function! airline#section#create_right(parts)$/;"	f
airline#statusline	vim-airline/autoload/airline.vim	/^function! airline#statusline(winnr)$/;"	f
airline#switch_matching_theme	vim-airline/autoload/airline.vim	/^function! airline#switch_matching_theme()$/;"	f
airline#switch_theme	vim-airline/autoload/airline.vim	/^function! airline#switch_theme(name)$/;"	f
airline#themes#generate_color_map	vim-airline/autoload/airline/themes.vim	/^function! airline#themes#generate_color_map(sect1, sect2, sect3, ...)$/;"	f
airline#themes#get_highlight	vim-airline/autoload/airline/themes.vim	/^function! airline#themes#get_highlight(group, ...)$/;"	f
airline#themes#get_highlight2	vim-airline/autoload/airline/themes.vim	/^function! airline#themes#get_highlight2(fg, bg, ...)$/;"	f
airline#themes#patch	vim-airline/autoload/airline/themes.vim	/^function! airline#themes#patch(palette)$/;"	f
airline#update_statusline	vim-airline/autoload/airline.vim	/^function! airline#update_statusline()$/;"	f
airline#util#append	vim-airline/autoload/airline/util.vim	/^function! airline#util#append(text, minwidth)$/;"	f
airline#util#exec_funcrefs	vim-airline/autoload/airline/util.vim	/^  function! airline#util#exec_funcrefs(list, ...)$/;"	f
airline#util#getwinvar	vim-airline/autoload/airline/util.vim	/^  function! airline#util#getwinvar(winnr, key, def)$/;"	f
airline#util#prepend	vim-airline/autoload/airline/util.vim	/^function! airline#util#prepend(text, minwidth)$/;"	f
airline#util#shorten	vim-airline/autoload/airline/util.vim	/^function! airline#util#shorten(text, winwidth, minwidth)$/;"	f
airline#util#system	vim-airline/autoload/airline/util.vim	/^  function! airline#util#system(cmd)$/;"	f
airline#util#warning	vim-airline/autoload/airline/util.vim	/^function! airline#util#warning(msg)$/;"	f
airline#util#wrap	vim-airline/autoload/airline/util.vim	/^function! airline#util#wrap(text, minwidth)$/;"	f
airline_refresh	vim-airline/plugin/airline.vim	/^function! s:airline_refresh()$/;"	f
airline_theme	vim-airline/plugin/airline.vim	/^function! s:airline_theme(...)$/;"	f
airline_toggle	vim-airline/plugin/airline.vim	/^function! s:airline_toggle()$/;"	f
aliases	jedi/jedi/evaluate/helpers.py	/^    def aliases(self):$/;"	m	class:FakeImport
aliases	jedi/jedi/parser/tree.py	/^    def aliases(self):$/;"	m	class:ImportFrom
aliases	jedi/jedi/parser/tree.py	/^    def aliases(self):$/;"	m	class:ImportName
align	Conque-GDB/autoload/conque_term/conque_screen.py	/^    def align(self):$/;"	m	class:ConqueScreen
all_keywords	jedi/jedi/api/keywords.py	/^def all_keywords(evaluator, pos=(0, 0)):$/;"	f
all_sub_nodes	jedi/jedi/parser/fast.py	/^    def all_sub_nodes(self):$/;"	m	class:ParserNode
alphabet	jedi/test/speed/precedence.py	/^def alphabet(code4):$/;"	f
analysis	jedi/jedi/evaluate/finder.py	/^from jedi.evaluate import analysis$/;"	i
analysis	jedi/jedi/evaluate/imports.py	/^from jedi.evaluate import analysis$/;"	i
analysis	jedi/jedi/evaluate/iterable.py	/^from jedi.evaluate import analysis$/;"	i
analysis	jedi/jedi/evaluate/param.py	/^from jedi.evaluate import analysis$/;"	i
analysis	jedi/jedi/evaluate/precedence.py	/^from jedi.evaluate import analysis$/;"	i
analysis	jedi/jedi/evaluate/stdlib.py	/^from jedi.evaluate import analysis$/;"	i
annotation	jedi/jedi/parser/tree.py	/^    def annotation(self):$/;"	m	class:Function
annotation	jedi/jedi/parser/tree.py	/^    def annotation(self):$/;"	m	class:Lambda
annotation	jedi/jedi/parser/tree.py	/^    def annotation(self):$/;"	m	class:Param
annotation_forward_reference	jedi/test/completion/pep0484.py	/^def annotation_forward_reference(b: "B") -> "B":$/;"	f
annoying	jedi/test/completion/recursion.py	/^    def annoying(self):$/;"	m	class:FooListComp
annoying	jedi/test/completion/recursion.py	/^    def annoying(self):$/;"	m	class:X
another	jedi/test/speed/precedence.py	/^def another(code2):$/;"	f
api	jedi/test/test_api/test_api.py	/^from jedi import api$/;"	i
api	jedi/test/test_regression.py	/^from jedi import api$/;"	i
api_type	jedi/jedi/evaluate/compiled/__init__.py	/^    def api_type(self):$/;"	m	class:CompiledObject
api_type	jedi/jedi/evaluate/compiled/mixed.py	/^    def api_type(self):$/;"	m	class:MixedObject
app	jedi/test/completion/dynamic_arrays.py	/^def app(a):$/;"	f
append	Conque-GDB/autoload/conque_term/conque_screen.py	/^    def append(self, value):$/;"	m	class:ConqueScreen
append_breakpoint	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    def append_breakpoint(self, string):$/;"	m	class:ConqueGdb
append_breakpoint	Conque-GDB/autoload/conque_gdb/conque_sole_gdb.py	/^    def append_breakpoint(self, text):$/;"	m	class:ConqueSoleGdb
append_prompt	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    def append_prompt(self, string):$/;"	m	class:ConqueGdb
apply_breakpoint_changes	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    def apply_breakpoint_changes(self, changed_lines):$/;"	m	class:ConqueGdb
apply_color	Conque-GDB/autoload/conque_term/conque.py	/^    def apply_color(self, start, end, line=0):$/;"	m	class:Conque
arg	jedi/test/completion/dynamic_params.py	/^def arg(*args):$/;"	f
arg_func	jedi/test/completion/lambdas.py	/^arg_func = lambda *args, **kwargs: (args[0], kwargs['a'])$/;"	v
arg_l	jedi/test/completion/lambdas.py	/^arg_l = lambda x, y: (y, x)$/;"	v
arg_l	jedi/test/completion/lambdas.py	/^arg_l = lambda x, y: y, x$/;"	v
argmaps	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:argmaps(md, i)$/;"	f
args	jedi/scripts/profile.py	/^    args = docopt(__doc__)$/;"	v
args	jedi/test/completion/lambdas.py	/^args = 1,""$/;"	v
args_func	jedi/test/completion/functions.py	/^def args_func(*args):$/;"	f
args_func	jedi/test/completion/functions.py	/^def args_func(arg1, *args):$/;"	f
argument_clinic	jedi/jedi/evaluate/stdlib.py	/^def argument_clinic(string, want_obj=False, want_scope=False, want_arguments=False):$/;"	f
arguments	jedi/sith.py	/^    arguments = docopt(__doc__)$/;"	v
arguments	jedi/test/run.py	/^    arguments = docopt.docopt(docoptstr)$/;"	v
arr	jedi/test/completion/comprehensions.py	/^arr = [1,'']$/;"	v
arr	jedi/test/completion/dynamic_arrays.py	/^arr = [""]$/;"	v
arr	jedi/test/completion/dynamic_arrays.py	/^arr = [1.0]$/;"	v
arr	jedi/test/completion/dynamic_arrays.py	/^arr = []$/;"	v
arr	jedi/test/completion/dynamic_arrays.py	/^arr = [tuple()]$/;"	v
arr	jedi/test/completion/dynamic_arrays.py	/^arr = list([])$/;"	v
arr	jedi/test/completion/stdlib.py	/^arr = ['']$/;"	v
arr	jedi/test/completion/types.py	/^arr = []$/;"	v
arr2	jedi/test/completion/dynamic_arrays.py	/^arr2 = arr$/;"	v
arr2	jedi/test/completion/types.py	/^arr2 = [1,2,3]$/;"	v
arr3	jedi/test/completion/dynamic_arrays.py	/^arr3 = [1.0]$/;"	v
arr_append	jedi/test/completion/dynamic_arrays.py	/^def arr_append(arr4, a):$/;"	f
array	jedi/scripts/profile.py	/^        args['<code>'] = 'import numpy; numpy.array([0])'$/;"	i
array	jedi/test/completion/functions.py	/^def array(first_param):$/;"	f
arrays	jedi/test/completion/on_import.py	/^from . import arrays$/;"	i
as_imports	jedi/test/completion/imports.py	/^def as_imports():$/;"	f
as_tuple	jedi/jedi/evaluate/param.py	/^    def as_tuple(self):$/;"	m	class:Arguments
asdf	jedi/test/completion/complex.py	/^    asdf = time$/;"	v	class:Foo
asdf	jedi/test/completion/functions.py	/^def asdf(a):$/;"	f
asdf	jedi/test/completion/invalid.py	/^asdf = ''$/;"	v
asdf	jedi/test/completion/invalid.py	/^def asdf(a or b): # multiple param names$/;"	f
asdfy	jedi/test/completion/complex.py	/^def asdfy():$/;"	f
assert_case_equal	jedi/test/test_integration.py	/^def assert_case_equal(case, actual, desired):$/;"	f
assert_definition_names	jedi/test/test_api/test_defined_names.py	/^    def assert_definition_names(self, definitions, names_):$/;"	m	class:TestDefinedNames
assert_params	jedi/test/test_parser/test_param_splitting.py	/^def assert_params(param_string, **wanted_dct):$/;"	f
assert_signature	jedi/test/test_api/test_call_signatures.py	/^def assert_signature(source, expected_name, expected_index=0, line=None, column=None):$/;"	f
assert_static_analysis	jedi/test/test_integration.py	/^def assert_static_analysis(case, actual, desired):$/;"	f
assertion	jedi/jedi/parser/tree.py	/^    def assertion(self):$/;"	m	class:AssertStmt
assignment_indexes	jedi/jedi/parser/tree.py	/^    def assignment_indexes(self):$/;"	m	class:Base
ast	jedi/jedi/_compatibility.py	/^import ast$/;"	i
at	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:at(str)$/;"	f
attribute_cache	Conque-GDB/autoload/conque_term/conque_sole.py	/^    attribute_cache = {}$/;"	v	class:ConqueSole
attribute_cache	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    attribute_cache = {}$/;"	v	class:ConqueSoleSubprocess
attributes	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    attributes = []$/;"	v	class:ConqueSoleSubprocess
author	jedi/setup.py	/^      author=__AUTHOR__,$/;"	v
author_email	jedi/setup.py	/^      author_email=__AUTHOR_EMAIL__,$/;"	v
auto_import_modules	jedi/jedi/settings.py	/^auto_import_modules = [$/;"	v
auto_read	Conque-GDB/autoload/conque_term/conque.py	/^    def auto_read(self, reset_timer = True):$/;"	m	class:Conque
autoclass_content	jedi/docs/conf.py	/^autoclass_content = 'both'$/;"	v
autocmds	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:autocmds()$/;"	f
autodoc_default_flags	jedi/docs/conf.py	/^autodoc_default_flags = []$/;"	v
autodoc_member_order	jedi/docs/conf.py	/^autodoc_member_order = 'bysource'$/;"	v
autowrap	Conque-GDB/autoload/conque_term/conque.py	/^    autowrap = True$/;"	v	class:Conque
b	jedi/test/completion/arrays.py	/^b = [6,7]$/;"	v
b	jedi/test/completion/basic.py	/^b = '' if a else set()$/;"	v
b	jedi/test/completion/basic.py	/^b = [1.0,'']$/;"	v
b	jedi/test/completion/classes.py	/^            def b(self):$/;"	m	class:A.b.B
b	jedi/test/completion/classes.py	/^    b = ''$/;"	v	class:B
b	jedi/test/completion/classes.py	/^    b = 3$/;"	v	class:B
b	jedi/test/completion/classes.py	/^    b = ret$/;"	v	class:V
b	jedi/test/completion/classes.py	/^    def b(self):$/;"	m	class:A
b	jedi/test/completion/comprehensions.py	/^b = [a for arr in [[1]] for a in arr]$/;"	v
b	jedi/test/completion/comprehensions.py	/^b = [a for arr in [[1]] if '' for a in arr if '']$/;"	v
b	jedi/test/completion/comprehensions.py	/^b = [b for arr in [[[1.0]]] for a in arr for b in a]$/;"	v
b	jedi/test/completion/decorators.py	/^    def b(self):$/;"	m	class:Base
b	jedi/test/completion/functions.py	/^def b():$/;"	f
b	jedi/test/completion/generators.py	/^b = []$/;"	v
b	jedi/test/completion/goto.py	/^        def b(self):$/;"	m	class:func.A
b	jedi/test/completion/goto.py	/^    def b(self):$/;"	m	class:C
b	jedi/test/completion/goto.py	/^b = a$/;"	v
b	jedi/test/completion/goto.py	/^b = math$/;"	v
b	jedi/test/completion/invalid.py	/^from a import (b$/;"	i
b	jedi/test/completion/ordering.py	/^b = a$/;"	v
b	jedi/test/completion/pep0484_comments.py	/^b = 3  # type: str but I write more$/;"	v
b	jedi/test/completion/precedence.py	/^b = [str(1)]$/;"	v
b	jedi/test/completion/usages.py	/^    def b(self):$/;"	m	class:TestInstanceVar
b	jedi/test/completion/usages.py	/^    def b(self):$/;"	m	class:TestProperty
b	jedi/test/static_analysis/import_tree/a.py	/^from . import b$/;"	i
b	jedi/test/static_analysis/operations.py	/^b = ''$/;"	v
b_method	jedi/test/completion/usages.py	/^    def b_method(self):$/;"	m	class:TestMethods
background_color	jedi/docs/_themes/flask_theme_support.py	/^    background_color = "#f8f8f8"$/;"	v	class:FlaskyStyle
bar	jedi/test/completion/imports.py	/^    import import_tree.mod1 as bar$/;"	i
bar	jedi/test/completion/invalid.py	/^    def bar(self):$/;"	m	class:BrokenPartsOfClass
bar	jedi/test/completion/parser.py	/^    def bar(str$/;"	m	class:Foo
bar	jedi/test/test_api/test_interpreter.py	/^            bar = []$/;"	v	class:TestInterpreterAPI.test_slice.Foo
bar	jedi/test/test_api/test_interpreter.py	/^            def bar(self):$/;"	m	class:TestInterpreterAPI.test_property_error.Foo
bar	jedi/test/test_evaluate/test_imports.py	/^    pytest.mark.xfail(("import flask.ext.bar; flask.ext.bar.", "Foo")),$/;"	i
base_class	jedi/test/completion/usages.py	/^    base_class = 1$/;"	v	class:Super
base_method	jedi/test/completion/usages.py	/^    def base_method(self):$/;"	m	class:Super
basetwo	jedi/test/completion/stdlib.py	/^basetwo = functools.partial(int, base=2)$/;"	v
baz	jedi/test/test_evaluate/test_imports.py	/^    pytest.mark.xfail(("import flask.ext.baz; flask.ext.baz.", "Foo")),$/;"	i
before	jedi/test/completion/ordering.py	/^    def before(self):$/;"	m	class:A
begin_breakpoint	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    def begin_breakpoint(self):$/;"	m	class:ConqueGdb
beyond	jedi/jedi/evaluate/imports.py	/^                        debug.warning('Attempted relative import beyond top-level package.')$/;"	i
bin_number	jedi/jedi/parser/tokenize.py	/^bin_number = r'0[bB][01]+'$/;"	v
blabla	jedi/test/refactor/rename.py	/^def blabla():$/;"	f
blub	jedi/test/completion/classes.py	/^    def blub(self):$/;"	m	class:WithoutMethod
blub	jedi/test/completion/dynamic_arrays.py	/^    def blub(self, b):$/;"	m	class:C
blub	jedi/test/completion/dynamic_arrays.py	/^def blub():$/;"	f
blub	jedi/test/completion/invalid.py	/^def blub():$/;"	f
blub2	jedi/test/completion/dynamic_arrays.py	/^    def blub2(self):$/;"	m	class:C
blubi	jedi/test/completion/usages.py	/^def blubi():$/;"	f
boo	jedi/test/completion/isinstance.py	/^    def boo(self):$/;"	m	class:Test
both	jedi/test/completion/docstring.py	/^def both():$/;"	f
bottom	Conque-GDB/autoload/conque_term/conque.py	/^    bottom = 24 # relative to top of screen$/;"	v	class:Conque
bound	Conque-GDB/autoload/conque_term/conque.py	/^    def bound(self, val, min, max):$/;"	m	class:Conque
bp_to_look_key	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    def bp_to_look_key(self, bp):$/;"	m	class:ConqueGdb
bracket	jedi/jedi/parser/tokenize.py	/^bracket = '[][(){}]'$/;"	v
bracket_start	jedi/jedi/api/classes.py	/^    def bracket_start(self):$/;"	m	class:CallSignature
bracket_start	jedi/test/test_api/test_call_signatures.py	/^    def bracket_start(src):$/;"	f	function:test_bracket_start
break	jedi/test/completion/invalid.py	/^def break(): pass$/;"	f
break_check	jedi/jedi/evaluate/flow_analysis.py	/^def break_check(evaluator, base_scope, stmt, origin_scope=None):$/;"	f
breakpoint	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    breakpoint = None$/;"	v	class:ConqueGdb
breakpoint	Conque-GDB/autoload/conque_gdb/conque_sole_gdb.py	/^    breakpoint = None$/;"	v	class:ConqueSoleGdb
bucket	Conque-GDB/autoload/conque_term/conque_sole_wrapper.py	/^    bucket = None$/;"	v	class:ConqueSoleWrapper
buf_read_post	Conque-GDB/autoload/conque_gdb.vim	/^function! s:buf_read_post()$/;"	f
buf_update	Conque-GDB/autoload/conque_gdb.vim	/^function! s:buf_update()$/;"	f
buf_win_enter	Conque-GDB/autoload/conque_gdb.vim	/^function! s:buf_win_enter()$/;"	f
buffer	Conque-GDB/autoload/conque_term/conque_screen.py	/^    buffer = None$/;"	v	class:ConqueScreen
buffer	Conque-GDB/autoload/conque_term/conque_sole.py	/^    buffer = None$/;"	v	class:ConqueSole
buffer_height	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    buffer_height = 100$/;"	v	class:ConqueSoleSubprocess
buffer_redraw_ct	Conque-GDB/autoload/conque_term/conque_sole.py	/^    buffer_redraw_ct = 1$/;"	v	class:ConqueSole
buffer_update	Conque-GDB/autoload/conque_term.vim	/^function! s:buffer_update(insert_mode) "{{{$/;"	f
buffer_width	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    buffer_width = 160$/;"	v	class:ConqueSoleSubprocess
buffunc	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:buffunc(e)$/;"	f
buftab	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:buftab(bufnr, md)$/;"	f
bufwins	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:bufwins(bufnr)$/;"	f
build_sections	vim-airline/autoload/airline/extensions/default.vim	/^function! s:build_sections(builder, context, keys)$/;"	f
buildpat	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:buildpat(lst)$/;"	f
builtin_from_name	jedi/jedi/evaluate/compiled/__init__.py	/^def builtin_from_name(evaluator, string):$/;"	f
builtin_from_name	jedi/jedi/evaluate/precedence.py	/^from jedi.evaluate.compiled import CompiledObject, create, builtin_from_name$/;"	i
builtin_test	jedi/test/completion/on_import.py	/^def builtin_test():$/;"	f
builtins	jedi/jedi/_compatibility.py	/^    import __builtin__ as builtins$/;"	i
builtins	jedi/jedi/_compatibility.py	/^    import builtins  # module name in python 3$/;"	i
builtins	jedi/jedi/evaluate/compiled/fake.py	/^from jedi._compatibility import is_py3, builtins, unicode, is_py34$/;"	i
builtins	jedi/test/test_evaluate/test_compiled.py	/^from jedi._compatibility import builtins, is_py3$/;"	i
builtins_getattr	jedi/jedi/evaluate/stdlib.py	/^def builtins_getattr(evaluator, objects, names, defaults=None):$/;"	f
builtins_isinstance	jedi/jedi/evaluate/stdlib.py	/^def builtins_isinstance(evaluator, objects, types, arguments):$/;"	f
builtins_reversed	jedi/jedi/evaluate/stdlib.py	/^def builtins_reversed(evaluator, sequences, obj, arguments):$/;"	f
builtins_super	jedi/jedi/evaluate/stdlib.py	/^def builtins_super(evaluator, types, objects, scope):$/;"	f
builtins_type	jedi/jedi/evaluate/stdlib.py	/^def builtins_type(evaluator, objects, bases, dicts):$/;"	f
byfname	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:byfname()$/;"	f
c	Conque-GDB/autoload/conque_term/conque.py	/^    c = 1 # current cursor column$/;"	v	class:Conque
c	jedi/test/completion/arrays.py	/^c = [[a,""]]$/;"	v
c	jedi/test/completion/decorators.py	/^    def c(self):$/;"	m	class:Base
c	jedi/test/completion/goto.py	/^c = b$/;"	v
c	jedi/test/completion/goto.py	/^def c():$/;"	f
c	jedi/test/completion/ordering.py	/^    c = set()$/;"	v	class:A
c	jedi/test/completion/pep0484_comments.py	/^c = 3  # type: str # I comment more$/;"	v
c	jedi/test/completion/stdlib.py	/^c = con.cursor()$/;"	v
c	jedi/test/completion/stdlib.py	/^c = re.compile(r'a')$/;"	v
c	jedi/test/static_analysis/attribute_error.py	/^c = Cls(1)$/;"	v
c	jedi/test/static_analysis/attribute_warnings.py	/^c = SetattrCls({'a': 'b'})$/;"	v
c	vim-airline/t/airline.vim	/^    let c = len(g:airline_statusline_funcrefs)$/;"	v
cProfile	jedi/scripts/profile.py	/^import cProfile$/;"	i
cache	jedi/jedi/api/__init__.py	/^from jedi import cache$/;"	i
cache	jedi/test/test_api/test_call_signatures.py	/^from jedi import cache$/;"	i
cache	jedi/test/test_cache.py	/^@pytest.mark.skipif('True', message='Currently the star import cache is not enabled.')$/;"	i
cache	jedi/test/test_cache.py	/^from jedi import settings, cache$/;"	i
cache	jedi/test/test_jedi_system.py	/^    from jedi import cache$/;"	i
cache	jedi/test/test_parser/test_fast_parser.py	/^from jedi import cache$/;"	i
cache_call_signatures	jedi/jedi/api/helpers.py	/^def cache_call_signatures(evaluator, bracket_leaf, code_lines, user_pos):$/;"	f
cache_directory	jedi/jedi/settings.py	/^cache_directory = os.path.expanduser(_cache_directory)$/;"	v
cache_star_import	jedi/jedi/cache.py	/^def cache_star_import(func):$/;"	f
cache_star_import	jedi/jedi/evaluate/representation.py	/^from jedi.cache import underscore_memoization, cache_star_import$/;"	i
cachefile	ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:cachefile()$/;"	f
calcfirst	jedi/jedi/parser/pgen2/pgen.py	/^    def calcfirst(self, name):$/;"	m	class:ParserGenerator
calculate	jedi/jedi/evaluate/precedence.py	/^def calculate(evaluator, left_result, operator, right_result):$/;"	f
calculate	jedi/test/completion/precedence.py	/^def calculate(number):$/;"	f
calculate_children	jedi/jedi/evaluate/precedence.py	/^def calculate_children(evaluator, children):$/;"	f
call	jedi/test/completion/invalid.py	/^call = ''$/;"	v
call	jedi/test/speed/precedence.py	/^def call(code3):$/;"	f
call_name	jedi/jedi/api/classes.py	/^    def call_name(self):$/;"	m	class:CallSignature
call_of_leaf	jedi/jedi/api/completion.py	/^from jedi.evaluate.helpers import call_of_leaf$/;"	i
call_of_leaf	jedi/jedi/api/helpers.py	/^from jedi.evaluate.helpers import call_of_leaf$/;"	i
call_of_leaf	jedi/jedi/evaluate/helpers.py	/^def call_of_leaf(leaf, cut_own_trailer=False):$/;"	f
call_signatures	jedi/jedi/api/__init__.py	/^    def call_signatures(self):$/;"	m	class:Script
call_signatures_validity	jedi/jedi/settings.py	/^call_signatures_validity = 3.0$/;"	v
case_insensitive_completion	jedi/jedi/settings.py	/^case_insensitive_completion = True$/;"	v
cases	jedi/test/run.py	/^    cases = list(collect_dir_tests(completion_test_dir, test_files))$/;"	v
cd	jedi/test/completion/goto.py	/^cd = 1$/;"	v
cd	jedi/test/completion/goto.py	/^cd = c$/;"	v
cd	jedi/test/completion/goto.py	/^cd = e$/;"	v
chCwd	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:chCwd(node)$/;"	f
chRoot	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:chRoot(node)$/;"	f
chain	jedi/jedi/api/classes.py	/^from itertools import chain$/;"	i
chain	jedi/jedi/api/completion.py	/^from itertools import chain$/;"	i
chain	jedi/jedi/common.py	/^from itertools import chain$/;"	i
chain	jedi/jedi/evaluate/__init__.py	/^from itertools import chain$/;"	i
chain	jedi/jedi/evaluate/docstrings.py	/^from itertools import chain$/;"	i
chain	jedi/jedi/evaluate/dynamic.py	/^from itertools import chain$/;"	i
chain	jedi/jedi/evaluate/finder.py	/^from itertools import chain$/;"	i
chain	jedi/jedi/evaluate/helpers.py	/^from itertools import chain$/;"	i
chain	jedi/jedi/evaluate/imports.py	/^from itertools import chain$/;"	i
chain	jedi/jedi/evaluate/param.py	/^from itertools import chain$/;"	i
chain	jedi/jedi/evaluate/representation.py	/^from itertools import chain$/;"	i
chain	jedi/jedi/parser/fast.py	/^from itertools import chain$/;"	i
chain	jedi/jedi/parser/tree.py	/^from itertools import chain$/;"	i
chain	jedi/test/test_api/test_api_classes_follow_definition.py	/^from itertools import chain$/;"	i
change_options	jedi/jedi/evaluate/compiled/__init__.py	/^        def change_options(m):$/;"	f	function:_parse_function_doc
change_title	Conque-GDB/autoload/conque_term/conque.py	/^    def change_title(self, key, val):$/;"	m	class:Conque
changelist	ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! s:changelist(bufnr)$/;"	f
char_width	Conque-GDB/autoload/conque_term/conque_sole_shared_memory.py	/^    char_width = 1$/;"	v	class:ConqueSoleSharedMemory
character_set	Conque-GDB/autoload/conque_term/conque.py	/^    character_set = 'ascii'$/;"	v	class:Conque
charset_graphics	Conque-GDB/autoload/conque_term/conque.py	/^    def charset_graphics(self):$/;"	m	class:Conque
charset_uk	Conque-GDB/autoload/conque_term/conque.py	/^    def charset_uk(self):$/;"	m	class:Conque
charset_us	Conque-GDB/autoload/conque_term/conque.py	/^    def charset_us(self):$/;"	m	class:Conque
check	jedi/jedi/evaluate/precedence.py	/^    def check(obj):$/;"	f	function:_element_calculate
check	jedi/test/completion/flow_analysis.py	/^def check(a):$/;"	f
check	jedi/test/completion/usages.py	/^def check(instance):$/;"	f
check	jedi/test/refactor.py	/^    def check(self):$/;"	m	class:RefactoringCase
check	jedi/test/test_api/test_classes.py	/^    def check(defs):$/;"	f	function:test_signature_params
check	jedi/test/test_api/test_full_name.py	/^    def check(self, source, desired):$/;"	m	class:MixinTestFullName
check	jedi/test/test_api/test_full_name.py	/^    def check(self, source, desired):$/;"	m	class:TestFullDefinedName
check	jedi/test/test_cache.py	/^    def check(column, call_name, path=None):$/;"	f	function:test_cache_call_signatures
check	jedi/test/test_integration_import.py	/^    def check(source, result, column=None):$/;"	f	function:test_after_from
check	jedi/test/test_parser/test_parser.py	/^    def check(src, result):$/;"	f	function:test_param_splitting
check	jedi/test/test_parser/test_tokenize.py	/^    def check(literal):$/;"	f	function:test_ur_literals
check_additions	jedi/jedi/evaluate/iterable.py	/^    def check_additions(arglist, add_name):$/;"	f	function:_check_array_additions
check_array_additions	jedi/jedi/evaluate/iterable.py	/^def check_array_additions(evaluator, array):$/;"	f
check_array_instances	jedi/jedi/evaluate/iterable.py	/^def check_array_instances(evaluator, instance):$/;"	f
check_commands	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    def check_commands(self):$/;"	m	class:ConqueSoleSubprocess
check_defined	vim-airline/autoload/airline/init.vim	/^function! s:check_defined(variable, default)$/;"	f
check_defined_names	jedi/test/test_api/test_defined_names.py	/^    def check_defined_names(self, source, names_):$/;"	m	class:TestDefinedNames
check_defined_section	vim-airline/autoload/airline/extensions.vim	/^function! s:check_defined_section(name)$/;"	f
check_definition_by_marker	jedi/test/test_regression.py	/^    def check_definition_by_marker(self, source, after_cursor, names):$/;"	m	class:TestRegression
check_flow_information	jedi/jedi/evaluate/finder.py	/^def check_flow_information(evaluator, flow, search_name, pos):$/;"	f
check_follow_definition_types	jedi/test/test_api/test_api_classes_follow_definition.py	/^def check_follow_definition_types(source):$/;"	f
check_fp	jedi/test/test_parser/test_fast_parser.py	/^def check_fp(src, number_parsers_used, number_of_splits=None, number_of_misses=0):$/;"	f
check_fs	jedi/jedi/evaluate/imports.py	/^    def check_fs(path):$/;"	f	function:get_modules_containing_name
check_hasattr	jedi/jedi/evaluate/analysis.py	/^    def check_hasattr(node, suite):$/;"	f	function:_check_for_exception_catch
check_in_path	vim-airline/autoload/airline/extensions/branch.vim	/^function! s:check_in_path()$/;"	f
check_interpreter_complete	jedi/test/test_api/test_interpreter.py	/^    def check_interpreter_complete(self, source, namespace, completions,$/;"	m	class:TestInterpreterAPI
check_loaded	jedi/test/test_api/test_api.py	/^    def check_loaded(*modules):$/;"	f	function:test_preload_modules
check_match	jedi/jedi/evaluate/analysis.py	/^    def check_match(cls, exception):$/;"	f	function:_check_for_exception_catch
check_mixed_indent	vim-airline/autoload/airline/extensions/whitespace.vim	/^function! s:check_mixed_indent()$/;"	f
check_mixed_indent_file	vim-airline/autoload/airline/extensions/whitespace.vim	/^function! s:check_mixed_indent_file()$/;"	f
check_nodes	jedi/jedi/parser/tree.py	/^    def check_nodes(self):$/;"	m	class:IfStmt
check_python2_nested_param	jedi/jedi/parser/tree.py	/^    def check_python2_nested_param(node):$/;"	f	function:_create_params
check_python_file	jedi/jedi/evaluate/imports.py	/^    def check_python_file(path):$/;"	f	function:get_modules_containing_name
check_try_for_except	jedi/jedi/evaluate/analysis.py	/^    def check_try_for_except(obj, exception):$/;"	f	function:_check_for_exception_catch
check_tuple_assignments	jedi/jedi/evaluate/finder.py	/^def check_tuple_assignments(evaluator, types, name):$/;"	f
checkbuf	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:checkbuf()$/;"	f
children	jedi/jedi/evaluate/representation.py	/^    def children(self):$/;"	m	class:InstanceElement
chknearby	ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:chknearby(pat)$/;"	f
choices	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:choices(str, choices, func, args)$/;"	f
chop	ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:chop(mrufs)$/;"	f
class	jedi/test/test_api/test_classes.py	/^    assert get_types('from datetime import timedelta') == set(['class'])$/;"	i
class	jedi/test/test_api/test_classes.py	/^    assert get_types('from datetime import timedelta; timedelta') == set(['class'])$/;"	i
class_attr	jedi/test/static_analysis/attribute_error.py	/^    class_attr = ''$/;"	v	class:Cls
class_attr	jedi/test/static_analysis/attribute_error.py	/^    class_attr = a$/;"	v	class:Cls
class_func	jedi/test/completion/goto.py	/^    def class_func(func):$/;"	m	class:ClassDec
class_sub	jedi/test/completion/classes.py	/^    class_sub = 3$/;"	v	class:SubClass
class_super	jedi/test/completion/classes.py	/^    class_super = 3$/;"	v	class:SuperClass
class_v	jedi/test/completion/usages.py	/^    class_v = 1$/;"	v	class:TestClassVar
class_var	jedi/test/completion/decorators.py	/^    class_var = 3$/;"	v	class:MethodDecoratorAsClass
class_var	jedi/test/completion/decorators.py	/^    def class_var(self):$/;"	m	class:MethodDecorators
class_var	jedi/test/completion/usages.py	/^    class_var = 1$/;"	v	class:Super
class_var	jedi/test/completion/usages.py	/^    class_var = 1$/;"	v	class:TestClass
classes	jedi/jedi/api/__init__.py	/^from jedi.api import classes$/;"	i
classes	jedi/jedi/api/completion.py	/^from jedi.api import classes$/;"	i
classes	jedi/jedi/api/usages.py	/^from jedi.api import classes$/;"	i
classes	jedi/test/completion/on_import.py	/^import classes$/;"	i
classes	jedi/test/test_integration_import.py	/^    assert 10 < len(Script("from . import classes", 1, 6, 'whatever.py').completions()) < 30$/;"	i
classes	jedi/test/test_integration_import.py	/^    assert len(Script("from . import classes", 1, 5, 'whatever.py').completions()) > 30$/;"	i
classgetter	jedi/test/completion/classes.py	/^def classgetter():$/;"	f
classifiers	jedi/setup.py	/^      classifiers=[$/;"	v
clean_jedi_cache	jedi/conftest.py	/^def clean_jedi_cache(request):$/;"	f
cleandoc	jedi/jedi/parser/tree.py	/^from inspect import cleandoc$/;"	i
cleandoc	jedi/test/test_api/test_classes.py	/^from inspect import cleandoc$/;"	i
clear	Conque-GDB/autoload/conque_term/conque_screen.py	/^    def clear(self):$/;"	m	class:ConqueScreen
clear	Conque-GDB/autoload/conque_term/conque_sole_shared_memory.py	/^    def clear(self, start=0):$/;"	m	class:ConqueSoleSharedMemory
clear	vim-airline/t/init.vim	/^function! s:clear()$/;"	f
clear_cache	jedi/jedi/parser/utils.py	/^    def clear_cache(self):$/;"	m	class:ParserPickling
clear_time_caches	jedi/jedi/cache.py	/^def clear_time_caches(delete_all=False):$/;"	f
close	Conque-GDB/autoload/conque_term/conque.py	/^    def close(self):$/;"	m	class:Conque
close	Conque-GDB/autoload/conque_term/conque_sole.py	/^    def close(self):$/;"	m	class:ConqueSole
close	Conque-GDB/autoload/conque_term/conque_sole_shared_memory.py	/^    def close(self):$/;"	m	class:ConqueSoleSharedMemory
close	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    def close(self):$/;"	m	class:ConqueSoleSubprocess
close	Conque-GDB/autoload/conque_term/conque_sole_wrapper.py	/^    def close(self):$/;"	m	class:ConqueSoleWrapper
close	Conque-GDB/autoload/conque_term/conque_subprocess.py	/^    def close(self):$/;"	m	class:ConqueSubprocess
close	jedi/jedi/_compatibility.py	/^    def close(self):$/;"	m	class:DummyFile
close	jedi/jedi/parser/fast.py	/^    def close(self):$/;"	m	class:ParserNode
closeChildren	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeChildren(node)$/;"	f
closeCurrentDir	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeCurrentDir(node)$/;"	f
closeTreeWindow	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeTreeWindow()$/;"	f
close_pid	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    def close_pid(self, pid):$/;"	m	class:ConqueSoleSubprocess
closure	jedi/jedi/parser/pgen2/pgen.py	/^        def closure(state):$/;"	f	function:ParserGenerator.make_dfa
cls	jedi/test/completion/stdlib.py	/^cls = random.choice([A, B])$/;"	v
cmd	Conque-GDB/autoload/conque_term/conque_sole_communicator.py	/^                cmd = shm_command.read()$/;"	v
cmd	Conque-GDB/autoload/conque_term/conque_sole_communicator.py	/^        cmd = shm_command.read()$/;"	v
cmd_line	Conque-GDB/autoload/conque_term/conque_sole_communicator.py	/^        cmd_line = " ".join(sys.argv[6:])$/;"	v
code	jedi/jedi/evaluate/analysis.py	/^    def code(self):$/;"	m	class:Error
code_page	Conque-GDB/autoload/conque_term/conque_sole_communicator.py	/^        code_page = int(sys.argv[4])$/;"	v
col	jedi/test/completion/docstring.py	/^    import collections as col$/;"	i
collect_comparison	jedi/test/conftest.py	/^    def collect_comparison(self):$/;"	m	class:StaticAnalysisCase
collect_dir_tests	jedi/test/refactor.py	/^def collect_dir_tests(base_dir, test_files):$/;"	f
collect_dir_tests	jedi/test/run.py	/^def collect_dir_tests(base_dir, test_files, check_thirdparty=False):$/;"	f
collect_file_tests	jedi/test/refactor.py	/^def collect_file_tests(source, path, lines_to_execute):$/;"	f
collect_file_tests	jedi/test/run.py	/^def collect_file_tests(path, lines, lines_to_execute):$/;"	f
collect_ignore	jedi/conftest.py	/^collect_ignore = ["setup.py"]$/;"	v
collect_static_analysis_tests	jedi/test/conftest.py	/^def collect_static_analysis_tests(base_dir, test_files):$/;"	f
collections	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^import re, collections$/;"	i
collections	jedi/jedi/evaluate/stdlib.py	/^import collections$/;"	i
collections_namedtuple	jedi/jedi/evaluate/stdlib.py	/^def collections_namedtuple(evaluator, obj, arguments):$/;"	f
color_cache	Conque-GDB/autoload/conque_term/conque_sole.py	/^    color_cache = {}$/;"	v	class:ConqueSole
color_changes	Conque-GDB/autoload/conque_term/conque.py	/^    color_changes = {}$/;"	v	class:Conque
color_conceals	Conque-GDB/autoload/conque_term/conque_sole.py	/^    color_conceals = {}$/;"	v	class:ConqueSole
color_history	Conque-GDB/autoload/conque_term/conque.py	/^    color_history = {}$/;"	v	class:Conque
color_mode	Conque-GDB/autoload/conque_term/conque_sole.py	/^    color_mode = None$/;"	v	class:ConqueSole
color_pruning	Conque-GDB/autoload/conque_term/conque.py	/^    color_pruning = True$/;"	v	class:Conque
colorama	jedi/test/test_utils.py	/^            import colorama$/;"	i
colors	vim-airline/t/themes.vim	/^    let colors = airline#themes#get_highlight('Foo')$/;"	v
column	jedi/jedi/api/classes.py	/^    def column(self):$/;"	m	class:BaseDefinition
column	jedi/jedi/evaluate/analysis.py	/^    def column(self):$/;"	m	class:Error
columns	Conque-GDB/autoload/conque_term/conque.py	/^    columns = 80 # same as $COLUMNS$/;"	v	class:Conque
columns	Conque-GDB/autoload/conque_term/conque_sole_wrapper.py	/^    columns = 80$/;"	v	class:ConqueSoleWrapper
comment	jedi/jedi/parser/tokenize.py	/^comment = r'#[^\\r\\n]*'$/;"	v
common	jedi/jedi/api/__init__.py	/^from jedi import common$/;"	i
common	jedi/jedi/api/classes.py	/^from jedi import common$/;"	i
common	jedi/jedi/api/helpers.py	/^from jedi import common$/;"	i
common	jedi/jedi/api/keywords.py	/^from jedi import common$/;"	i
common	jedi/jedi/evaluate/compiled/mixed.py	/^from jedi import common$/;"	i
common	jedi/jedi/evaluate/finder.py	/^from jedi import common$/;"	i
common	jedi/jedi/evaluate/imports.py	/^from jedi import common$/;"	i
common	jedi/jedi/evaluate/iterable.py	/^from jedi import common$/;"	i
common	jedi/jedi/evaluate/param.py	/^from jedi import common$/;"	i
common	jedi/jedi/evaluate/representation.py	/^from jedi import common$/;"	i
common	jedi/jedi/evaluate/sys_path.py	/^from jedi import common$/;"	i
common	jedi/jedi/refactoring.py	/^from jedi import common$/;"	i
common	jedi/jedi/utils.py	/^from jedi import common$/;"	i
common	jedi/test/test_regression.py	/^from jedi import common$/;"	i
compare	jedi/test/test_new_parser.py	/^    def compare(string):$/;"	f	function:test_basic_parsing
compare_array	jedi/jedi/api/usages.py	/^    def compare_array(definitions):$/;"	f	function:usages
comparent	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:comparent(...)$/;"	f
comparison	jedi/test/run.py	/^        def comparison(definition):$/;"	f	function:IntegrationTestCase.run_goto_definitions
compfnlen	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compfnlen(...)$/;"	f
compileall	jedi/test/test_evaluate/test_pyc.py	/^    import compileall$/;"	i
compiled	jedi/jedi/api/classes.py	/^from jedi.evaluate import compiled$/;"	i
compiled	jedi/jedi/api/completion.py	/^from jedi.evaluate import compiled$/;"	i
compiled	jedi/jedi/evaluate/__init__.py	/^from jedi.evaluate import compiled$/;"	i
compiled	jedi/jedi/evaluate/compiled/mixed.py	/^from jedi.evaluate import compiled$/;"	i
compiled	jedi/jedi/evaluate/finder.py	/^from jedi.evaluate import compiled$/;"	i
compiled	jedi/jedi/evaluate/imports.py	/^from jedi.evaluate import compiled$/;"	i
compiled	jedi/jedi/evaluate/iterable.py	/^from jedi.evaluate import compiled$/;"	i
compiled	jedi/jedi/evaluate/pep0484.py	/^from jedi.evaluate import compiled$/;"	i
compiled	jedi/jedi/evaluate/representation.py	/^from jedi.evaluate import compiled$/;"	i
compiled	jedi/jedi/evaluate/stdlib.py	/^from jedi.evaluate import compiled$/;"	i
compiled	jedi/test/test_evaluate/test_compiled.py	/^from jedi.evaluate import compiled, representation$/;"	i
compiled_objects_cache	jedi/jedi/evaluate/compiled/__init__.py	/^def compiled_objects_cache(attribute_name):$/;"	f
complete	jedi/jedi/api/classes.py	/^    def complete(self):$/;"	m	class:Completion
complete	jedi/jedi/utils.py	/^        def complete(self, text, state):$/;"	m	class:setup_readline.JediRL
completion_in_comment	jedi/test/completion/basic.py	/^def completion_in_comment():$/;"	f
completion_names	jedi/jedi/api/keywords.py	/^def completion_names(evaluator, stmt, pos, module):$/;"	f
completion_names	jedi/jedi/evaluate/imports.py	/^    def completion_names(self, evaluator, only_modules=False):$/;"	m	class:Importer
completion_names	jedi/jedi/evaluate/imports.py	/^def completion_names(evaluator, imp, pos):$/;"	f
completion_test_dir	jedi/test/run.py	/^    completion_test_dir = os.path.abspath(completion_test_dir)$/;"	v
completion_test_dir	jedi/test/run.py	/^    completion_test_dir = os.path.join(dir_, '..\/test\/completion')$/;"	v
completions	jedi/jedi/api/__init__.py	/^    def completions(self):$/;"	m	class:Script
completions	jedi/jedi/api/completion.py	/^    def completions(self):$/;"	m	class:Completion
completions	jedi/test/test_utils.py	/^    def completions(self, text):$/;"	m	class:TestSetupReadline
compmatlen	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compmatlen(...)$/;"	f
compmreb	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compmreb(...)$/;"	f
compmref	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compmref(...)$/;"	f
composite	jedi/test/completion/docstring.py	/^def composite():$/;"	f
comptime	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:comptime(...)$/;"	f
compval	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compval(...)$/;"	f
compval	ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:compval(...)$/;"	f
con	jedi/test/completion/stdlib.py	/^con = sqlite3.connect()$/;"	v
conditional_method	jedi/test/completion/classes.py	/^        def conditional_method(self):$/;"	f	function:TestX.normal_method
conn	jedi/test/completion/thirdparty/psycopg2_.py	/^conn = psycopg2.connect('dbname=test')$/;"	v
conque_gdb#after_close	Conque-GDB/autoload/conque_gdb.vim	/^function! conque_gdb#after_close(term)$/;"	f
conque_gdb#after_startup	Conque-GDB/autoload/conque_gdb.vim	/^function! conque_gdb#after_startup(term)$/;"	f
conque_gdb#breakpoint	Conque-GDB/autoload/conque_gdb.vim	/^function! conque_gdb#breakpoint(fname, lineno)$/;"	f
conque_gdb#change_gdb_exe	Conque-GDB/autoload/conque_gdb.vim	/^function! conque_gdb#change_gdb_exe(gdb_path)$/;"	f
conque_gdb#command	Conque-GDB/autoload/conque_gdb.vim	/^function! conque_gdb#command(cmd)$/;"	f
conque_gdb#delete_opened_buffers	Conque-GDB/autoload/conque_gdb.vim	/^function! conque_gdb#delete_opened_buffers()$/;"	f
conque_gdb#load_python	Conque-GDB/autoload/conque_gdb.vim	/^function! conque_gdb#load_python()$/;"	f
conque_gdb#open	Conque-GDB/autoload/conque_gdb.vim	/^function! conque_gdb#open(...)$/;"	f
conque_gdb#print_word	Conque-GDB/autoload/conque_gdb.vim	/^function! conque_gdb#print_word(cword)$/;"	f
conque_gdb#remove_breakpoint_sign	Conque-GDB/autoload/conque_gdb.vim	/^function! conque_gdb#remove_breakpoint_sign(id, fname)$/;"	f
conque_gdb#remove_prev_pointer	Conque-GDB/autoload/conque_gdb.vim	/^function! conque_gdb#remove_prev_pointer()$/;"	f
conque_gdb#set_breakpoint_sign	Conque-GDB/autoload/conque_gdb.vim	/^function! conque_gdb#set_breakpoint_sign(id, fname, lineno, enabled)$/;"	f
conque_gdb#toggle_breakpoint	Conque-GDB/autoload/conque_gdb.vim	/^function! conque_gdb#toggle_breakpoint(fullfile, line)$/;"	f
conque_gdb#update_pointer	Conque-GDB/autoload/conque_gdb.vim	/^function! conque_gdb#update_pointer(fname, lineno)$/;"	f
conque_term#bell	Conque-GDB/autoload/conque_term.vim	/^function! conque_term#bell() " {{{$/;"	f
conque_term#call_hooks	Conque-GDB/autoload/conque_term.vim	/^function! conque_term#call_hooks(event, t_obj) " {{{$/;"	f
conque_term#close_all	Conque-GDB/autoload/conque_term.vim	/^function! conque_term#close_all() "{{{$/;"	f
conque_term#create_terminal_object	Conque-GDB/autoload/conque_term.vim	/^function! conque_term#create_terminal_object(...) " {{{$/;"	f
conque_term#dependency_check	Conque-GDB/autoload/conque_term.vim	/^function! conque_term#dependency_check(...) " {{{$/;"	f
conque_term#exec_file	Conque-GDB/autoload/conque_term.vim	/^function! conque_term#exec_file() "{{{$/;"	f
conque_term#fail	Conque-GDB/autoload/conque_term.vim	/^function! conque_term#fail(feature) " {{{$/;"	f
conque_term#find_python_exe	Conque-GDB/autoload/conque_term.vim	/^function! conque_term#find_python_exe() " {{{$/;"	f
conque_term#get_instance	Conque-GDB/autoload/conque_term.vim	/^function! conque_term#get_instance(...) " {{{$/;"	f
conque_term#get_py	Conque-GDB/autoload/conque_term.vim	/^function! conque_term#get_py() " {{{$/;"	f
conque_term#init	Conque-GDB/autoload/conque_term.vim	/^function! conque_term#init() " {{{$/;"	f
conque_term#init_conceal_color	Conque-GDB/autoload/conque_term.vim	/^function! conque_term#init_conceal_color() " {{{$/;"	f
conque_term#key_press	Conque-GDB/autoload/conque_term.vim	/^function! conque_term#key_press() "{{{$/;"	f
conque_term#load_python	Conque-GDB/autoload/conque_term.vim	/^function! conque_term#load_python() " {{{$/;"	f
conque_term#on_blur	Conque-GDB/autoload/conque_term.vim	/^function! conque_term#on_blur(is_buffer) " {{{$/;"	f
conque_term#on_focus	Conque-GDB/autoload/conque_term.vim	/^function! conque_term#on_focus(...) " {{{$/;"	f
conque_term#open	Conque-GDB/autoload/conque_term.vim	/^function! conque_term#open(...) "{{{$/;"	f
conque_term#read_all	Conque-GDB/autoload/conque_term.vim	/^function! conque_term#read_all(insert_mode) "{{{$/;"	f
conque_term#register_function	Conque-GDB/autoload/conque_term.vim	/^function! conque_term#register_function(event, function_name) " {{{$/;"	f
conque_term#resume_session	Conque-GDB/autoload/conque_term.vim	/^function! conque_term#resume_session() " {{{$/;"	f
conque_term#send_file	Conque-GDB/autoload/conque_term.vim	/^function! conque_term#send_file() "{{{$/;"	f
conque_term#send_selected	Conque-GDB/autoload/conque_term.vim	/^function! conque_term#send_selected(type) "{{{$/;"	f
conque_term#set_buffer_settings	Conque-GDB/autoload/conque_term.vim	/^function! conque_term#set_buffer_settings(command, vim_startup_commands) "{{{$/;"	f
conque_term#set_mappings	Conque-GDB/autoload/conque_term.vim	/^function! conque_term#set_mappings(action) "{{{$/;"	f
conque_term#subprocess	Conque-GDB/autoload/conque_term.vim	/^function! conque_term#subprocess(command) " {{{$/;"	f
console_height	Conque-GDB/autoload/conque_term/conque_sole_communicator.py	/^        console_height = int(sys.argv[3])$/;"	v
console_width	Conque-GDB/autoload/conque_term/conque_sole_communicator.py	/^        console_width = int(sys.argv[2])$/;"	v
constant	jedi/test/completion/decorators.py	/^    def constant(self):$/;"	m	class:MethodDecorators
constant	jedi/test/completion/precedence.py	/^constant = 1$/;"	v
cont_str	jedi/jedi/parser/tokenize.py	/^cont_str = group(r"[bBuU]?[rR]?'[^\\n'\\\\]*(?:\\\\.[^\\n'\\\\]*)*" +$/;"	v
contextlib	jedi/jedi/common.py	/^import contextlib$/;"	i
convert_leaf	jedi/jedi/parser/__init__.py	/^    def convert_leaf(self, grammar, type, value, prefix, start_pos):$/;"	m	class:Parser
convert_node	jedi/jedi/parser/__init__.py	/^    def convert_node(self, grammar, type, children):$/;"	m	class:Parser
convert_to_vim_file	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    def convert_to_vim_file(self, filename):$/;"	m	class:ConqueGdb
cookie_re	jedi/jedi/parser/tokenize.py	/^cookie_re = re.compile("coding[:=]\\s*([-\\w.]+)")$/;"	v
copy	jedi/jedi/api/interpreter.py	/^import copy$/;"	i
copy	jedi/jedi/evaluate/__init__.py	/^import copy$/;"	i
copy	jedi/jedi/evaluate/helpers.py	/^import copy$/;"	i
copy	jedi/jedi/parser/pgen2/grammar.py	/^    def copy(self):$/;"	m	class:Grammar
copy	jedi/test/completion/stdlib.py	/^import copy$/;"	i
copy_node	jedi/jedi/evaluate/helpers.py	/^    def copy_node(obj):$/;"	f	function:deep_ast_copy
copyright	jedi/docs/conf.py	/^copyright = u'2012 - {today.year}, Jedi contributors'.format(today=datetime.date.today())$/;"	v
cosh	jedi/test/completion/ordering.py	/^cosh = 3$/;"	v
count	vim-airline/autoload/airline/extensions/ale.vim	/^function! s:count(index)$/;"	f
create	Conque-GDB/autoload/conque_term/conque_sole_shared_memory.py	/^    def create(self, access='write'):$/;"	m	class:ConqueSoleSharedMemory
create	jedi/jedi/evaluate/compiled/__init__.py	/^def create(evaluator, obj, parent=None, module=None):$/;"	f
create	jedi/jedi/evaluate/compiled/mixed.py	/^def create(evaluator, obj):$/;"	f
create	jedi/jedi/evaluate/precedence.py	/^from jedi.evaluate.compiled import CompiledObject, create, builtin_from_name$/;"	i
create	vim-airline/autoload/airline/section.vim	/^function! s:create(parts, append)$/;"	f
create_evaluated_sequence_set	jedi/jedi/evaluate/iterable.py	/^def create_evaluated_sequence_set(evaluator, *types_order, **kwargs):$/;"	f
create_index_types	jedi/jedi/evaluate/iterable.py	/^def create_index_types(evaluator, index):$/;"	f
csi_add_spaces	Conque-GDB/autoload/conque_term/conque.py	/^    def csi_add_spaces(self, csi):$/;"	m	class:Conque
csi_clear_line	Conque-GDB/autoload/conque_term/conque.py	/^    def csi_clear_line(self, csi):$/;"	m	class:Conque
csi_clear_screen	Conque-GDB/autoload/conque_term/conque.py	/^    def csi_clear_screen(self, csi):$/;"	m	class:Conque
csi_cursor	Conque-GDB/autoload/conque_term/conque.py	/^    def csi_cursor(self, csi):$/;"	m	class:Conque
csi_cursor_down	Conque-GDB/autoload/conque_term/conque.py	/^    def csi_cursor_down(self, csi):$/;"	m	class:Conque
csi_cursor_left	Conque-GDB/autoload/conque_term/conque.py	/^    def csi_cursor_left(self, csi):$/;"	m	class:Conque
csi_cursor_right	Conque-GDB/autoload/conque_term/conque.py	/^    def csi_cursor_right(self, csi):$/;"	m	class:Conque
csi_cursor_to_column	Conque-GDB/autoload/conque_term/conque.py	/^    def csi_cursor_to_column(self, csi):$/;"	m	class:Conque
csi_cursor_up	Conque-GDB/autoload/conque_term/conque.py	/^    def csi_cursor_up(self, csi):$/;"	m	class:Conque
csi_delete_chars	Conque-GDB/autoload/conque_term/conque.py	/^    def csi_delete_chars(self, csi):$/;"	m	class:Conque
csi_font	Conque-GDB/autoload/conque_term/conque.py	/^    def csi_font(self, csi):$/;"	m	class:Conque
csi_reset	Conque-GDB/autoload/conque_term/conque.py	/^    def csi_reset(self, csi):$/;"	m	class:Conque
csi_set	Conque-GDB/autoload/conque_term/conque.py	/^    def csi_set(self, csi):$/;"	m	class:Conque
csi_set_coords	Conque-GDB/autoload/conque_term/conque.py	/^    def csi_set_coords(self, csi):$/;"	m	class:Conque
csi_tab_clear	Conque-GDB/autoload/conque_term/conque.py	/^    def csi_tab_clear(self, csi):$/;"	m	class:Conque
ctl_bel	Conque-GDB/autoload/conque_term/conque.py	/^    def ctl_bel(self):$/;"	m	class:Conque
ctl_bs	Conque-GDB/autoload/conque_term/conque.py	/^    def ctl_bs(self):$/;"	m	class:Conque
ctl_cr	Conque-GDB/autoload/conque_term/conque.py	/^    def ctl_cr(self):$/;"	m	class:Conque
ctl_nl	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    def ctl_nl(self):$/;"	m	class:ConqueGdb
ctl_nl	Conque-GDB/autoload/conque_term/conque.py	/^    def ctl_nl(self):$/;"	m	class:Conque
ctl_si	Conque-GDB/autoload/conque_term/conque.py	/^    def ctl_si(self):$/;"	m	class:Conque
ctl_so	Conque-GDB/autoload/conque_term/conque.py	/^    def ctl_so(self):$/;"	m	class:Conque
ctl_soh	Conque-GDB/autoload/conque_term/conque.py	/^    def ctl_soh(self):$/;"	m	class:Conque
ctl_stx	Conque-GDB/autoload/conque_term/conque.py	/^    def ctl_stx(self):$/;"	m	class:Conque
ctl_tab	Conque-GDB/autoload/conque_term/conque.py	/^    def ctl_tab(self):$/;"	m	class:Conque
ctrlp#acceptfile	ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#acceptfile(...)$/;"	f
ctrlp#bookmarkdir#accept	ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#accept(mode, str)$/;"	f
ctrlp#bookmarkdir#add	ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#add(dir, ...)$/;"	f
ctrlp#bookmarkdir#id	ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#id()$/;"	f
ctrlp#bookmarkdir#init	ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#init()$/;"	f
ctrlp#bookmarkdir#remove	ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#remove(entries)$/;"	f
ctrlp#buffers	ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#buffers(...)$/;"	f
ctrlp#buffertag#accept	ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#accept(mode, str)$/;"	f
ctrlp#buffertag#cmd	ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#cmd(mode, ...)$/;"	f
ctrlp#buffertag#exit	ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#exit()$/;"	f
ctrlp#buffertag#init	ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#init(fname)$/;"	f
ctrlp#buffertag#opts	ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#opts()$/;"	f
ctrlp#call	ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#call(func, ...)$/;"	f
ctrlp#changes#accept	ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#accept(mode, str)$/;"	f
ctrlp#changes#cmd	ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#cmd(mode, ...)$/;"	f
ctrlp#changes#exit	ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#exit()$/;"	f
ctrlp#changes#init	ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#init(original_bufnr, bufnr)$/;"	f
ctrlp#clr	ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#clr(...)$/;"	f
ctrlp#clra	ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#clra()$/;"	f
ctrlp#complen	ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#complen(...)$/;"	f
ctrlp#dir#accept	ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! ctrlp#dir#accept(mode, str)$/;"	f
ctrlp#dir#id	ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! ctrlp#dir#id()$/;"	f
ctrlp#dir#init	ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! ctrlp#dir#init(...)$/;"	f
ctrlp#dirnfile	ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#dirnfile(entries)$/;"	f
ctrlp#exit	ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#exit()$/;"	f
ctrlp#files	ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#files()$/;"	f
ctrlp#getcline	ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#getcline()$/;"	f
ctrlp#getmarkedlist	ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#getmarkedlist()$/;"	f
ctrlp#getvar	ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#getvar(var)$/;"	f
ctrlp#hicheck	ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#hicheck(grp, defgrp)$/;"	f
ctrlp#igncwd	ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#igncwd(cwd)$/;"	f
ctrlp#init	ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#init(type, ...)$/;"	f
ctrlp#j2l	ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#j2l(nr)$/;"	f
ctrlp#line#accept	ctrlp.vim/autoload/ctrlp/line.vim	/^fu! ctrlp#line#accept(mode, str)$/;"	f
ctrlp#line#cmd	ctrlp.vim/autoload/ctrlp/line.vim	/^fu! ctrlp#line#cmd(mode, ...)$/;"	f
ctrlp#line#init	ctrlp.vim/autoload/ctrlp/line.vim	/^fu! ctrlp#line#init(bufnr)$/;"	f
ctrlp#mixed#id	ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! ctrlp#mixed#id()$/;"	f
ctrlp#mixed#init	ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! ctrlp#mixed#init(clim)$/;"	f
ctrlp#modfilecond	ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#modfilecond(w)$/;"	f
ctrlp#mrufiles#add	ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#add(fn)$/;"	f
ctrlp#mrufiles#bufs	ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#bufs()$/;"	f
ctrlp#mrufiles#cachefile	ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#cachefile()$/;"	f
ctrlp#mrufiles#init	ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#init()$/;"	f
ctrlp#mrufiles#list	ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#list(...)$/;"	f
ctrlp#mrufiles#opts	ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#opts()$/;"	f
ctrlp#mrufiles#refresh	ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#refresh(...)$/;"	f
ctrlp#mrufiles#remove	ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#remove(files)$/;"	f
ctrlp#mrufiles#tgrel	ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#tgrel()$/;"	f
ctrlp#normcmd	ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#normcmd(cmd, ...)$/;"	f
ctrlp#nosy	ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#nosy()$/;"	f
ctrlp#progress	ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#progress(enum, ...)$/;"	f
ctrlp#prtclear	ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#prtclear()$/;"	f
ctrlp#quickfix#accept	ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! ctrlp#quickfix#accept(mode, str)$/;"	f
ctrlp#quickfix#id	ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! ctrlp#quickfix#id()$/;"	f
ctrlp#quickfix#init	ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! ctrlp#quickfix#init()$/;"	f
ctrlp#recordhist	ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#recordhist()$/;"	f
ctrlp#rmbasedir	ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#rmbasedir(items)$/;"	f
ctrlp#rtscript#id	ctrlp.vim/autoload/ctrlp/rtscript.vim	/^fu! ctrlp#rtscript#id()$/;"	f
ctrlp#rtscript#init	ctrlp.vim/autoload/ctrlp/rtscript.vim	/^fu! ctrlp#rtscript#init(caching)$/;"	f
ctrlp#setdir	ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#setdir(path, ...)$/;"	f
ctrlp#setlcdir	ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#setlcdir()$/;"	f
ctrlp#setlines	ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#setlines(...)$/;"	f
ctrlp#statusline	ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#statusline()$/;"	f
ctrlp#switchtype	ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#switchtype(id)$/;"	f
ctrlp#syntax	ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#syntax()$/;"	f
ctrlp#tabcount	ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#tabcount()$/;"	f
ctrlp#tag#accept	ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#accept(mode, str)$/;"	f
ctrlp#tag#enter	ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#enter()$/;"	f
ctrlp#tag#id	ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#id()$/;"	f
ctrlp#tag#init	ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#init()$/;"	f
ctrlp#undo#accept	ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#accept(mode, str)$/;"	f
ctrlp#undo#enter	ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#enter()$/;"	f
ctrlp#undo#exit	ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#exit()$/;"	f
ctrlp#undo#id	ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#id()$/;"	f
ctrlp#undo#init	ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#init()$/;"	f
ctrlp#utils#cachedir	ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#cachedir()$/;"	f
ctrlp#utils#cachefile	ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#cachefile(...)$/;"	f
ctrlp#utils#fnesc	ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#fnesc(path, type, ...)$/;"	f
ctrlp#utils#glob	ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#glob(...)$/;"	f
ctrlp#utils#globpath	ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#globpath(...)$/;"	f
ctrlp#utils#lash	ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#lash()$/;"	f
ctrlp#utils#mkdir	ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#mkdir(dir)$/;"	f
ctrlp#utils#opts	ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#opts()$/;"	f
ctrlp#utils#readfile	ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#readfile(file)$/;"	f
ctrlp#utils#writecache	ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#writecache(lines, ...)$/;"	f
ctypes	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^import ctypes$/;"	i
ctypes	Conque-GDB/autoload/conque_term/conque_sole_wrapper.py	/^import ctypes$/;"	i
cur	jedi/test/completion/thirdparty/psycopg2_.py	/^cur = conn.cursor()$/;"	v
curr_bp_line	Conque-GDB/autoload/conque_gdb/conque_sole_gdb.py	/^    curr_bp_line = -1 $/;"	v	class:ConqueSoleGdb
current	jedi/test/run.py	/^    current = cases[0].path if cases else None$/;"	v
current_suite	jedi/jedi/parser/__init__.py	/^        def current_suite(stack):$/;"	f	function:ParserWithRecovery.error_recovery
cursor_col	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    cursor_col = 0$/;"	v	class:ConqueSoleSubprocess
cursor_line	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    cursor_line = 0$/;"	v	class:ConqueSoleSubprocess
cursor_set	Conque-GDB/autoload/conque_term/conque.py	/^    cursor_set = False$/;"	v	class:Conque
cwd_at	jedi/test/helpers.py	/^def cwd_at(path):$/;"	f
cwd_at	jedi/test/test_api/test_api_classes_follow_definition.py	/^from ..helpers import cwd_at$/;"	i
cwd_at	jedi/test/test_api/test_classes.py	/^from ..helpers import cwd_at$/;"	i
cwd_at	jedi/test/test_evaluate/test_buildout_detection.py	/^from ..helpers import cwd_at$/;"	i
cwd_at	jedi/test/test_evaluate/test_extension.py	/^from ..helpers import cwd_at$/;"	i
cwd_at	jedi/test/test_evaluate/test_imports.py	/^from ..helpers import cwd_at$/;"	i
cwd_at	jedi/test/test_evaluate/test_pyc.py	/^from ..helpers import cwd_at$/;"	i
cwd_at	jedi/test/test_integration_import.py	/^from .helpers import cwd_at$/;"	i
cwd_at	jedi/test/test_regression.py	/^from .helpers import TestCase, cwd_at$/;"	i
cwd_at	jedi/test/test_speed.py	/^from .helpers import TestCase, cwd_at$/;"	i
cwd_at	jedi/test/test_utils.py	/^from .helpers import unittest, cwd_at$/;"	i
d	jedi/test/completion/arrays.py	/^d = dict({'a':''})$/;"	v
d	jedi/test/completion/classes.py	/^    d = b$/;"	v	class:V
d	jedi/test/completion/comprehensions.py	/^d = {a - 1: b for a, b in {1: 'a', 3: 1.0}.items()}$/;"	v
d	jedi/test/completion/decorators.py	/^    def d(self):$/;"	m	class:MethodDecoratorDoesntExist
d	jedi/test/completion/docstring.py	/^d = ''$/;"	v
d	jedi/test/completion/pep0484_comments.py	/^d = "It should not read comments from the next line"$/;"	v
d	jedi/test/completion/types.py	/^d = {'a': 3, 1.0: list}$/;"	v
data	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    data = []$/;"	v	class:ConqueSoleSubprocess
date	jedi/test/completion/on_import.py	/^import datetime.date$/;"	i
date	jedi/test/static_analysis/imports.py	/^from datetime import date$/;"	i
date	jedi/test/static_analysis/imports.py	/^import datetime.date$/;"	i
date	jedi/test/static_analysis/imports.py	/^import not_existing_nested.date$/;"	i
datetime	jedi/docs/conf.py	/^import datetime$/;"	i
datetime	jedi/test/completion/docstring.py	/^import datetime$/;"	i
datetime	jedi/test/completion/isinstance.py	/^import datetime$/;"	i
datetime	jedi/test/completion/on_import.py	/^import datetime$/;"	i
datetime	jedi/test/completion/on_import.py	/^import datetime.$/;"	i
datetime	jedi/test/completion/on_import.py	/^import datetime.date$/;"	i
datetime	jedi/test/completion/on_import.py	/^import json, datetime$/;"	i
datetime	jedi/test/static_analysis/imports.py	/^import datetime.date$/;"	i
datetime	jedi/test/test_api/test_classes.py	/^    assert get_types('import datetime; datetime') == set(['module'])$/;"	i
datetime	jedi/test/test_api/test_interpreter.py	/^        import datetime$/;"	i
datetime_imported	jedi/test/completion/docstring.py	/^from datetime import datetime as datetime_imported$/;"	i
dbg	jedi/jedi/debug.py	/^def dbg(message, *args, **kwargs):$/;"	f
dct	jedi/test/static_analysis/iterable.py	/^dct = {3: ''}$/;"	v
debug	jedi/jedi/api/__init__.py	/^from jedi import debug$/;"	i
debug	jedi/jedi/api/completion.py	/^from jedi import debug$/;"	i
debug	jedi/jedi/evaluate/__init__.py	/^from jedi import debug$/;"	i
debug	jedi/jedi/evaluate/analysis.py	/^from jedi import debug$/;"	i
debug	jedi/jedi/evaluate/compiled/__init__.py	/^from jedi import debug$/;"	i
debug	jedi/jedi/evaluate/dynamic.py	/^from jedi import debug$/;"	i
debug	jedi/jedi/evaluate/finder.py	/^from jedi import debug$/;"	i
debug	jedi/jedi/evaluate/imports.py	/^from jedi import debug$/;"	i
debug	jedi/jedi/evaluate/iterable.py	/^from jedi import debug$/;"	i
debug	jedi/jedi/evaluate/param.py	/^from jedi import debug$/;"	i
debug	jedi/jedi/evaluate/pep0484.py	/^from jedi import debug$/;"	i
debug	jedi/jedi/evaluate/precedence.py	/^from jedi import debug$/;"	i
debug	jedi/jedi/evaluate/recursion.py	/^from jedi import debug$/;"	i
debug	jedi/jedi/evaluate/representation.py	/^from jedi import debug$/;"	i
debug	jedi/jedi/evaluate/stdlib.py	/^from jedi import debug$/;"	i
debug	jedi/jedi/evaluate/sys_path.py	/^from jedi import debug$/;"	i
debug	jedi/jedi/parser/fast.py	/^from jedi import debug$/;"	i
debug	jedi/jedi/parser/utils.py	/^from jedi import debug$/;"	i
debug	jedi/test/test_debug.py	/^from jedi import debug$/;"	i
debug_function	jedi/jedi/debug.py	/^debug_function = None$/;"	v
dec	jedi/test/completion/decorators.py	/^def dec(f):$/;"	f
dec	jedi/test/completion/decorators.py	/^def dec(func):$/;"	f
dec	jedi/test/completion/goto.py	/^def dec(dec_param=3):$/;"	f
dec2	jedi/test/completion/decorators.py	/^def dec2(func2):$/;"	f
dec_number	jedi/jedi/parser/tokenize.py	/^dec_number = r'(?:0+|[1-9][0-9]*)'$/;"	v
decorated	jedi/test/completion/decorators.py	/^def decorated(a,b):$/;"	f
decorated	jedi/test/test_speed.py	/^        def decorated(func):$/;"	f	function:TestSpeed._check_speed
decorator	jedi/jedi/evaluate/compiled/__init__.py	/^    def decorator(func):$/;"	f	function:compiled_objects_cache
decorator	jedi/test/completion/decorators.py	/^def decorator(func):$/;"	f
decorator	jedi/test/helpers.py	/^    def decorator(func):$/;"	f	function:cwd_at
dedent	jedi/jedi/evaluate/docstrings.py	/^from textwrap import dedent$/;"	i
dedent	jedi/test/test_api/test_api.py	/^from textwrap import dedent$/;"	i
dedent	jedi/test/test_api/test_call_signatures.py	/^from textwrap import dedent$/;"	i
dedent	jedi/test/test_api/test_classes.py	/^from textwrap import dedent$/;"	i
dedent	jedi/test/test_api/test_completion_context.py	/^from textwrap import dedent$/;"	i
dedent	jedi/test/test_api/test_defined_names.py	/^from textwrap import dedent$/;"	i
dedent	jedi/test/test_evaluate/test_annotations.py	/^from textwrap import dedent$/;"	i
dedent	jedi/test/test_evaluate/test_buildout_detection.py	/^from textwrap import dedent$/;"	i
dedent	jedi/test/test_evaluate/test_compiled.py	/^from textwrap import dedent$/;"	i
dedent	jedi/test/test_evaluate/test_docstring.py	/^from textwrap import dedent$/;"	i
dedent	jedi/test/test_evaluate/test_helpers.py	/^from textwrap import dedent$/;"	i
dedent	jedi/test/test_evaluate/test_representation.py	/^from textwrap import dedent$/;"	i
dedent	jedi/test/test_integration_stdlib.py	/^from textwrap import dedent$/;"	i
dedent	jedi/test/test_parser/test_fast_parser.py	/^from textwrap import dedent$/;"	i
dedent	jedi/test/test_parser/test_param_splitting.py	/^from textwrap import dedent$/;"	i
dedent	jedi/test/test_parser/test_parser.py	/^from textwrap import dedent$/;"	i
dedent	jedi/test/test_parser/test_parser_tree.py	/^from textwrap import dedent$/;"	i
dedent	jedi/test/test_parser/test_pgen2.py	/^from textwrap import dedent$/;"	i
dedent	jedi/test/test_parser/test_tokenize.py	/^from textwrap import dedent$/;"	i
deep_ast_copy	jedi/jedi/evaluate/helpers.py	/^def deep_ast_copy(obj, parent=None, new_elements=None):$/;"	f
def_func	jedi/test/completion/dynamic_params.py	/^def def_func(f):$/;"	f
def_ref_filter	jedi/jedi/api/__init__.py	/^    def def_ref_filter(_def):$/;"	f	function:names
default	jedi/jedi/parser/tree.py	/^    def default(self):$/;"	m	class:Param
default	jedi/test/completion/functions.py	/^default = int()$/;"	v
default	jedi/test/static_analysis/arguments.py	/^def default(x, y=1, z=2):$/;"	f
default_attribute	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    default_attribute = 7$/;"	v	class:ConqueSoleSubprocess
default_function	jedi/test/completion/functions.py	/^def default_function(a=default):$/;"	f
default_style	jedi/docs/_themes/flask_theme_support.py	/^    default_style = ""$/;"	v	class:FlaskyStyle
defaultdict	jedi/jedi/evaluate/param.py	/^from collections import defaultdict$/;"	i
defined_lookup	jedi/test/static_analysis/attribute_error.py	/^    def defined_lookup(self, obj):$/;"	m	class:Cls
defined_names	jedi/jedi/__init__.py	/^from jedi.api import preload_module, defined_names, names$/;"	i
defined_names	jedi/jedi/api/__init__.py	/^def defined_names(source, path=None, encoding='utf-8'):$/;"	f
defined_names	jedi/jedi/api/classes.py	/^    def defined_names(self):$/;"	m	class:Definition
defined_names	jedi/jedi/api/classes.py	/^def defined_names(evaluator, scope):$/;"	f
defined_names	jedi/test/test_api/test_classes.py	/^from jedi import Script, defined_names, __doc__ as jedi_doc, names$/;"	i
defined_names	jedi/test/test_api/test_defined_names.py	/^from jedi import defined_names, names$/;"	i
defines_one_name	jedi/jedi/parser/tree.py	/^    def defines_one_name(self):$/;"	m	class:ForStmt
definition	jedi/jedi/evaluate/param.py	/^        self.trailer = trailer  # Can be None, e.g. in a class definition.$/;"	c	function:Arguments.__init__
definition	jedi/test/completion/goto.py	/^definition = 3$/;"	v
definition	jedi/test/completion/parser.py	/^definition = 0$/;"	v
definition	jedi/test/run.py	/^        def definition(correct, correct_start, path):$/;"	f	function:IntegrationTestCase.run_goto_definitions
delent	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:delent(rfunc)$/;"	f
deleteBookmark	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:deleteBookmark(bm)$/;"	f
desc_with_module	jedi/jedi/api/classes.py	/^    def desc_with_module(self):$/;"	m	class:Definition
description	jedi/jedi/api/classes.py	/^    def description(self):$/;"	m	class:BaseDefinition
description	jedi/jedi/api/classes.py	/^    def description(self):$/;"	m	class:Completion
description	jedi/jedi/api/classes.py	/^    def description(self):$/;"	m	class:Definition
description	jedi/setup.py	/^      description='An autocompletion tool for Python that can be used for text editors.',$/;"	v
description	jedi/test/test_evaluate/init_extension_module/setup.py	/^      description='',$/;"	v
detect_encoding	jedi/jedi/common.py	/^    def detect_encoding():$/;"	f	function:source_to_unicode
dic	jedi/test/completion/arrays.py	/^dic = {str(key): ''}$/;"	v
dic	jedi/test/completion/types.py	/^dic = {}$/;"	v
dic2	jedi/test/completion/arrays.py	/^dic2 = {'asdf': 3, 'b': 'str'}$/;"	v
dic2	jedi/test/completion/types.py	/^dic2 = dict(a=1, b=2)$/;"	v
dic2	jedi/test/completion/types.py	/^dic2 = {'asdf': 3}$/;"	v
dict2list	ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:dict2list(dict)$/;"	f
dict_values	jedi/jedi/evaluate/iterable.py	/^    def dict_values(self):$/;"	m	class:ArrayMixin
dict_values	jedi/jedi/evaluate/iterable.py	/^    def dict_values(self):$/;"	m	class:DictComprehension
dictindex	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dictindex(dict, expr)$/;"	f
diff	jedi/jedi/refactoring.py	/^    def diff(self):$/;"	m	class:Refactoring
diff_code_assert	jedi/test/test_parser/test_get_code.py	/^def diff_code_assert(a, b, n=4):$/;"	f
difflib	jedi/jedi/refactoring.py	/^import difflib$/;"	i
difflib	jedi/test/test_parser/test_get_code.py	/^import difflib$/;"	i
dir_	jedi/test/run.py	/^    dir_ = os.path.dirname(os.path.realpath(__file__))$/;"	v
dircompl	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dircompl(be, sd)$/;"	f
dirname	jedi/jedi/__main__.py	/^from os.path import join, dirname, abspath, isdir$/;"	i
dirname	jedi/scripts/wx_check.py	/^from os.path import abspath, dirname$/;"	i
dirname	jedi/test/completion/sys_path.py	/^from os import dirname$/;"	i
dirname	jedi/test/helpers.py	/^from os.path import abspath, dirname$/;"	i
dirname	jedi/test/test_evaluate/test_namespace_package.py	/^from os.path import dirname, join$/;"	i
dismrk	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dismrk()$/;"	f
displayHelp	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:displayHelp()$/;"	f
division	jedi/sith.py	/^from __future__ import print_function, division, unicode_literals$/;"	i
django	jedi/test/completion/thirdparty/django_.py	/^import django$/;"	i
do_color	Conque-GDB/autoload/conque_term/conque_sole.py	/^    def do_color(self, start=0, end=0, attributes='', stats=None):$/;"	m	class:ConqueSole
doc	jedi/jedi/api/classes.py	/^    def doc(self):$/;"	m	class:BaseDefinition
doc	jedi/jedi/evaluate/compiled/__init__.py	/^    def doc(self):$/;"	m	class:CompiledObject
doc	jedi/jedi/parser/tree.py	/^    def doc(self):$/;"	m	class:Class
doc	jedi/jedi/parser/tree.py	/^    def doc(self):$/;"	m	class:Function
docopt	jedi/scripts/profile.py	/^from docopt import docopt$/;"	i
docopt	jedi/sith.py	/^from docopt import docopt$/;"	i
docopt	jedi/test/run.py	/^    import docopt$/;"	i
docstr	jedi/jedi/api/keywords.py	/^    def docstr(self):$/;"	m	class:Keyword
docstr	jedi/test/test_api/test_classes.py	/^    def docstr(src, result):$/;"	f	function:test_completion_docstring
docstr_defaults	jedi/jedi/evaluate/compiled/__init__.py	/^docstr_defaults = {$/;"	v
docstring	jedi/jedi/api/classes.py	/^    def docstring(self, raw=False):$/;"	m	class:BaseDefinition
docstring	jedi/jedi/api/classes.py	/^    def docstring(self, raw=False, fast=True):$/;"	m	class:Completion
docstrings	jedi/jedi/evaluate/finder.py	/^from jedi.evaluate import docstrings$/;"	i
docstrings	jedi/jedi/evaluate/representation.py	/^from jedi.evaluate import docstrings$/;"	i
dohighlight	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dohighlight()$/;"	f
dosigns	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dosigns()$/;"	f
dotted_from_fs_path	jedi/jedi/evaluate/compiled/__init__.py	/^def dotted_from_fs_path(fs_path, sys_path):$/;"	f
double	jedi/jedi/parser/tokenize.py	/^double = r'[^"\\\\]*(?:\\\\.[^"\\\\]*)*"'$/;"	v
double3	jedi/jedi/parser/tokenize.py	/^double3 = r'[^"\\\\]*(?:(?:\\\\.|"(?!""))[^"\\\\]*)*"""'$/;"	v
double_exe	jedi/test/completion/functions.py	/^def double_exe(param):$/;"	f
dump	jedi/jedi/parser/pgen2/grammar.py	/^    def dump(self, filename):$/;"	m	class:Grammar
dump	jedi/test/completion/on_import.py	/^from json import load, dump$/;"	i
dump_dfa	jedi/jedi/parser/pgen2/pgen.py	/^    def dump_dfa(self, name, dfa):$/;"	m	class:ParserGenerator
dump_nfa	jedi/jedi/parser/pgen2/pgen.py	/^    def dump_nfa(self, name, start, finish):$/;"	m	class:ParserGenerator
dynamic	jedi/jedi/evaluate/finder.py	/^from jedi.evaluate import dynamic$/;"	i
dynamic_array_additions	jedi/jedi/settings.py	/^dynamic_array_additions = True$/;"	v
dynamic_flow_information	jedi/jedi/settings.py	/^dynamic_flow_information = True$/;"	v
dynamic_params	jedi/jedi/settings.py	/^dynamic_params = True$/;"	v
dynamic_params_for_other_modules	jedi/jedi/settings.py	/^dynamic_params_for_other_modules = True$/;"	v
e	jedi/test/completion/descriptors.py	/^e = E(1)$/;"	v
e	jedi/test/completion/functions.py	/^e = args_func(*[1+"", {}])$/;"	v
e	jedi/test/completion/pep0484_comments.py	/^e = "It should not read comments from the previous line"$/;"	v
el	jedi/test/completion/thirdparty/jedi_.py	/^el = functions.completions()[0]$/;"	v
el	jedi/test/completion/thirdparty/jedi_.py	/^el = list(evaluate.get_names_for_scope())[0]$/;"	v
el	jedi/test/completion/thirdparty/jedi_.py	/^el = list(evaluate.get_names_for_scope())[0][0]$/;"	v
el	jedi/test/completion/thirdparty/jedi_.py	/^el = list(evaluate.get_names_for_scope())[0][1]$/;"	v
el	jedi/test/completion/thirdparty/jedi_.py	/^el = list(evaluate.get_names_for_scope())[0][1][0]$/;"	v
el	jedi/test/completion/thirdparty/jedi_.py	/^el = list(evaluate.get_names_for_scope(1))[0][0]$/;"	v
el	jedi/test/completion/thirdparty/jedi_.py	/^el = list(evaluate.get_names_for_scope(1))[0][1]$/;"	v
el	jedi/test/completion/thirdparty/jedi_.py	/^el = scopes$/;"	v
elapsed	ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:elapsed(nr)$/;"	f
elif_flows1	jedi/test/completion/flow_analysis.py	/^def elif_flows1(x):$/;"	f
elif_flows2	jedi/test/completion/flow_analysis.py	/^def elif_flows2(x):$/;"	f
elif_flows3	jedi/test/completion/flow_analysis.py	/^def elif_flows3(x):$/;"	f
elif_name	jedi/test/completion/flow_analysis.py	/^def elif_name(x):$/;"	f
empty_assert	jedi/test/completion/invalid.py	/^def empty_assert():$/;"	f
enable_colors	Conque-GDB/autoload/conque_term/conque.py	/^    enable_colors = True$/;"	v	class:Conque
enable_notice	jedi/jedi/debug.py	/^enable_notice = False$/;"	v
enable_speed	jedi/jedi/debug.py	/^enable_speed = False$/;"	v
enable_warning	jedi/jedi/debug.py	/^enable_warning = False$/;"	v
enabled	jedi/test/test_cache.py	/^@pytest.mark.skipif('True', message='Currently the star import cache is not enabled.')$/;"	i
encoding	Conque-GDB/autoload/conque_term/conque_sole.py	/^    encoding = None$/;"	v	class:ConqueSole
encoding	Conque-GDB/autoload/conque_term/conque_sole_shared_memory.py	/^    encoding = 'utf-8'$/;"	v	class:ConqueSoleSharedMemory
encoding	jedi/jedi/_compatibility.py	/^        encoding = 'utf-8'$/;"	v
encoding	jedi/jedi/_compatibility.py	/^    encoding = 'ascii'$/;"	v
encoding	jedi/jedi/_compatibility.py	/^    encoding = sys.stdout.encoding$/;"	v
encoding	jedi/jedi/debug.py	/^from jedi._compatibility import encoding, is_py3, u$/;"	i
encoding	jedi/jedi/parser/tree.py	/^from jedi._compatibility import (Python3Method, encoding, is_py3, utf8_repr,$/;"	i
end_pos	jedi/jedi/parser/fast.py	/^    def end_pos(self):$/;"	m	class:ParserNode
end_pos	jedi/jedi/parser/tree.py	/^    def end_pos(self):$/;"	m	class:BaseNode
end_pos	jedi/jedi/parser/tree.py	/^    def end_pos(self):$/;"	m	class:Leaf
end_pos	jedi/jedi/parser/tree.py	/^    def end_pos(self):$/;"	m	class:LeafWithNewLines
endprogs	jedi/jedi/parser/tokenize.py	/^endprogs = {"'": _compile(single), '"': _compile(double),$/;"	v
env	jedi/test/completion/import_tree/flow_import.py	/^    env = 1$/;"	v
env	jedi/test/completion/import_tree/flow_import.py	/^    env = 2$/;"	v
epydoc	jedi/test/completion/docstring.py	/^def epydoc(a, b):$/;"	f
er	jedi/jedi/api/__init__.py	/^from jedi.evaluate import representation as er$/;"	i
er	jedi/jedi/api/classes.py	/^from jedi.evaluate import representation as er$/;"	i
er	jedi/jedi/evaluate/__init__.py	/^from jedi.evaluate import representation as er$/;"	i
er	jedi/jedi/evaluate/dynamic.py	/^    from jedi.evaluate import representation as er$/;"	i
er	jedi/jedi/evaluate/finder.py	/^from jedi.evaluate import representation as er$/;"	i
er	jedi/jedi/evaluate/iterable.py	/^    from jedi.evaluate import representation as er, param$/;"	i
er	jedi/jedi/evaluate/precedence.py	/^    from jedi.evaluate import iterable, representation as er$/;"	i
er	jedi/jedi/evaluate/stdlib.py	/^from jedi.evaluate import representation as er$/;"	i
error_leaf	jedi/jedi/api/helpers.py	/^    def error_leaf(self):$/;"	m	class:OnErrorLeaf
error_recovery	jedi/jedi/parser/__init__.py	/^    def error_recovery(self, grammar, stack, arcs, typ, value, start_pos, prefix,$/;"	m	class:Parser
error_recovery	jedi/jedi/parser/__init__.py	/^    def error_recovery(self, grammar, stack, arcs, typ, value, start_pos, prefix,$/;"	m	class:ParserWithRecovery
error_statements	jedi/jedi/parser/fast.py	/^    def error_statements(self):$/;"	m	class:FastModule
error_statements	jedi/jedi/parser/fast.py	/^    def error_statements(self, value):$/;"	m	class:FastModule
esc_next_line	Conque-GDB/autoload/conque_term/conque.py	/^    def esc_next_line(self):$/;"	m	class:Conque
esc_scroll_down	Conque-GDB/autoload/conque_term/conque.py	/^    def esc_scroll_down(self):$/;"	m	class:Conque
esc_scroll_up	Conque-GDB/autoload/conque_term/conque.py	/^    def esc_scroll_up(self):$/;"	m	class:Conque
esc_set_tab	Conque-GDB/autoload/conque_term/conque.py	/^    def esc_set_tab(self):$/;"	m	class:Conque
escape_to_py_file	Conque-GDB/autoload/conque_gdb.vim	/^function! s:escape_to_py_file(fname)$/;"	f
escape_to_shell_file	Conque-GDB/autoload/conque_gdb.vim	/^function! s:escape_to_shell_file(fname)$/;"	f
esctagscmd	ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:esctagscmd(bin, args, ...)$/;"	f
eval	jedi/jedi/evaluate/param.py	/^    def eval(self, evaluator):$/;"	m	class:ExecutedParam
eval	jedi/jedi/parser/tree.py	/^    def eval(self):$/;"	m	class:Literal
eval_all	jedi/jedi/evaluate/param.py	/^    def eval_all(self, func=None):$/;"	m	class:Arguments
eval_args	jedi/jedi/evaluate/param.py	/^    def eval_args(self):$/;"	m	class:Arguments
eval_argument_clinic	jedi/jedi/evaluate/param.py	/^    def eval_argument_clinic(self, arguments):$/;"	m	class:Arguments
eval_docstring	jedi/jedi/evaluate/docstrings.py	/^    def eval_docstring(docstring):$/;"	f	function:follow_param
eval_element	jedi/jedi/evaluate/__init__.py	/^    def eval_element(self, element):$/;"	m	class:Evaluator
eval_statement	jedi/jedi/evaluate/__init__.py	/^    def eval_statement(self, stmt, seek_name=None):$/;"	m	class:Evaluator
eval_trailer	jedi/jedi/evaluate/__init__.py	/^    def eval_trailer(self, types, trailer):$/;"	m	class:Evaluator
evaluate	jedi/test/completion/sys_path.py	/^import evaluate$/;"	i
evaluate	jedi/test/completion/thirdparty/jedi_.py	/^from jedi import functions, evaluate, parsing$/;"	i
evaluate_goto_definition	jedi/jedi/api/helpers.py	/^def evaluate_goto_definition(evaluator, leaf):$/;"	f
exact_type	jedi/jedi/parser/tokenize.py	/^    def exact_type(self):$/;"	m	class:TokenInfo
example	jedi/test/completion/stdlib.py	/^def example(a):$/;"	f
except_clauses	jedi/jedi/parser/tree.py	/^    def except_clauses(self):$/;"	m	class:TryStmt
excl	ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:excl(fn)$/;"	f
exclude_patterns	jedi/docs/conf.py	/^exclude_patterns = []$/;"	v
exe	jedi/test/completion/decorators.py	/^exe = decorated(set, '')$/;"	v
exe	jedi/test/completion/decorators.py	/^exe = fu(list, c=set, b=3, d='')$/;"	v
exe	jedi/test/completion/decorators.py	/^exe = fu(list, set, 3, '', d='')$/;"	v
exe	jedi/test/completion/decorators.py	/^exe = fu2(list, c=set, b=3, d='str')$/;"	v
exe	jedi/test/completion/functions.py	/^exe = args_func(1, "")$/;"	v
exe	jedi/test/completion/functions.py	/^exe = args_func(1, "", list)$/;"	v
exe	jedi/test/completion/functions.py	/^exe = fu(list, 1, "", c=set, d="")$/;"	v
exe	jedi/test/completion/functions.py	/^exe = func(b=list, a=tuple)$/;"	v
exe	jedi/test/completion/functions.py	/^exe = kwargs_func(a=3,b=4.0)$/;"	v
exe2	jedi/test/completion/functions.py	/^exe2 = args_func(_list)[0]$/;"	v
exe2	jedi/test/completion/functions.py	/^exe2 = kwargs_func(**{a:3,$/;"	v
exe3	jedi/test/completion/functions.py	/^exe3 = args_func([1,""])[0]$/;"	v
exec_function	jedi/jedi/_compatibility.py	/^    def exec_function(source, global_map):$/;"	f
exec_function	jedi/jedi/evaluate/sys_path.py	/^from jedi._compatibility import exec_function, unicode$/;"	i
exec_highlight	Conque-GDB/autoload/conque_term/conque.py	/^    def exec_highlight(self, buffer_line, start, end, highlight):$/;"	m	class:Conque
exec_separator	vim-airline/autoload/airline/highlighter.vim	/^function! s:exec_separator(dict, from, to, inverse, suffix)$/;"	f
execextvar	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:execextvar(key)$/;"	f
exectags	ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:exectags(cmd)$/;"	f
exectagsonfile	ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:exectagsonfile(fname, ftype)$/;"	f
execute	jedi/jedi/evaluate/__init__.py	/^    def execute(self, obj, arguments=(), trailer=None):$/;"	m	class:Evaluator
execute	jedi/jedi/evaluate/dynamic.py	/^    def execute(self, params):$/;"	m	class:ParamListener
execute	jedi/jedi/evaluate/stdlib.py	/^def execute(evaluator, obj, arguments):$/;"	f
execute_evaluated	jedi/jedi/evaluate/__init__.py	/^    def execute_evaluated(self, obj, *args):$/;"	m	class:Evaluator
execute_subscope_by_name	jedi/jedi/evaluate/representation.py	/^    def execute_subscope_by_name(self, name, *args):$/;"	m	class:Instance
execution_recursion_decorator	jedi/jedi/evaluate/recursion.py	/^def execution_recursion_decorator(func):$/;"	f
exit_code	jedi/test/run.py	/^    exit_code = 1 if tests_fail else 0$/;"	v
exit_handler	Conque-GDB/autoload/conque_gdb/conque_gdb_gdb.py	/^def exit_handler(event):$/;"	f
expect	jedi/jedi/parser/pgen2/pgen.py	/^    def expect(self, type, value=None):$/;"	m	class:ParserGenerator
expected	jedi/test/test_parser/test_parser_tree.py	/^    def expected(self, request, node):$/;"	m	class:TestsFunctionAndLambdaParsing
exponent	jedi/jedi/parser/tokenize.py	/^exponent = r'[eE][-+]?[0-9]+'$/;"	v
ext	jedi/test/test_evaluate/test_imports.py	/^    pytest.mark.xfail(("import flask.ext.bar; flask.ext.bar.", "Foo")),$/;"	i
ext	jedi/test/test_evaluate/test_imports.py	/^    pytest.mark.xfail(("import flask.ext.baz; flask.ext.baz.", "Foo")),$/;"	i
ext	jedi/test/test_evaluate/test_imports.py	/^    pytest.mark.xfail(("import flask.ext.foo; flask.ext.foo.", "Foo")),$/;"	i
ext	jedi/test/test_evaluate/test_imports.py	/^    pytest.mark.xfail(("import flask.ext.moo; flask.ext.moo.", "Foo")),$/;"	i
ext.add_inactive_statusline_func	vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_inactive_statusline_func(name) dict$/;"	f
ext.add_statusline_func	vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_statusline_func(name) dict$/;"	f
ext.add_statusline_funcref	vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_statusline_funcref(function) dict$/;"	f
ext.add_theme_func	vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_theme_func(name) dict$/;"	f
ext_modules	jedi/test/test_evaluate/init_extension_module/setup.py	/^      ext_modules=[$/;"	v
extend_path	jedi/test/test_evaluate/sample_venvs/venv27/lib/python2.7/site-packages/smth.py	/^def extend_path():$/;"	f
extend_path	jedi/test/test_evaluate/sample_venvs/venv34/lib/python3.4/site-packages/smth.py	/^def extend_path():$/;"	f
extensions	jedi/docs/conf.py	/^extensions = ['sphinx.ext.autodoc', 'sphinx.ext.viewcode', 'sphinx.ext.todo',$/;"	v
extract	jedi/jedi/refactoring.py	/^def extract(script, new_name):$/;"	f
f	jedi/jedi/evaluate/stdlib.py	/^    def f(func):$/;"	f	function:argument_clinic
f	jedi/test/completion/arrays.py	/^def f():$/;"	f
f	jedi/test/completion/context.py	/^    def f$/;"	m	class:Y
f	jedi/test/completion/decorators.py	/^def f():$/;"	f
f	jedi/test/completion/descriptors.py	/^    def f(x):$/;"	m	class:E
f	jedi/test/completion/descriptors.py	/^    f = staticmethod(f)$/;"	v	class:E
f	jedi/test/completion/goto.py	/^def f(t=None):$/;"	f
f	jedi/test/completion/imports.py	/^from ..helpers import sample_int as f$/;"	i
f	jedi/test/completion/invalid.py	/^def f(seq1...=None):$/;"	f
f	jedi/test/completion/ordering.py	/^def f(b, a): return a$/;"	f
f	jedi/test/completion/usages.py	/^def f(**kwargs):$/;"	f
f	jedi/test/static_analysis/attribute_error.py	/^    def f(self):$/;"	m	class:Cls
factor_calculate	jedi/jedi/evaluate/precedence.py	/^def factor_calculate(evaluator, types, operator):$/;"	f
factory	jedi/jedi/evaluate/jedi_typing.py	/^def factory(typing_name, indextypes):$/;"	f
fake	jedi/jedi/evaluate/compiled/__init__.py	/^from . import fake$/;"	i
fake	jedi/test/completion/import_tree/mod2.py	/^from . import mod1 as fake$/;"	i
fast	jedi/jedi/evaluate/imports.py	/^from jedi.parser import fast$/;"	i
fast_mode	Conque-GDB/autoload/conque_term/conque_sole_communicator.py	/^        fast_mode = int(sys.argv[5])$/;"	v
fast_mode	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    fast_mode = 0$/;"	v	class:ConqueSoleSubprocess
fast_parser	jedi/jedi/settings.py	/^fast_parser = True$/;"	v
fcntl	Conque-GDB/autoload/conque_term/conque_subprocess.py	/^import fcntl$/;"	i
fd	Conque-GDB/autoload/conque_term/conque_subprocess.py	/^    fd = None$/;"	v	class:ConqueSubprocess
fetch	jedi/sith.py	/^    def fetch(file_path):$/;"	m	class:SourceFinder
fig	jedi/test/completion/thirdparty/pylab_.py	/^fig = pylab.figure()$/;"	v
file_change	jedi/test/run.py	/^    def file_change(current, tests, fails):$/;"	f
file_from_python	Conque-GDB/autoload/conque_gdb.vim	/^function! s:file_from_python(fname)$/;"	f
files	jedi/sith.py	/^    def files(cls, file_path):$/;"	m	class:SourceFinder
filter	ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! s:filter(tags)$/;"	f
filter_after_position	jedi/jedi/evaluate/finder.py	/^def filter_after_position(names, position):$/;"	f
filter_definition_names	jedi/jedi/api/classes.py	/^from jedi.evaluate.finder import filter_definition_names$/;"	i
filter_definition_names	jedi/jedi/api/completion.py	/^from jedi.evaluate.finder import global_names_dict_generator, filter_definition_names$/;"	i
filter_definition_names	jedi/jedi/evaluate/finder.py	/^def filter_definition_names(names, origin, position=None):$/;"	f
filter_follow_imports	jedi/jedi/api/__init__.py	/^        def filter_follow_imports(names):$/;"	f	function:Script.goto_assignments
filter_name	jedi/jedi/evaluate/finder.py	/^    def filter_name(self, names_dicts):$/;"	m	class:NameFinder
filter_names	jedi/jedi/api/completion.py	/^def filter_names(evaluator, completion_names, stack, like_name):$/;"	f
filter_private_variable	jedi/jedi/evaluate/finder.py	/^def filter_private_variable(scope, origin_node):$/;"	f
finalize_breakpoint	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    def finalize_breakpoint(self):$/;"	m	class:ConqueGdb
finalize_breakpoint	Conque-GDB/autoload/conque_gdb/conque_sole_gdb.py	/^    def finalize_breakpoint(self):$/;"	m	class:ConqueSoleGdb
finalize_inferior_exit	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    def finalize_inferior_exit(self):$/;"	m	class:ConqueGdb
finalize_prompt	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    def finalize_prompt(self):$/;"	m	class:ConqueGdb
find	jedi/jedi/evaluate/finder.py	/^    def find(self, scopes, attribute_lookup):$/;"	m	class:NameFinder
findAndRevealPath	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:findAndRevealPath()$/;"	f
find_class	jedi/test/completion/classes.py	/^    def find_class(self):$/;"	m	class:FindClass
find_class	jedi/test/completion/classes.py	/^def find_class():$/;"	f
find_module	jedi/jedi/_compatibility.py	/^find_module = find_module_py33 if is_py33 else find_module_pre_py33$/;"	v
find_module	jedi/jedi/evaluate/imports.py	/^from jedi._compatibility import find_module, unicode$/;"	i
find_module	jedi/test/test_evaluate/test_imports.py	/^from jedi._compatibility import find_module_py33, find_module$/;"	i
find_module_pre_py33	jedi/jedi/_compatibility.py	/^def find_module_pre_py33(string, path=None):$/;"	f
find_module_py33	jedi/jedi/_compatibility.py	/^def find_module_py33(string, path=None):$/;"	f
find_module_py33	jedi/test/test_evaluate/test_imports.py	/^from jedi._compatibility import find_module_py33, find_module$/;"	i
find_return_types	jedi/jedi/evaluate/docstrings.py	/^def find_return_types(evaluator, func):$/;"	f
find_return_types	jedi/jedi/evaluate/pep0484.py	/^def find_return_types(evaluator, func):$/;"	f
find_syntax_node_name	jedi/jedi/evaluate/compiled/mixed.py	/^def find_syntax_node_name(evaluator, python_object):$/;"	f
find_type_from_comment_hint_assign	jedi/jedi/evaluate/pep0484.py	/^def find_type_from_comment_hint_assign(evaluator, node, name):$/;"	f
find_type_from_comment_hint_for	jedi/jedi/evaluate/pep0484.py	/^def find_type_from_comment_hint_for(evaluator, node, name):$/;"	f
find_type_from_comment_hint_with	jedi/jedi/evaluate/pep0484.py	/^def find_type_from_comment_hint_with(evaluator, node, name):$/;"	f
find_types	jedi/jedi/evaluate/__init__.py	/^    def find_types(self, scope, name_str, position=None, search_global=False,$/;"	m	class:Evaluator
findcommon	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:findcommon(items, seed)$/;"	f
findcount	ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! s:findcount(str)$/;"	f
finder	jedi/jedi/evaluate/__init__.py	/^from jedi.evaluate import finder$/;"	i
finder	jedi/jedi/evaluate/imports.py	/^        from jedi.evaluate import finder$/;"	i
findroot	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:findroot(curr, mark, depth, type)$/;"	f
first	jedi/test/completion/dynamic_arrays.py	/^def first(a):$/;"	f
first_leaf	jedi/jedi/parser/tree.py	/^    def first_leaf(self):$/;"	m	class:BaseNode
first_leaf	jedi/jedi/parser/tree.py	/^    def first_leaf(self):$/;"	m	class:Leaf
first_operation	jedi/jedi/parser/tree.py	/^    def first_operation(self):$/;"	m	class:ExprStmt
fixed_length	Conque-GDB/autoload/conque_term/conque_sole_shared_memory.py	/^    fixed_length = False$/;"	v	class:ConqueSoleSharedMemory
flask	jedi/test/test_evaluate/test_imports.py	/^    pytest.mark.xfail(("import flask.ext.bar; flask.ext.bar.", "Foo")),$/;"	i
flask	jedi/test/test_evaluate/test_imports.py	/^    pytest.mark.xfail(("import flask.ext.baz; flask.ext.baz.", "Foo")),$/;"	i
flask	jedi/test/test_evaluate/test_imports.py	/^    pytest.mark.xfail(("import flask.ext.foo; flask.ext.foo.", "Foo")),$/;"	i
flask	jedi/test/test_evaluate/test_imports.py	/^    pytest.mark.xfail(("import flask.ext.moo; flask.ext.moo.", "Foo")),$/;"	i
flatten	ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:flatten(tree, cur)$/;"	f
float_number	jedi/jedi/parser/tokenize.py	/^float_number = group(point_float, Expfloat)$/;"	v
flow_analysis	jedi/jedi/evaluate/finder.py	/^from jedi.evaluate import flow_analysis$/;"	i
flow_analysis	jedi/jedi/evaluate/representation.py	/^from jedi.evaluate import flow_analysis$/;"	i
flows	jedi/jedi/parser/tree.py	/^    def flows(self):$/;"	m	class:Scope
fnesc	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:fnesc(...)$/;"	f
fnmatch	jedi/jedi/__main__.py	/^            import fnmatch$/;"	i
focus_return	jedi/test/completion/basic.py	/^def focus_return():$/;"	f
follow	jedi/jedi/evaluate/imports.py	/^    def follow(self):$/;"	m	class:Importer
follow	jedi/jedi/evaluate/imports.py	/^    def follow(self, is_goto=False):$/;"	m	class:ImportWrapper
follow_definition	jedi/jedi/api/classes.py	/^    def follow_definition(self):$/;"	m	class:Completion
follow_param	jedi/jedi/evaluate/docstrings.py	/^def follow_param(evaluator, param):$/;"	f
follow_param	jedi/jedi/evaluate/pep0484.py	/^def follow_param(evaluator, param):$/;"	f
follow_statement	jedi/test/completion/decorators.py	/^def follow_statement(stmt):$/;"	f
foo	jedi/jedi/parser/tree.py	/^        parameters = self.children[2]  # After `def foo`$/;"	f	function:Function.__init__
foo	jedi/test/completion/basic.py	/^1$/;"	v
foo	jedi/test/completion/comprehensions.py	/^    def foo(self):$/;"	m	class:X
foo	jedi/test/completion/comprehensions.py	/^foo = [x for x in [1, '']][:1]$/;"	v
foo	jedi/test/completion/flow_analysis.py	/^def foo(x):$/;"	f
foo	jedi/test/completion/goto.py	/^foo = 10;print(foo)$/;"	v
foo	jedi/test/completion/import_tree/invisible_pkg.py	/^foo = 1.0$/;"	v
foo	jedi/test/completion/imports.py	/^    import not_existant, import_tree.mod1 as foo$/;"	i
foo	jedi/test/completion/invalid.py	/^    def foo(self):$/;"	m	class:BrokenPartsOfClass
foo	jedi/test/completion/usages.py	/^    def foo(self):$/;"	m	class:DynamicParam
foo	jedi/test/static_analysis/class_simple.py	/^        def foo():$/;"	m	class:Base.Nested
foo	jedi/test/test_api/test_interpreter.py	/^        def foo(bar):$/;"	f	function:TestInterpreterAPI.test_param_completion
foo	jedi/test/test_evaluate/namespace_package/ns1/pkg/__init__.py	/^foo = 'ns1!'$/;"	v
foo	jedi/test/test_evaluate/namespace_package/ns1/pkg/ns1_file.py	/^foo = 'ns1_file!'$/;"	v
foo	jedi/test/test_evaluate/namespace_package/ns1/pkg/ns1_folder/__init__.py	/^foo = 'ns1_folder!'$/;"	v
foo	jedi/test/test_evaluate/namespace_package/ns2/pkg/ns2_file.py	/^foo = 'ns2_file!'$/;"	v
foo	jedi/test/test_evaluate/namespace_package/ns2/pkg/ns2_folder/__init__.py	/^foo = 'ns2_folder!'$/;"	v
foo	jedi/test/test_evaluate/namespace_package/ns2/pkg/ns2_folder/nested/__init__.py	/^foo = 'nested!'$/;"	v
foo	jedi/test/test_evaluate/test_imports.py	/^    pytest.mark.xfail(("import flask.ext.foo; flask.ext.foo.", "Foo")),$/;"	i
foobar	jedi/test/completion/flow_analysis.py	/^foobar = ''$/;"	v
foobarbaz	jedi/test/completion/import_tree/mod1.py	/^foobarbaz = 3.0$/;"	v
fooooo	jedi/test/completion/isinstance.py	/^def fooooo(obj):$/;"	f
fooooo2	jedi/test/completion/isinstance.py	/^def fooooo2(obj):$/;"	f
format	ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:format(...)$/;"	f
format_name	vim-airline/autoload/airline/extensions/branch.vim	/^  function! s:format_name(name)$/;"	f
formatline	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:formatline(str)$/;"	f
formatul	ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:formatul(...)$/;"	f
from	jedi/jedi/evaluate/sys_path.py	/^    c = "import os; from os.path import *; result=%s"$/;"	i
from	jedi/test/test_integration_import.py	/^    check('\\nfrom os import whatever', ['import'], len('from os im'))$/;"	i
from_atom	jedi/jedi/evaluate/iterable.py	/^    def from_atom(evaluator, atom):$/;"	m	class:Comprehension
from_cache	jedi/sith.py	/^    def from_cache(cls, record):$/;"	m	class:TestCase
from_comprehension	jedi/test/completion/dynamic_params.py	/^def from_comprehension(foo):$/;"	f
from_names	jedi/test/completion/on_import.py	/^def from_names():$/;"	f
from_names_goto	jedi/test/completion/on_import.py	/^def from_names_goto():$/;"	f
fu	jedi/test/completion/decorators.py	/^def fu(a, b, c, *args, **kwargs):$/;"	f
fu	jedi/test/completion/functions.py	/^def fu(a=1, b="", *args, **kwargs):$/;"	f
fu2	jedi/test/completion/decorators.py	/^def fu2(a, b, c, *args, **kwargs):$/;"	f
full	jedi/jedi/api/classes.py	/^    def full(self):$/;"	m	class:_Help
full_name	jedi/jedi/api/classes.py	/^    def full_name(self):$/;"	m	class:BaseDefinition
func	jedi/jedi/evaluate/cache.py	/^    def func(function):$/;"	f	function:memoize_default
func	jedi/test/completion/basic.py	/^def func():$/;"	f
func	jedi/test/completion/context.py	/^    def func(self, foo):$/;"	m	class:X
func	jedi/test/completion/dynamic_params.py	/^def func(a):$/;"	f
func	jedi/test/completion/dynamic_params.py	/^def func(a, b):$/;"	f
func	jedi/test/completion/dynamic_params.py	/^def func(a, default_arg=2):$/;"	f
func	jedi/test/completion/dynamic_params.py	/^def func(c):$/;"	f
func	jedi/test/completion/dynamic_params.py	/^def func(c=1):$/;"	f
func	jedi/test/completion/dynamic_params.py	/^import sys as func$/;"	i
func	jedi/test/completion/functions.py	/^def func(a=1, b=''):$/;"	f
func	jedi/test/completion/functions.py	/^func = array$/;"	v
func	jedi/test/completion/goto.py	/^def func():$/;"	f
func	jedi/test/completion/ordering.py	/^def func(a_param):$/;"	f
func	jedi/test/static_analysis/attribute_error.py	/^def func():$/;"	f
func	jedi/test/test_api/test_interpreter.py	/^    def func():$/;"	f	function:test_builtin_details
func_b	jedi/test/completion/functions.py	/^    def func_b():$/;"	f	function:a
func_default	jedi/test/completion/functions.py	/^def func_default(a, b=1):$/;"	f
func_with_import	jedi/test/completion/imports.py	/^def func_with_import():$/;"	f
func_with_self	jedi/test/completion/decorators.py	/^    def func_with_self(self, arg):$/;"	m	class:MethodDecoratorAsClass
func_without_call	jedi/test/completion/functions.py	/^def func_without_call(*args, **kwargs):$/;"	f
func_without_self	jedi/test/completion/decorators.py	/^    def func_without_self(arg, arg2):$/;"	m	class:MethodDecoratorAsClass
funct1	jedi/test/completion/basic.py	/^def funct1():$/;"	f
funct2	jedi/test/completion/basic.py	/^def funct2():$/;"	f
function	jedi/test/completion/stdlib.py	/^def function(a, b):$/;"	f
function	jedi/test/test_api/test_classes.py	/^    assert get_types('import json.tool; json.tool.main') == set(['function'])$/;"	i
function_args	jedi/test/completion/functions.py	/^def function_args(a, b, c):$/;"	f
function_def	jedi/test/completion/functions.py	/^def function_def(a, b, c):$/;"	f
function_forward_reference_dynamic	jedi/test/completion/pep0484.py	/^def function_forward_reference_dynamic($/;"	f
function_parameters	jedi/test/completion/pep0484.py	/^def function_parameters(a: A, b, c: str, d: int, e: str, f: str, g: int=4):$/;"	f
function_with_assined_class_in_reference	jedi/test/completion/pep0484.py	/^def function_with_assined_class_in_reference(x: X, y: "Y"):$/;"	f
function_with_non_pep_0484_annotation	jedi/test/completion/pep0484.py	/^def function_with_non_pep_0484_annotation($/;"	f
functions	jedi/test/completion/thirdparty/jedi_.py	/^from jedi import functions, evaluate, parsing$/;"	i
functools	jedi/jedi/common.py	/^import functools$/;"	i
functools	jedi/test/completion/stdlib.py	/^import functools$/;"	i
functools	jedi/test/helpers.py	/^import functools$/;"	i
functools	jedi/test/test_speed.py	/^import functools$/;"	i
funny	jedi/jedi/parser/tokenize.py	/^funny = group(operator, bracket, special)$/;"	v
fuu	jedi/test/completion/precedence.py	/^    fuu = 0.1$/;"	v	class:FooBar
g	jedi/test/completion/decorators.py	/^def g():$/;"	f
g	jedi/test/completion/descriptors.py	/^    def g(x):$/;"	m	class:E
g	jedi/test/completion/generators.py	/^g = iter(Get())$/;"	v
g	jedi/test/completion/generators.py	/^g = iter([1.0])$/;"	v
g:ConqueGdb_Backtrace	Conque-GDB/plugin/conque_gdb.vim	/^    let g:ConqueGdb_Backtrace = g:ConqueGdb_Leader . 't'$/;"	v
g:ConqueGdb_Continue	Conque-GDB/plugin/conque_gdb.vim	/^    let g:ConqueGdb_Continue = g:ConqueGdb_Leader . 'c'$/;"	v
g:ConqueGdb_DeleteBreak	Conque-GDB/plugin/conque_gdb.vim	/^        let g:ConqueGdb_DeleteBreak = g:ConqueGdb_Leader . 'd'$/;"	v
g:ConqueGdb_Disable	Conque-GDB/plugin/conque_gdb.vim	/^    let g:ConqueGdb_Disable = 0$/;"	v
g:ConqueGdb_Finish	Conque-GDB/plugin/conque_gdb.vim	/^    let g:ConqueGdb_Finish = g:ConqueGdb_Leader . 'f'$/;"	v
g:ConqueGdb_GdbExe	Conque-GDB/plugin/conque_gdb.vim	/^    let g:ConqueGdb_GdbExe = ''$/;"	v
g:ConqueGdb_Leader	Conque-GDB/plugin/conque_gdb.vim	/^    let g:ConqueGdb_Leader = '<Leader>'$/;"	v
g:ConqueGdb_Next	Conque-GDB/plugin/conque_gdb.vim	/^    let g:ConqueGdb_Next = g:ConqueGdb_Leader . 'n'$/;"	v
g:ConqueGdb_Print	Conque-GDB/plugin/conque_gdb.vim	/^    let g:ConqueGdb_Print = g:ConqueGdb_Leader . 'p'$/;"	v
g:ConqueGdb_ReadTimeout	Conque-GDB/plugin/conque_gdb.vim	/^    let g:ConqueGdb_ReadTimeout = 50$/;"	v
g:ConqueGdb_Run	Conque-GDB/plugin/conque_gdb.vim	/^    let g:ConqueGdb_Run = g:ConqueGdb_Leader . 'r'$/;"	v
g:ConqueGdb_SaveHistory	Conque-GDB/plugin/conque_gdb.vim	/^    let g:ConqueGdb_SaveHistory = 0$/;"	v
g:ConqueGdb_SetBreak	Conque-GDB/plugin/conque_gdb.vim	/^        let g:ConqueGdb_SetBreak = g:ConqueGdb_Leader . 'b'$/;"	v
g:ConqueGdb_SrcSplit	Conque-GDB/plugin/conque_gdb.vim	/^    let g:ConqueGdb_SrcSplit = 'above'$/;"	v
g:ConqueGdb_Step	Conque-GDB/plugin/conque_gdb.vim	/^    let g:ConqueGdb_Step = g:ConqueGdb_Leader . 's'$/;"	v
g:ConqueGdb_ToggleBreak	Conque-GDB/plugin/conque_gdb.vim	/^        let g:ConqueGdb_ToggleBreak = g:ConqueGdb_Leader . 'b'$/;"	v
g:ConqueTerm_CWInsert	Conque-GDB/plugin/conque_term.vim	/^    let g:ConqueTerm_CWInsert = 0$/;"	v
g:ConqueTerm_CloseOnEnd	Conque-GDB/plugin/conque_term.vim	/^    let g:ConqueTerm_CloseOnEnd = 0$/;"	v
g:ConqueTerm_CodePage	Conque-GDB/plugin/conque_term.vim	/^    let g:ConqueTerm_CodePage = 0$/;"	v
g:ConqueTerm_Color	Conque-GDB/plugin/conque_term.vim	/^    let g:ConqueTerm_Color = 1$/;"	v
g:ConqueTerm_ColorMode	Conque-GDB/plugin/conque_term.vim	/^    let g:ConqueTerm_ColorMode = ''$/;"	v
g:ConqueTerm_EscKey	Conque-GDB/plugin/conque_term.vim	/^    let g:ConqueTerm_EscKey = '<Esc>'$/;"	v
g:ConqueTerm_ExecFileKey	Conque-GDB/plugin/conque_term.vim	/^    let g:ConqueTerm_ExecFileKey = '<F11>'$/;"	v
g:ConqueTerm_FastMode	Conque-GDB/plugin/conque_term.vim	/^    let g:ConqueTerm_FastMode = 0$/;"	v
g:ConqueTerm_FocusedUpdateTime	Conque-GDB/plugin/conque_term.vim	/^    let g:ConqueTerm_FocusedUpdateTime = 80$/;"	v
g:ConqueTerm_Idx	Conque-GDB/autoload/conque_term.vim	/^let g:ConqueTerm_Idx = 0$/;"	v
g:ConqueTerm_Idx	Conque-GDB/plugin/conque_term.vim	/^let g:ConqueTerm_Idx = 0$/;"	v
g:ConqueTerm_InsertCharPre	Conque-GDB/plugin/conque_term.vim	/^    let g:ConqueTerm_InsertCharPre = 0$/;"	v
g:ConqueTerm_InsertOnEnter	Conque-GDB/plugin/conque_term.vim	/^    let g:ConqueTerm_InsertOnEnter = 0$/;"	v
g:ConqueTerm_Interrupt	Conque-GDB/plugin/conque_term.vim	/^    let g:ConqueTerm_Interrupt = '<C-c>'$/;"	v
g:ConqueTerm_Loaded	Conque-GDB/plugin/conque_term.vim	/^let g:ConqueTerm_Loaded = 1$/;"	v
g:ConqueTerm_PromptRegex	Conque-GDB/plugin/conque_term.vim	/^    let g:ConqueTerm_PromptRegex = '^\\w\\+@[0-9A-Za-z_.-]\\+:[0-9A-Za-z_.\/\\~,:-]\\+\\$'$/;"	v
g:ConqueTerm_PyExe	Conque-GDB/plugin/conque_term.vim	/^    let g:ConqueTerm_PyExe = ''$/;"	v
g:ConqueTerm_PyVersion	Conque-GDB/plugin/conque_term.vim	/^    let g:ConqueTerm_PyVersion = 2$/;"	v
g:ConqueTerm_ReadUnfocused	Conque-GDB/plugin/conque_term.vim	/^    let g:ConqueTerm_ReadUnfocused = 0$/;"	v
g:ConqueTerm_SendFileKey	Conque-GDB/plugin/conque_term.vim	/^    let g:ConqueTerm_SendFileKey = '<F10>'$/;"	v
g:ConqueTerm_SendFunctionKeys	Conque-GDB/plugin/conque_term.vim	/^    let g:ConqueTerm_SendFunctionKeys = 0$/;"	v
g:ConqueTerm_SendVisKey	Conque-GDB/plugin/conque_term.vim	/^    let g:ConqueTerm_SendVisKey = '<F9>'$/;"	v
g:ConqueTerm_SessionSupport	Conque-GDB/plugin/conque_term.vim	/^    let g:ConqueTerm_SessionSupport = 0$/;"	v
g:ConqueTerm_ShowBell	Conque-GDB/plugin/conque_term.vim	/^    let g:ConqueTerm_ShowBell = 0$/;"	v
g:ConqueTerm_StartMessages	Conque-GDB/plugin/conque_term.vim	/^    let g:ConqueTerm_StartMessages = 1$/;"	v
g:ConqueTerm_Syntax	Conque-GDB/plugin/conque_term.vim	/^    let g:ConqueTerm_Syntax = 'conque_term'$/;"	v
g:ConqueTerm_TERM	Conque-GDB/plugin/conque_term.vim	/^    let g:ConqueTerm_TERM =  'vt100'$/;"	v
g:ConqueTerm_TermLoaded	Conque-GDB/autoload/conque_term.vim	/^let g:ConqueTerm_TermLoaded = 1$/;"	v
g:ConqueTerm_Terminals	Conque-GDB/autoload/conque_term.vim	/^let g:ConqueTerm_Terminals = {}$/;"	v
g:ConqueTerm_TerminalsString	Conque-GDB/autoload/conque_term.vim	/^let g:ConqueTerm_TerminalsString = ''$/;"	v
g:ConqueTerm_ToggleKey	Conque-GDB/plugin/conque_term.vim	/^    let g:ConqueTerm_ToggleKey = '<F8>'$/;"	v
g:ConqueTerm_UnfocusedUpdateTime	Conque-GDB/plugin/conque_term.vim	/^    let g:ConqueTerm_UnfocusedUpdateTime = 500$/;"	v
g:ConqueTerm_Version	Conque-GDB/plugin/conque_term.vim	/^let g:ConqueTerm_Version = 230$/;"	v
g:NERDTree	nerdtree/lib/nerdtree/nerdtree.vim	/^let g:NERDTree = s:NERDTree$/;"	v
g:NERDTreeAutoDeleteBuffer	nerdtree/nerdtree_plugin/fs_menu.vim	/^    let g:NERDTreeAutoDeleteBuffer = 0$/;"	v
g:NERDTreeBookmark	nerdtree/lib/nerdtree/bookmark.vim	/^let g:NERDTreeBookmark = s:Bookmark$/;"	v
g:NERDTreeCreator	nerdtree/lib/nerdtree/creator.vim	/^let g:NERDTreeCreator = s:Creator$/;"	v
g:NERDTreeDirNode	nerdtree/lib/nerdtree/tree_dir_node.vim	/^let g:NERDTreeDirNode = s:TreeDirNode$/;"	v
g:NERDTreeEvent	nerdtree/lib/nerdtree/event.vim	/^let g:NERDTreeEvent = s:Event$/;"	v
g:NERDTreeFileNode	nerdtree/lib/nerdtree/tree_file_node.vim	/^let g:NERDTreeFileNode = s:TreeFileNode$/;"	v
g:NERDTreeFlagSet	nerdtree/lib/nerdtree/flag_set.vim	/^let g:NERDTreeFlagSet = s:FlagSet$/;"	v
g:NERDTreeIgnore	nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeIgnore = ['\\~$']$/;"	v
g:NERDTreeKeyMap	nerdtree/lib/nerdtree/key_map.vim	/^let g:NERDTreeKeyMap = s:KeyMap$/;"	v
g:NERDTreeMenuController	nerdtree/lib/nerdtree/menu_controller.vim	/^let g:NERDTreeMenuController = s:MenuController$/;"	v
g:NERDTreeMenuItem	nerdtree/lib/nerdtree/menu_item.vim	/^let g:NERDTreeMenuItem = s:MenuItem$/;"	v
g:NERDTreeOpener	nerdtree/lib/nerdtree/opener.vim	/^let g:NERDTreeOpener = s:Opener$/;"	v
g:NERDTreePath	nerdtree/lib/nerdtree/path.vim	/^let g:NERDTreePath = s:Path$/;"	v
g:NERDTreePathNotifier	nerdtree/lib/nerdtree/notifier.vim	/^let g:NERDTreePathNotifier = deepcopy(s:Notifier)$/;"	v
g:NERDTreeSortOrder	nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeSortOrder = ['\\\/$', '*', '\\.swp$',  '\\.bak$', '\\~$']$/;"	v
g:NERDTreeStatusline	nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeStatusline = "%{exists('b:NERDTree')?b:NERDTree.root.path.str():''}"$/;"	v
g:NERDTreeUI	nerdtree/lib/nerdtree/ui.vim	/^let g:NERDTreeUI = s:UI$/;"	v
g:airline#extensions#default#layout	vim-airline/t/extensions_default.vim	/^let g:airline#extensions#default#layout = [$/;"	v
g:airline#extensions#example#number_of_cats	vim-airline/autoload/airline/extensions/example.vim	/^  let g:airline#extensions#example#number_of_cats = 42$/;"	v
g:airline#extensions#obsession#indicator_text	vim-airline/autoload/airline/extensions/obsession.vim	/^  let g:airline#extensions#obsession#indicator_text = '$'$/;"	v
g:airline#extensions#quickfix#location_text	vim-airline/autoload/airline/extensions/quickfix.vim	/^let g:airline#extensions#quickfix#location_text = 'Location'$/;"	v
g:airline#extensions#quickfix#quickfix_text	vim-airline/autoload/airline/extensions/quickfix.vim	/^let g:airline#extensions#quickfix#quickfix_text = 'Quickfix'$/;"	v
g:airline#extensions#windowswap#indicator_text	vim-airline/autoload/airline/extensions/windowswap.vim	/^  let g:airline#extensions#windowswap#indicator_text = 'WS'$/;"	v
g:airline#extensions#wordcount#filetypes	vim-airline/autoload/airline/extensions/wordcount.vim	/^let g:airline#extensions#wordcount#filetypes = get(g:, 'airline#extensions#wordcount#filetypes',$/;"	v
g:airline#themes#dark#palette	vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette = {}$/;"	v
g:airline#themes#dark#palette	vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.accents = {$/;"	v
g:airline#themes#dark#palette	vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#dark#palette	vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#dark#palette	vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.inactive_modified = {$/;"	v
g:airline#themes#dark#palette	vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#dark#palette	vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert_modified = {$/;"	v
g:airline#themes#dark#palette	vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert_paste = {$/;"	v
g:airline#themes#dark#palette	vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#dark#palette	vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.normal_modified = {$/;"	v
g:airline#themes#dark#palette	vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace = copy(g:airline#themes#dark#palette.insert)$/;"	v
g:airline#themes#dark#palette	vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace.airline_a = [ s:I2[0]   , '#af0000' , s:I2[2] , 124     , ''     ]$/;"	v
g:airline#themes#dark#palette	vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace_modified = g:airline#themes#dark#palette.insert_modified$/;"	v
g:airline#themes#dark#palette	vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#dark#palette	vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.visual_modified = {$/;"	v
g:airline_inactive_collapse	vim-airline/t/airline.vim	/^    let g:airline_inactive_collapse = 0$/;"	v
g:airline_inactive_collapse	vim-airline/t/airline.vim	/^    let g:airline_inactive_collapse = 1$/;"	v
g:airline_section_	vim-airline/t/init.vim	/^      let g:airline_section_{s} = s$/;"	v
g:airline_section_a	vim-airline/t/airline.vim	/^    let g:airline_section_a = airline#section#create(['mode', 'mode'])$/;"	v
g:airline_statusline_funcrefs	vim-airline/autoload/airline.vim	/^let g:airline_statusline_funcrefs = get(g:, 'airline_statusline_funcrefs', [])$/;"	v
g:airline_statusline_funcrefs	vim-airline/t/airline.vim	/^    let g:airline_statusline_funcrefs = []$/;"	v
g:airline_theme	vim-airline/t/airline.vim	/^let g:airline_theme = 'dark'$/;"	v
g:airline_theme	vim-airline/t/builder.vim	/^let g:airline_theme = 'dark'$/;"	v
g:airline_theme	vim-airline/t/highlighter.vim	/^let g:airline_theme = 'dark'$/;"	v
g:autoload_conque_gdb_loaded	Conque-GDB/autoload/conque_gdb.vim	/^let g:autoload_conque_gdb_loaded = 1$/;"	v
g:conque_gdb_default_split	Conque-GDB/plugin/conque_gdb.vim	/^let g:conque_gdb_default_split = g:conque_gdb_src_splits['above']$/;"	v
g:conque_gdb_gdb_py_support	Conque-GDB/autoload/conque_gdb.vim	/^let g:conque_gdb_gdb_py_support = 0$/;"	v
g:conque_gdb_src_splits	Conque-GDB/plugin/conque_gdb.vim	/^let g:conque_gdb_src_splits = {'below': 'belowright split', 'above': 'aboveleft split', 'right': 'belowright vsplit', 'left': 'leftabove vsplit'}$/;"	v
g:count	vim-airline/t/util.vim	/^    let g:count = 0$/;"	v
g:loaded_airline	vim-airline/plugin/airline.vim	/^let g:loaded_airline = 1$/;"	v
g:loaded_ctrlp	ctrlp.vim/plugin/ctrlp.vim	/^let g:loaded_ctrlp = 1$/;"	v
g:loaded_ctrlp_bookmarkdir	ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^let g:loaded_ctrlp_bookmarkdir = 1$/;"	v
g:loaded_ctrlp_buftag	ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let g:loaded_ctrlp_buftag = 1$/;"	v
g:loaded_ctrlp_changes	ctrlp.vim/autoload/ctrlp/changes.vim	/^let g:loaded_ctrlp_changes = 1$/;"	v
g:loaded_ctrlp_line	ctrlp.vim/autoload/ctrlp/line.vim	/^let g:loaded_ctrlp_line = 1$/;"	v
g:loaded_ctrlp_quickfix	ctrlp.vim/autoload/ctrlp/quickfix.vim	/^let g:loaded_ctrlp_quickfix = 1$/;"	v
g:loaded_ctrlp_tag	ctrlp.vim/autoload/ctrlp/tag.vim	/^let g:loaded_ctrlp_tag = 1$/;"	v
g:loaded_ctrlp_undo	ctrlp.vim/autoload/ctrlp/undo.vim	/^let g:loaded_ctrlp_undo = 1$/;"	v
g:loaded_nerdtree_autoload	nerdtree/autoload/nerdtree.vim	/^let g:loaded_nerdtree_autoload = 1$/;"	v
g:loaded_nerdtree_exec_menuitem	nerdtree/nerdtree_plugin/exec_menuitem.vim	/^let g:loaded_nerdtree_exec_menuitem = 1$/;"	v
g:loaded_nerdtree_fs_menu	nerdtree/nerdtree_plugin/fs_menu.vim	/^let g:loaded_nerdtree_fs_menu = 1$/;"	v
g:loaded_nerdtree_ui_glue_autoload	nerdtree/autoload/nerdtree/ui_glue.vim	/^let g:loaded_nerdtree_ui_glue_autoload = 1$/;"	v
g:plugin_conque_gdb_loaded	Conque-GDB/plugin/conque_gdb.vim	/^let g:plugin_conque_gdb_loaded = 1$/;"	v
g:popupBufferPattern	PopupBuffer.vim/plugin/PopupBuffer.vim	/^  let g:popupBufferPattern="%f (%n)\\t%p"$/;"	v
g:taboo_tabline	vim-airline/autoload/airline/extensions/tabline.vim	/^  let g:taboo_tabline = 0$/;"	v
gc	jedi/jedi/parser/utils.py	/^import gc$/;"	i
gc	jedi/scripts/wx_check.py	/^import gc$/;"	i
gdb	Conque-GDB/autoload/conque_gdb/conque_gdb_gdb.py	/^import gdb, os, signal$/;"	i
gen	jedi/test/completion/comprehensions.py	/^gen = (a for arr in [[1.0]] for a in arr)$/;"	v
gen	jedi/test/completion/comprehensions.py	/^gen = (i for i in (1,))$/;"	v
gen	jedi/test/completion/generators.py	/^def gen():$/;"	f
gen_exe	jedi/test/completion/generators.py	/^gen_exe = gen()$/;"	v
gen_part	jedi/jedi/parser/fast.py	/^        def gen_part():$/;"	f	function:FastParser._split_parts
gen_ret	jedi/test/completion/generators.py	/^def gen_ret(value):$/;"	f
generate	jedi/sith.py	/^    def generate(cls, file_path):$/;"	m	class:TestCase
generate_grammar	jedi/jedi/parser/__init__.py	/^from jedi.parser.pgen2.pgen import generate_grammar$/;"	i
generate_grammar	jedi/jedi/parser/pgen2/pgen.py	/^def generate_grammar(filename="Grammar.txt"):$/;"	f
generate_pyc	jedi/test/test_evaluate/test_pyc.py	/^def generate_pyc():$/;"	f
generate_tokens	jedi/jedi/parser/tokenize.py	/^def generate_tokens(readline, use_exact_op_types=False):$/;"	f
generator	jedi/test/completion/stdlib.py	/^generator = type(x())$/;"	v
generator	jedi/test/static_analysis/generators.py	/^def generator():$/;"	f
get	jedi/jedi/evaluate/iterable.py	/^        def get(element):$/;"	f	function:Slice.obj
get	jedi/test/completion/generators.py	/^def get(param):$/;"	f
get	jedi/test/test_api/test_call_signatures.py	/^    def get(source, column=None):$/;"	f	function:test_keyword_argument_index
get_accented_line	vim-airline/autoload/airline/builder.vim	/^function! s:get_accented_line(self, group, contents)$/;"	f
get_airline_themes	vim-airline/plugin/airline.vim	/^function! s:get_airline_themes(a, l, p)$/;"	f
get_array	vim-airline/autoload/airline/highlighter.vim	/^function! s:get_array(fg, bg, opts)$/;"	f
get_bp_attribute	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    def get_bp_attribute(self, bp, regex):$/;"	m	class:ConqueGdb
get_buffer_info	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    def get_buffer_info(self):$/;"	m	class:ConqueSoleSubprocess
get_buffer_line	Conque-GDB/autoload/conque_term/conque.py	/^    def get_buffer_line(self, line):$/;"	m	class:Conque
get_buffer_line	Conque-GDB/autoload/conque_term/conque_screen.py	/^    def get_buffer_line(self, line):$/;"	m	class:ConqueScreen
get_buffer_line	Conque-GDB/autoload/conque_term/conque_sole.py	/^    def get_buffer_line(self, line):$/;"	m	class:ConqueSole
get_call	jedi/test/test_parser/test_parser.py	/^    def get_call(self, source):$/;"	m	class:TestCallAndName
get_call_signature	jedi/jedi/parser/tree.py	/^    def get_call_signature(self, width=72, func_name=None):$/;"	m	class:Function
get_call_signature_details	jedi/jedi/api/helpers.py	/^def get_call_signature_details(module, position):$/;"	f
get_call_signature_param_names	jedi/jedi/api/completion.py	/^def get_call_signature_param_names(call_signatures):$/;"	f
get_calling_var_args	jedi/jedi/evaluate/param.py	/^    def get_calling_var_args(self):$/;"	m	class:Arguments
get_code	jedi/jedi/api/classes.py	/^    def get_code(self):$/;"	m	class:_Param
get_code	jedi/jedi/evaluate/iterable.py	/^    def get_code(self, normalized=False):$/;"	m	class:AlreadyEvaluated
get_code	jedi/jedi/parser/tree.py	/^    def get_code(self, normalized=False, include_prefix=True):$/;"	m	class:BaseNode
get_code	jedi/jedi/parser/tree.py	/^    def get_code(self, normalized=False, include_prefix=True):$/;"	m	class:Leaf
get_comp_fors	jedi/jedi/parser/tree.py	/^    def get_comp_fors(self):$/;"	m	class:CompFor
get_completion	jedi/test/test_api/test_interpreter.py	/^def get_completion(source, namespace):$/;"	f
get_decimal_group	vim-airline/autoload/airline/extensions/wordcount/formatters/default.vim	/^function! s:get_decimal_group()$/;"	f
get_decorated_func	jedi/jedi/evaluate/representation.py	/^    def get_decorated_func(self):$/;"	m	class:Function
get_decorated_func	jedi/jedi/evaluate/representation.py	/^    def get_decorated_func(self):$/;"	m	class:InstanceElement
get_decorated_func	jedi/jedi/evaluate/representation.py	/^    def get_decorated_func(self):$/;"	m	class:LambdaWrapper
get_decorators	jedi/jedi/parser/tree.py	/^    def get_decorators(self):$/;"	m	class:ClassOrFunc
get_def	jedi/test/test_regression.py	/^        def get_def(pos):$/;"	f	function:TestRegression.test_goto_definition_cursor
get_defined_names	jedi/jedi/evaluate/helpers.py	/^    def get_defined_names(self):$/;"	m	class:FakeImport
get_defined_names	jedi/jedi/parser/tree.py	/^    def get_defined_names(self):$/;"	m	class:CompFor
get_defined_names	jedi/jedi/parser/tree.py	/^    def get_defined_names(self):$/;"	m	class:ExprStmt
get_defined_names	jedi/jedi/parser/tree.py	/^    def get_defined_names(self):$/;"	m	class:GlobalStmt
get_defined_names	jedi/jedi/parser/tree.py	/^    def get_defined_names(self):$/;"	m	class:ImportFrom
get_defined_names	jedi/jedi/parser/tree.py	/^    def get_defined_names(self):$/;"	m	class:ImportName
get_defined_names	jedi/jedi/parser/tree.py	/^    def get_defined_names(self):$/;"	m	class:WithStmt
get_definition	jedi/jedi/evaluate/helpers.py	/^    def get_definition(self):$/;"	m	class:FakeName
get_definition	jedi/jedi/evaluate/representation.py	/^    def get_definition(self):$/;"	m	class:InstanceElement
get_definition	jedi/jedi/parser/tree.py	/^    def get_definition(self):$/;"	m	class:Base
get_definition_and_evaluator	jedi/test/test_evaluate/test_representation.py	/^def get_definition_and_evaluator(source):$/;"	f
get_descriptor_returns	jedi/jedi/evaluate/representation.py	/^    def get_descriptor_returns(self, obj):$/;"	m	class:Instance
get_equal_breakpoints	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    def get_equal_breakpoints(self, bp):$/;"	m	class:RegisteredBpDict
get_execution_parent	jedi/jedi/evaluate/iterable.py	/^    def get_execution_parent(element):$/;"	f	function:_check_array_additions
get_faked	jedi/jedi/evaluate/compiled/fake.py	/^def get_faked(module, obj, name=None, parent=None):$/;"	f
get_file_breakpoints	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    def get_file_breakpoints(self, filename):$/;"	m	class:RegisteredBpDict
get_first	jedi/test/completion/classes.py	/^    def get_first(self):$/;"	m	class:TestClass
get_following_comment_same_line	jedi/jedi/parser/tree.py	/^    def get_following_comment_same_line(self):$/;"	m	class:BaseNode
get_from_names	jedi/jedi/parser/tree.py	/^    def get_from_names(self):$/;"	m	class:ImportFrom
get_gdb_command	Conque-GDB/autoload/conque_gdb.vim	/^function! s:get_gdb_command()$/;"	f
get_global_names	jedi/jedi/parser/tree.py	/^    def get_global_names(self):$/;"	m	class:GlobalStmt
get_hunks	vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks()$/;"	f
get_hunks_changes	vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_changes()$/;"	f
get_hunks_empty	vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_empty()$/;"	f
get_hunks_gitgutter	vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_gitgutter()$/;"	f
get_hunks_signify	vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_signify()$/;"	f
get_import	jedi/test/test_parser/test_parser.py	/^    def get_import(self, source):$/;"	m	class:TestImports
get_imports	jedi/jedi/evaluate/compiled/__init__.py	/^    def get_imports(self):$/;"	m	class:CompiledObject
get_init_path	jedi/jedi/evaluate/imports.py	/^def get_init_path(directory_path):$/;"	f
get_input_node	jedi/jedi/parser/tree.py	/^    def get_input_node(self):$/;"	m	class:ForStmt
get_instance_el	jedi/jedi/evaluate/representation.py	/^def get_instance_el(evaluator, instance, var, is_class_var=False):$/;"	f
get_leaf_for_position	jedi/jedi/parser/tree.py	/^    def get_leaf_for_position(self, position, include_prefixes=False):$/;"	m	class:BaseNode
get_line_code	jedi/jedi/api/classes.py	/^    def get_line_code(self, before=0, after=0):$/;"	m	class:BaseDefinition
get_line_code	jedi/test/test_api/test_api.py	/^    def get_line_code(source, line=None, **kwargs):$/;"	f	function:test_get_line_code
get_lookups	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    def get_lookups(self):$/;"	m	class:RegisteredBpDict
get_module	jedi/jedi/evaluate/compiled/fake.py	/^def get_module(obj):$/;"	f
get_module_names	jedi/jedi/api/__init__.py	/^from jedi.evaluate.helpers import get_module_names$/;"	i
get_module_names	jedi/jedi/evaluate/helpers.py	/^def get_module_names(module, all_scopes):$/;"	f
get_modules_containing_name	jedi/jedi/evaluate/imports.py	/^def get_modules_containing_name(evaluator, mods, name):$/;"	f
get_mq_async	vim-airline/autoload/airline/extensions/branch.vim	/^  function! s:get_mq_async(cmd, file)$/;"	f
get_msgfmt_stat_async	vim-airline/autoload/airline/extensions/po.vim	/^  function! s:get_msgfmt_stat_async(cmd, file)$/;"	f
get_names_of_node	jedi/jedi/evaluate/helpers.py	/^def get_names_of_node(node):$/;"	f
get_new_output	Conque-GDB/autoload/conque_term/conque_sole.py	/^    def get_new_output(self, lines, update_top, stats):$/;"	m	class:ConqueSole
get_next_leaf	jedi/jedi/parser/tree.py	/^    def get_next_leaf(self):$/;"	m	class:Base
get_next_leaf	jedi/jedi/parser/tree.py	/^    def get_next_leaf(self):$/;"	m	class:BaseNode
get_next_sibling	jedi/jedi/parser/tree.py	/^    def get_next_sibling(self):$/;"	m	class:Base
get_node_names	jedi/jedi/api/helpers.py	/^    def get_node_names(self, grammar):$/;"	m	class:Stack
get_nodes	jedi/jedi/api/helpers.py	/^    def get_nodes(self):$/;"	m	class:Stack
get_on_completion_name	jedi/jedi/api/helpers.py	/^def get_on_completion_name(module, lines, position):$/;"	f
get_on_completion_name	jedi/jedi/utils.py	/^from jedi.api.helpers import get_on_completion_name$/;"	i
get_operator	jedi/jedi/api/keywords.py	/^def get_operator(evaluator, string, pos):$/;"	f
get_param	jedi/jedi/evaluate/finder.py	/^        def get_param(scope, el):$/;"	f	function:NameFinder.names_dict_lookup
get_params	jedi/jedi/evaluate/param.py	/^def get_params(evaluator, func, var_args):$/;"	f
get_parent_scope	jedi/jedi/parser/tree.py	/^    def get_parent_scope(self, include_flows=False):$/;"	m	class:Base
get_parent_until	jedi/jedi/api/keywords.py	/^    def get_parent_until(self):$/;"	m	class:Keyword
get_parent_until	jedi/jedi/evaluate/imports.py	/^        self._import = name.get_parent_until(tree.Import)$/;"	i
get_parent_until	jedi/jedi/evaluate/param.py	/^    def get_parent_until(self, *args, **kwargs):$/;"	m	class:Arguments
get_parent_until	jedi/jedi/evaluate/representation.py	/^    def get_parent_until(self, *args, **kwargs):$/;"	m	class:Executed
get_parent_until	jedi/jedi/evaluate/representation.py	/^    def get_parent_until(self, *args, **kwargs):$/;"	m	class:InstanceElement
get_parent_until	jedi/jedi/parser/tree.py	/^    def get_parent_until(self, classes=(), reverse=False,$/;"	m	class:Base
get_parsed_node	jedi/jedi/parser/__init__.py	/^    def get_parsed_node(self):$/;"	m	class:Parser
get_parsed_node	jedi/jedi/parser/fast.py	/^    def get_parsed_node(self):$/;"	m	class:FastParser
get_possible_completion_types	jedi/jedi/api/helpers.py	/^def get_possible_completion_types(grammar, stack):$/;"	f
get_possible_nodes	jedi/jedi/evaluate/dynamic.py	/^    def get_possible_nodes(module, func_name):$/;"	f	function:search_function_call
get_prev_group	vim-airline/autoload/airline/builder.vim	/^function! s:get_prev_group(sections, i)$/;"	f
get_previous_leaf	jedi/jedi/parser/tree.py	/^    def get_previous_leaf(self):$/;"	m	class:Base
get_previous_sibling	jedi/jedi/parser/tree.py	/^    def get_previous_sibling(self):$/;"	m	class:Base
get_real_idx	Conque-GDB/autoload/conque_term/conque_screen.py	/^    def get_real_idx(self, line):$/;"	m	class:ConqueScreen
get_return_types	jedi/jedi/evaluate/representation.py	/^    def get_return_types(self, check_yields=False):$/;"	m	class:FunctionExecution
get_rhs	jedi/jedi/evaluate/representation.py	/^    def get_rhs(self):$/;"	m	class:InstanceElement
get_rhs	jedi/jedi/parser/tree.py	/^    def get_rhs(self):$/;"	m	class:ExprStmt
get_screen_text	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    def get_screen_text(self):$/;"	m	class:ConqueSoleSubprocess
get_section	vim-airline/autoload/airline/extensions/default.vim	/^function! s:get_section(winnr, key, ...)$/;"	f
get_self_attributes	jedi/jedi/evaluate/compiled/__init__.py	/^    def get_self_attributes(self):$/;"	m	class:CompiledObject
get_seperator	vim-airline/autoload/airline/builder.vim	/^function! s:get_seperator(self, prev_group, group, side)$/;"	f
get_special_object	jedi/jedi/evaluate/compiled/__init__.py	/^def get_special_object(evaluator, identifier):$/;"	f
get_stack_at_position	jedi/jedi/api/helpers.py	/^def get_stack_at_position(grammar, code_lines, module, pos):$/;"	f
get_start_pos_of_prefix	jedi/jedi/parser/tree.py	/^    def get_start_pos_of_prefix(self):$/;"	m	class:BaseNode
get_start_pos_of_prefix	jedi/jedi/parser/tree.py	/^    def get_start_pos_of_prefix(self):$/;"	m	class:Leaf
get_statement_for_position	jedi/jedi/parser/tree.py	/^    def get_statement_for_position(self, pos):$/;"	m	class:BaseNode
get_stats	Conque-GDB/autoload/conque_term/conque_sole_wrapper.py	/^    def get_stats(self):$/;"	m	class:ConqueSoleWrapper
get_str_completion	jedi/test/test_regression.py	/^        def get_str_completion(values):$/;"	f	function:TestRegression.test_fake_subnodes
get_sub	jedi/test/test_parser/test_parser.py	/^    def get_sub(self, source):$/;"	m	class:TestSubscopes
get_subscope_by_name	jedi/jedi/evaluate/compiled/__init__.py	/^    def get_subscope_by_name(self, name):$/;"	m	class:CompiledObject
get_subscope_by_name	jedi/jedi/evaluate/representation.py	/^    def get_subscope_by_name(self, name):$/;"	m	class:Class
get_subscope_by_name	jedi/jedi/evaluate/representation.py	/^    def get_subscope_by_name(self, name):$/;"	m	class:Instance
get_super_arglist	jedi/jedi/parser/tree.py	/^    def get_super_arglist(self):$/;"	m	class:Class
get_syn	vim-airline/autoload/airline/highlighter.vim	/^function! s:get_syn(group, what)$/;"	f
get_sys_path_powers	jedi/jedi/evaluate/sys_path.py	/^    def get_sys_path_powers(names):$/;"	f	function:_check_module
get_text	vim-airline/autoload/airline/extensions/quickfix.vim	/^function! s:get_text()$/;"	f
get_top	Conque-GDB/autoload/conque_term/conque_screen.py	/^    def get_top(self):$/;"	m	class:ConqueScreen
get_transitioned_seperator	vim-airline/autoload/airline/builder.vim	/^function! s:get_transitioned_seperator(self, prev_group, group, side)$/;"	f
get_types	jedi/test/test_api/test_classes.py	/^    def get_types(source, **kwargs):$/;"	f	function:test_basedefinition_type_import
get_types_for_typing_module	jedi/jedi/evaluate/pep0484.py	/^def get_types_for_typing_module(evaluator, typ, node):$/;"	f
get_unix_gdb	Conque-GDB/autoload/conque_gdb.vim	/^function! s:get_unix_gdb()$/;"	f
get_user_scope	jedi/jedi/api/completion.py	/^def get_user_scope(module, position):$/;"	f
get_vcs_untracked_async	vim-airline/autoload/airline/extensions/branch.vim	/^  function! s:get_vcs_untracked_async(config, file)$/;"	f
get_venv_path	jedi/jedi/api/__init__.py	/^from jedi.evaluate.sys_path import get_venv_path$/;"	i
get_venv_path	jedi/jedi/evaluate/sys_path.py	/^def get_venv_path(venv):$/;"	f
get_visible_buffers	vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! s:get_visible_buffers()$/;"	f
get_win_gdb	Conque-GDB/autoload/conque_gdb.vim	/^function! s:get_win_gdb()$/;"	f
get_yield_types	jedi/jedi/evaluate/representation.py	/^    def get_yield_types(self):$/;"	m	class:FunctionExecution
getbookmarks	ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:getbookmarks()$/;"	f
getenv	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getenv()$/;"	f
getextvar	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getextvar(key)$/;"	f
gethistdata	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:gethistdata()$/;"	f
gethistloc	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:gethistloc()$/;"	f
getinput	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getinput(...)$/;"	f
getinput	ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:getinput(str, ...)$/;"	f
getnewmix	ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! s:getnewmix(cwd, clim)$/;"	f
getparent	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getparent(item)$/;"	f
getpid	Conque-GDB/autoload/conque_term/conque_subprocess.py	/^    def getpid(self):$/;"	m	class:ConqueSubprocess
getregs	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getregs()$/;"	f
gettoken	jedi/jedi/parser/pgen2/pgen.py	/^    def gettoken(self):$/;"	m	class:ParserGenerator
getundo	ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:getundo()$/;"	f
glbpath	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:glbpath(...)$/;"	f
glob	jedi/jedi/evaluate/sys_path.py	/^import glob$/;"	i
glob	jedi/test/test_evaluate/test_sys_path.py	/^from glob import glob$/;"	i
global_define	jedi/test/completion/basic.py	/^def global_define():$/;"	f
global_names	jedi/jedi/parser/fast.py	/^    def global_names(self):$/;"	m	class:FastModule
global_names	jedi/jedi/parser/fast.py	/^    def global_names(self, value):$/;"	m	class:FastModule
global_names_dict_generator	jedi/jedi/api/completion.py	/^from jedi.evaluate.finder import global_names_dict_generator, filter_definition_names$/;"	i
global_names_dict_generator	jedi/jedi/evaluate/finder.py	/^def global_names_dict_generator(evaluator, scope, position):$/;"	f
globdirs	ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! s:globdirs(dirs, depth)$/;"	f
goto	jedi/jedi/evaluate/__init__.py	/^    def goto(self, name):$/;"	m	class:Evaluator
goto_assignments	jedi/jedi/api/__init__.py	/^    def goto_assignments(self, follow_imports=False):$/;"	m	class:Script
goto_assignments	jedi/jedi/api/classes.py	/^    def goto_assignments(self):$/;"	m	class:BaseDefinition
goto_definitions	jedi/jedi/api/__init__.py	/^    def goto_definitions(self):$/;"	m	class:Script
goto_definitions	jedi/jedi/evaluate/__init__.py	/^    def goto_definitions(self, name):$/;"	m	class:Evaluator
grammar	jedi/jedi/parser/pgen2/pgen.py	/^from . import grammar$/;"	i
group	jedi/jedi/parser/tokenize.py	/^def group(*choices):$/;"	f
gui2cui	vim-airline/autoload/airline/highlighter.vim	/^function! s:gui2cui(rgb, fallback)$/;"	f
handle	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    handle = None$/;"	v	class:ConqueSoleSubprocess
handle	Conque-GDB/autoload/conque_term/conque_sole_wrapper.py	/^    handle = None$/;"	v	class:ConqueSoleWrapper
handleLeftClick	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:handleLeftClick()$/;"	f
handleMiddleMouse	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:handleMiddleMouse()$/;"	f
handle_inferior_exit	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    def handle_inferior_exit(self):$/;"	m	class:ConqueGdb
has_builtin_methods	jedi/jedi/evaluate/iterable.py	/^def has_builtin_methods(cls):$/;"	f
has_explicit_absolute_import	jedi/jedi/parser/tree.py	/^    def has_explicit_absolute_import(self):$/;"	m	class:Module
has_inappropriate_leaf_keyword	jedi/jedi/api/keywords.py	/^def has_inappropriate_leaf_keyword(pos, module):$/;"	f
hash_screen_alignment_test	Conque-GDB/autoload/conque_term/conque.py	/^    def hash_screen_alignment_test(self):$/;"	m	class:Conque
hashlib	jedi/jedi/parser/utils.py	/^import hashlib$/;"	i
hashlib	jedi/test/completion/stdlib.py	/^import hashlib$/;"	i
headntail	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:headntail(str)$/;"	f
helpers	jedi/jedi/api/__init__.py	/^from jedi.api import helpers$/;"	i
helpers	jedi/jedi/api/completion.py	/^from jedi.api import helpers$/;"	i
helpers	jedi/jedi/api/interpreter.py	/^from jedi.evaluate import helpers$/;"	i
helpers	jedi/jedi/evaluate/__init__.py	/^from jedi.evaluate import helpers$/;"	i
helpers	jedi/jedi/evaluate/finder.py	/^from jedi.evaluate import helpers$/;"	i
helpers	jedi/jedi/evaluate/imports.py	/^from jedi.evaluate import helpers$/;"	i
helpers	jedi/jedi/evaluate/iterable.py	/^from jedi.evaluate import helpers$/;"	i
helpers	jedi/jedi/evaluate/representation.py	/^from jedi.evaluate import helpers$/;"	i
helpers	jedi/jedi/refactoring.py	/^from jedi.evaluate import helpers$/;"	i
helpers	jedi/test/completion/imports.py	/^from .. import helpers$/;"	i
helpers	jedi/test/conftest.py	/^from . import helpers$/;"	i
helpers	jedi/test/test_evaluate/test_absolute_import.py	/^from .. import helpers$/;"	i
helpers	jedi/test/test_evaluate/test_helpers.py	/^from jedi.evaluate import helpers$/;"	i
helpers	jedi/test/test_integration.py	/^from . import helpers$/;"	i
hex_number	jedi/jedi/parser/tokenize.py	/^hex_number = r'0[xX][0-9a-fA-F]+'$/;"	v
highlight	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:highlight(pat, grp)$/;"	f
highlight_groups	Conque-GDB/autoload/conque_term/conque.py	/^    highlight_groups = {}$/;"	v	class:Conque
hl	vim-airline/t/highlighter.vim	/^    let hl = airline#highlighter#get_highlight('Foo1_to_Foo2')$/;"	v
hl	vim-airline/t/themes.vim	/^    let hl = airline#themes#get_highlight('Foo', 'bold', 'italic')$/;"	v
hl	vim-airline/t/themes.vim	/^    let hl = airline#themes#get_highlight2(['Foo','bg'], ['Foo','fg'], 'italic', 'bold')$/;"	v
html_sidebars	jedi/docs/conf.py	/^html_sidebars = {$/;"	v
html_static_path	jedi/docs/conf.py	/^html_static_path = ['_static']$/;"	v
html_theme	jedi/docs/conf.py	/^html_theme = 'flask'$/;"	v
html_theme_path	jedi/docs/conf.py	/^html_theme_path = ['_themes']$/;"	v
htmlhelp_basename	jedi/docs/conf.py	/^htmlhelp_basename = 'Jedidoc'$/;"	v
huhu	jedi/test/completion/stdlib.py	/^def huhu(db):$/;"	f
i	jedi/test/completion/keywords.py	/^class i$/;"	c
i	jedi/test/completion/keywords.py	/^def i$/;"	f
i	jedi/test/completion/precedence.py	/^i = 0$/;"	v
i	jedi/test/completion/precedence.py	/^i = 1$/;"	v
idle	Conque-GDB/autoload/conque_term/conque.py	/^    def idle(self):$/;"	m	class:Conque
idle	Conque-GDB/autoload/conque_term/conque_sole.py	/^    def idle(self):$/;"	m	class:ConqueSole
idle	Conque-GDB/autoload/conque_term/conque_sole_wrapper.py	/^    def idle(self):$/;"	m	class:ConqueSoleWrapper
idle_sleep_time	Conque-GDB/autoload/conque_term/conque_sole_communicator.py	/^        idle_sleep_time = 0.10$/;"	v
ifilter	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ifilter(list, str)$/;"	f
ignore	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ignore()$/;"	f
ignored	jedi/jedi/common.py	/^def ignored(*exceptions):$/;"	f
ignored_modules	jedi/jedi/debug.py	/^ignored_modules = ['jedi.parser']$/;"	v
im	jedi/test/test_integration_import.py	/^    check('\\nfrom os import whatever', ['import'], len('from os im'))$/;"	i
imag_number	jedi/jedi/parser/tokenize.py	/^imag_number = group(r'[0-9]+[jJ]', float_number + r'[jJ]')$/;"	v
imitate_pydoc	jedi/jedi/api/keywords.py	/^def imitate_pydoc(string):$/;"	f
imp	jedi/jedi/_compatibility.py	/^import imp$/;"	i
imp	jedi/jedi/evaluate/imports.py	/^import imp$/;"	i
imp	jedi/jedi/evaluate/representation.py	/^import imp$/;"	i
imp_tree	jedi/test/completion/imports.py	/^from . import import_tree as imp_tree$/;"	i
import	jedi/jedi/evaluate/site.py	/^                if line.startswith(("import ", "import\\t")):$/;"	i
import	jedi/jedi/evaluate/sys_path.py	/^    c = "import os; from os.path import *; result=%s"$/;"	i
import	jedi/test/test_integration_import.py	/^        assert len(Script("import import", path='').completions()) > 0$/;"	i
import	jedi/test/test_integration_import.py	/^    check('\\nfrom os import whatever', ['import'], len('from os im'))$/;"	i
import	jedi/test/test_utils.py	/^        assert self.completions('import keyword') == ['import keyword']$/;"	i
import_issues	jedi/test/completion/docstring.py	/^def import_issues(foo):$/;"	f
import_tree	jedi/test/completion/goto.py	/^import import_tree$/;"	i
import_tree	jedi/test/completion/goto.py	/^import import_tree.mod1$/;"	i
import_tree	jedi/test/completion/goto.py	/^import import_tree.pkg$/;"	i
import_tree	jedi/test/completion/goto.py	/^import import_tree.pkg.mod1$/;"	i
import_tree	jedi/test/completion/imports.py	/^    import import_tree$/;"	i
import_tree	jedi/test/completion/imports.py	/^    import import_tree.mod1 as bar$/;"	i
import_tree	jedi/test/completion/imports.py	/^    import import_tree.mod1$/;"	i
import_tree	jedi/test/completion/imports.py	/^    import import_tree.pkg$/;"	i
import_tree	jedi/test/completion/imports.py	/^    import import_tree.pkg.mod1$/;"	i
import_tree	jedi/test/completion/imports.py	/^    import import_tree.random$/;"	i
import_tree	jedi/test/completion/imports.py	/^    import not_existant, import_tree.mod1 as foo$/;"	i
import_tree	jedi/test/static_analysis/attribute_error.py	/^import import_tree$/;"	i
importlib	jedi/jedi/_compatibility.py	/^    import importlib$/;"	i
imports	jedi/jedi/api/__init__.py	/^from jedi.evaluate import imports$/;"	i
imports	jedi/jedi/api/classes.py	/^from jedi.evaluate import imports$/;"	i
imports	jedi/jedi/api/completion.py	/^from jedi.evaluate import imports$/;"	i
imports	jedi/jedi/api/usages.py	/^from jedi.evaluate import imports$/;"	i
imports	jedi/jedi/evaluate/__init__.py	/^from jedi.evaluate import imports$/;"	i
imports	jedi/jedi/evaluate/dynamic.py	/^from jedi.evaluate import imports$/;"	i
imports	jedi/jedi/evaluate/finder.py	/^from jedi.evaluate import imports$/;"	i
imports	jedi/jedi/evaluate/representation.py	/^from jedi.evaluate import imports$/;"	i
imports	jedi/jedi/parser/tree.py	/^    def imports(self):$/;"	m	class:Scope
imports	jedi/test/test_regression.py	/^from jedi.evaluate import imports$/;"	i
in	jedi/jedi/_compatibility.py	/^    import builtins  # module name in python 3$/;"	i
in_builtin_module	jedi/jedi/api/classes.py	/^    def in_builtin_module(self):$/;"	m	class:BaseDefinition
increase_indent	jedi/jedi/debug.py	/^def increase_indent(func):$/;"	f
indent_block	jedi/jedi/common.py	/^def indent_block(text, indention='    '):$/;"	f
indent_block	jedi/jedi/evaluate/docstrings.py	/^from jedi.common import indent_block$/;"	i
indentfault	jedi/test/completion/invalid.py	/^def indentfault():$/;"	f
index	jedi/jedi/api/classes.py	/^    def index(self):$/;"	m	class:CallSignature
index	jedi/test/completion/arrays.py	/^index = 'asdf'$/;"	v
index	jedi/test/completion/arrays.py	/^index = 1$/;"	v
index	jedi/test/completion/arrays.py	/^index = int$/;"	v
index	jedi/test/completion/arrays.py	/^index = int()$/;"	v
index	jedi/test/completion/lambdas.py	/^index = C().with_param()(1)$/;"	v
index	jedi/test/completion/precedence.py	/^index = 0 + 1$/;"	v
inferior_exit	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    inferior_exit = False$/;"	v	class:ConqueGdb
init	jedi/jedi/debug.py	/^        from colorama import Fore, init$/;"	i
init	vim-airline/plugin/airline.vim	/^function! s:init()$/;"	f
initVariable	nerdtree/plugin/NERD_tree.vim	/^function! s:initVariable(var, value)$/;"	f
init_buffer	vim-airline/autoload/airline/extensions/branch.vim	/^function! s:init_buffer()$/;"	f
init_shared_memory	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    def init_shared_memory(self, mem_key):$/;"	m	class:ConqueSoleSubprocess
init_shared_memory	Conque-GDB/autoload/conque_term/conque_sole_wrapper.py	/^    def init_shared_memory(self, mem_key):$/;"	m	class:ConqueSoleWrapper
init_tabstops	Conque-GDB/autoload/conque_term/conque.py	/^    def init_tabstops(self):$/;"	m	class:Conque
initialise	jedi/jedi/debug.py	/^        from colorama import initialise$/;"	i
inline	jedi/jedi/refactoring.py	/^def inline(script):$/;"	f
input_buffer	Conque-GDB/autoload/conque_term/conque.py	/^    input_buffer = []$/;"	v	class:Conque
inputs	jedi/test/completion/functions.py	/^def inputs(param):$/;"	f
insert	Conque-GDB/autoload/conque_term/conque_screen.py	/^    def insert(self, line, value):$/;"	m	class:ConqueScreen
insert_enter	Conque-GDB/autoload/conque_term.vim	/^function! s:insert_enter() " {{{$/;"	f
insert_enter	Conque-GDB/autoload/conque_term/conque.py	/^    def insert_enter(self):$/;"	m	class:Conque
insert_leave	Conque-GDB/autoload/conque_term.vim	/^function! s:insert_leave() " {{{$/;"	f
insertcache	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:insertcache(str)$/;"	f
insertstr	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:insertstr()$/;"	f
inspect	jedi/jedi/debug.py	/^import inspect$/;"	i
inspect	jedi/jedi/evaluate/cache.py	/^import inspect$/;"	i
inspect	jedi/jedi/evaluate/compiled/__init__.py	/^import inspect$/;"	i
inspect	jedi/jedi/evaluate/compiled/fake.py	/^import inspect$/;"	i
inspect	jedi/jedi/evaluate/compiled/mixed.py	/^import inspect$/;"	i
inspect	jedi/jedi/parser/utils.py	/^import inspect$/;"	i
inspect	jedi/test/test_api/test_call_signatures.py	/^import inspect$/;"	i
inspect	jedi/test/test_jedi_system.py	/^import inspect$/;"	i
inst	jedi/test/completion/classes.py	/^inst = TestClass(1)$/;"	v
instance	jedi/test/completion/classes.py	/^instance = SubClass()$/;"	v
int_number	jedi/jedi/parser/tokenize.py	/^int_number = group(hex_number, bin_number, oct_number, dec_number)$/;"	v
interpreter	jedi/jedi/api/__init__.py	/^from jedi.api import interpreter$/;"	i
intersphinx_mapping	jedi/docs/conf.py	/^intersphinx_mapping = {$/;"	v
ints	jedi/test/completion/classes.py	/^ints = TestClass(1, 1.0)$/;"	v
invalid	jedi/test/completion/invalid.py	/^invalid = ,call$/;"	v
invalid	jedi/test/completion/invalid.py	/^invalid = .call$/;"	v
invalid	jedi/test/completion/invalid.py	/^invalid = call?.call$/;"	v
invalid_param	jedi/test/completion/invalid.py	/^def invalid_param(param=):$/;"	f
invalid_syntax	jedi/test/test_parser/test_pgen2.py	/^    def invalid_syntax(self, code, **kwargs):$/;"	m	class:GrammarTest
invalidate_star_import_cache	jedi/jedi/cache.py	/^def invalidate_star_import_cache(path):$/;"	f
invert	jedi/jedi/evaluate/flow_analysis.py	/^    def invert(self):$/;"	m	class:Status
invisible_pkg	jedi/test/completion/import_tree/__init__.py	/^from . import invisible_pkg$/;"	i
invisible_pkg	jedi/test/completion/import_tree/__init__.py	/^invisible_pkg = 1$/;"	v
invoke_funcrefs	vim-airline/autoload/airline.vim	/^function! s:invoke_funcrefs(context, funcrefs)$/;"	f
io	jedi/test/completion/imports.py	/^from tokenize import io$/;"	i
is	jedi/test/test_cache.py	/^@pytest.mark.skipif('True', message='Currently the star import cache is not enabled.')$/;"	i
is	jedi/test/test_integration_import.py	/^@pytest.mark.skipif('True', reason='The nested import stuff is still very messy.')$/;"	i
is_alive	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    def is_alive(self):$/;"	m	class:ConqueSoleSubprocess
is_alive	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    is_alive = True$/;"	v	class:ConqueSoleSubprocess
is_alive	Conque-GDB/autoload/conque_term/conque_sole_wrapper.py	/^    def is_alive(self):$/;"	m	class:ConqueSoleWrapper
is_alive	Conque-GDB/autoload/conque_term/conque_subprocess.py	/^    def is_alive(self):$/;"	m	class:ConqueSubprocess
is_branch_empty	vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:is_branch_empty()$/;"	f
is_breakpoint	Conque-GDB/autoload/conque_gdb/conque_sole_gdb.py	/^    def is_breakpoint(self, text):$/;"	m	class:ConqueSoleGdb
is_building_bp	Conque-GDB/autoload/conque_gdb/conque_sole_gdb.py	/^    is_building_bp = False$/;"	v	class:ConqueSoleGdb
is_class	jedi/jedi/evaluate/compiled/__init__.py	/^    def is_class(self):$/;"	m	class:CompiledObject
is_class	jedi/jedi/evaluate/iterable.py	/^    def is_class(self):$/;"	m	class:IterableWrapper
is_class	jedi/jedi/evaluate/representation.py	/^    def is_class(self):$/;"	m	class:Class
is_class	jedi/jedi/evaluate/representation.py	/^    def is_class(self):$/;"	m	class:Instance
is_class	jedi/jedi/evaluate/representation.py	/^    def is_class(self):$/;"	m	class:Wrapper
is_class_instance	jedi/jedi/evaluate/compiled/fake.py	/^def is_class_instance(obj):$/;"	f
is_definition	jedi/jedi/api/classes.py	/^    def is_definition(self):$/;"	m	class:Definition
is_definition	jedi/jedi/api/interpreter.py	/^    def is_definition(self):$/;"	m	class:LazyName
is_definition	jedi/jedi/evaluate/compiled/__init__.py	/^    def is_definition(self):$/;"	m	class:CompiledName
is_definition	jedi/jedi/evaluate/helpers.py	/^    def is_definition(self):$/;"	m	class:FakeImport
is_definition	jedi/jedi/evaluate/helpers.py	/^    def is_definition(self):$/;"	m	class:FakeName
is_definition	jedi/jedi/evaluate/representation.py	/^    def is_definition(self):$/;"	m	class:InstanceElement
is_definition	jedi/jedi/evaluate/representation.py	/^    def is_definition(self):$/;"	m	class:InstanceName
is_definition	jedi/jedi/parser/tree.py	/^    def is_definition(self):$/;"	m	class:Name
is_excluded_window	vim-airline/autoload/airline/extensions.vim	/^function! s:is_excluded_window()$/;"	f
is_generator	jedi/jedi/parser/tree.py	/^    def is_generator(self):$/;"	m	class:Function
is_generator	jedi/jedi/parser/tree.py	/^    def is_generator(self):$/;"	m	class:Lambda
is_identifier	jedi/jedi/parser/tokenize.py	/^    is_identifier = lambda s: s in namechars$/;"	v
is_identifier	jedi/jedi/parser/tokenize.py	/^    is_identifier = str.isidentifier$/;"	v
is_idle	Conque-GDB/autoload/conque_term/conque_sole_communicator.py	/^                        is_idle = False$/;"	v
is_idle	Conque-GDB/autoload/conque_term/conque_sole_communicator.py	/^                        is_idle = True$/;"	v
is_idle	Conque-GDB/autoload/conque_term/conque_sole_communicator.py	/^                is_idle = True$/;"	v
is_idle	Conque-GDB/autoload/conque_term/conque_sole_communicator.py	/^        is_idle = False$/;"	v
is_literal	jedi/jedi/evaluate/precedence.py	/^def is_literal(obj):$/;"	f
is_nested	jedi/jedi/parser/tree.py	/^    def is_nested(self):$/;"	m	class:Import
is_nested	jedi/jedi/parser/tree.py	/^    def is_nested(self):$/;"	m	class:ImportName
is_node	jedi/jedi/parser/tree.py	/^def is_node(node, *symbol_names):$/;"	f
is_prompt	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    is_prompt = False$/;"	v	class:ConqueGdb
is_py26	jedi/jedi/_compatibility.py	/^is_py26 = not is_py3 and sys.version_info[1] < 7$/;"	v
is_py26	jedi/test/test_integration_import.py	/^from jedi._compatibility import is_py26$/;"	i
is_py26	jedi/test/test_integration_stdlib.py	/^from jedi._compatibility import is_py26$/;"	i
is_py3	jedi/jedi/api/keywords.py	/^from jedi._compatibility import is_py3, is_py35$/;"	i
is_py3	jedi/jedi/debug.py	/^from jedi._compatibility import encoding, is_py3, u$/;"	i
is_py3	jedi/jedi/evaluate/compiled/fake.py	/^from jedi._compatibility import is_py3, builtins, unicode, is_py34$/;"	i
is_py3	jedi/jedi/evaluate/representation.py	/^from jedi._compatibility import use_metaclass, unicode, Python3Method, is_py3$/;"	i
is_py3	jedi/jedi/parser/token.py	/^from jedi._compatibility import is_py3, is_py35$/;"	i
is_py3	jedi/jedi/parser/tokenize.py	/^from jedi._compatibility import is_py3$/;"	i
is_py3	jedi/jedi/parser/tree.py	/^from jedi._compatibility import (Python3Method, encoding, is_py3, utf8_repr,$/;"	i
is_py3	jedi/test/run.py	/^from jedi._compatibility import unicode, is_py3$/;"	i
is_py3	jedi/test/test_api/test_api.py	/^from jedi._compatibility import is_py3$/;"	i
is_py3	jedi/test/test_evaluate/test_compiled.py	/^from jedi._compatibility import builtins, is_py3$/;"	i
is_py3	jedi/test/test_integration_keyword.py	/^from jedi._compatibility import is_py3$/;"	i
is_py3	jedi/test/test_parser/test_parser.py	/^from jedi._compatibility import u, is_py3$/;"	i
is_py3	jedi/test/test_parser/test_pgen2.py	/^from jedi._compatibility import unicode, is_py3$/;"	i
is_py3	jedi/test/test_parser/test_tokenize.py	/^from jedi._compatibility import u, is_py3$/;"	i
is_py33	jedi/test/test_api/test_call_signatures.py	/^from jedi._compatibility import is_py33$/;"	i
is_py33	jedi/test/test_api/test_interpreter.py	/^from jedi._compatibility import is_py33$/;"	i
is_py34	jedi/jedi/evaluate/compiled/fake.py	/^from jedi._compatibility import is_py3, builtins, unicode, is_py34$/;"	i
is_py35	jedi/jedi/api/keywords.py	/^from jedi._compatibility import is_py3, is_py35$/;"	i
is_py35	jedi/jedi/parser/token.py	/^from jedi._compatibility import is_py3, is_py35$/;"	i
is_root_node	jedi/jedi/parser/fast.py	/^    def is_root_node(self):$/;"	m	class:ParserNode
is_scope	jedi/jedi/evaluate/compiled/__init__.py	/^    def is_scope(self):$/;"	m	class:CompiledObject
is_scope	jedi/jedi/evaluate/representation.py	/^    def is_scope(self):$/;"	m	class:Executed
is_scope	jedi/jedi/evaluate/representation.py	/^    def is_scope(self):$/;"	m	class:InstanceElement
is_scope	jedi/jedi/evaluate/representation.py	/^    def is_scope(self):$/;"	m	class:Wrapper
is_scope	jedi/jedi/parser/tree.py	/^    def is_scope(self):$/;"	m	class:Base
is_scope	jedi/jedi/parser/tree.py	/^    def is_scope(self):$/;"	m	class:CompFor
is_scope	jedi/jedi/parser/tree.py	/^    def is_scope(self):$/;"	m	class:Scope
is_star_import	jedi/jedi/parser/tree.py	/^    def is_star_import(self):$/;"	m	class:Import
is_string	jedi/jedi/evaluate/precedence.py	/^def is_string(obj):$/;"	f
is_string	jedi/jedi/evaluate/sys_path.py	/^        from jedi.evaluate.precedence import is_string$/;"	i
is_submodule	jedi/test/test_jedi_system.py	/^    def is_submodule(m):$/;"	f	function:test_no_duplicate_modules
iscmdwin	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:iscmdwin()$/;"	f
isdir	jedi/jedi/__main__.py	/^from os.path import join, dirname, abspath, isdir$/;"	i
isinst	jedi/test/completion/flow_analysis.py	/^def isinst(x):$/;"	f
isinstance	jedi/jedi/evaluate/representation.py	/^    def isinstance(self, *cls):$/;"	m	class:InstanceElement
isinstance	jedi/jedi/parser/tree.py	/^    def isinstance(self, *cls):$/;"	m	class:Base
isinstance_func	jedi/test/completion/isinstance.py	/^def isinstance_func(arr):$/;"	f
iskeyword	jedi/test/completion/imports.py	/^                    iskeyword$/;"	i
isolated_jedi_cache	jedi/test/conftest.py	/^def isolated_jedi_cache(monkeypatch, tmpdir):$/;"	f
ispathitem	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ispathitem()$/;"	f
items	jedi/jedi/evaluate/jedi_typing.py	/^        def items(self):$/;"	m	class:factory.Mapping
items	jedi/jedi/parser/fast.py	/^    def items(self):$/;"	m	class:MergedNamesDict
iterable	jedi/jedi/api/classes.py	/^from jedi.evaluate import iterable$/;"	i
iterable	jedi/jedi/evaluate/__init__.py	/^from jedi.evaluate import iterable$/;"	i
iterable	jedi/jedi/evaluate/analysis.py	/^                    from jedi.evaluate import iterable$/;"	i
iterable	jedi/jedi/evaluate/finder.py	/^from jedi.evaluate import iterable$/;"	i
iterable	jedi/jedi/evaluate/param.py	/^from jedi.evaluate import iterable$/;"	i
iterable	jedi/jedi/evaluate/precedence.py	/^    from jedi.evaluate import iterable$/;"	i
iterable	jedi/jedi/evaluate/precedence.py	/^    from jedi.evaluate import iterable, representation as er$/;"	i
iterable	jedi/jedi/evaluate/recursion.py	/^from jedi.evaluate import iterable$/;"	i
iterable	jedi/jedi/evaluate/representation.py	/^from jedi.evaluate import iterable$/;"	i
iterable	jedi/jedi/evaluate/stdlib.py	/^from jedi.evaluate import iterable$/;"	i
iterators	jedi/test/completion/pep0484_typing.py	/^def iterators(ps, qs, rs, ts):$/;"	f
itertools	jedi/jedi/evaluate/pep0484.py	/^import itertools$/;"	i
itself	jedi/jedi/parser/tree.py	/^        raise ValueError('Name should be defined in the import itself')$/;"	i
jedi	jedi/conftest.py	/^import jedi$/;"	i
jedi	jedi/docs/conf.py	/^import jedi$/;"	i
jedi	jedi/jedi/__main__.py	/^    import jedi$/;"	i
jedi	jedi/jedi/api/replstartup.py	/^import jedi.utils$/;"	i
jedi	jedi/scripts/memory_check.py	/^import jedi$/;"	i
jedi	jedi/scripts/profile.py	/^import jedi$/;"	i
jedi	jedi/scripts/wx_check.py	/^import jedi$/;"	i
jedi	jedi/setup.py	/^import jedi$/;"	i
jedi	jedi/sith.py	/^import jedi$/;"	i
jedi	jedi/test/conftest.py	/^import jedi$/;"	i
jedi	jedi/test/refactor.py	/^import jedi$/;"	i
jedi	jedi/test/run.py	/^import jedi$/;"	i
jedi	jedi/test/test_api/test_api_classes_follow_definition.py	/^import jedi$/;"	i
jedi	jedi/test/test_api/test_classes.py	/^    docstr('import jedi\\njedi.Scr', cleandoc(Script.__doc__))$/;"	i
jedi	jedi/test/test_api/test_full_name.py	/^import jedi$/;"	i
jedi	jedi/test/test_api/test_interpreter.py	/^import jedi$/;"	i
jedi	jedi/test/test_api/test_usages.py	/^import jedi$/;"	i
jedi	jedi/test/test_cache.py	/^import jedi$/;"	i
jedi	jedi/test/test_debug.py	/^import jedi$/;"	i
jedi	jedi/test/test_evaluate/test_absolute_import.py	/^import jedi$/;"	i
jedi	jedi/test/test_evaluate/test_annotations.py	/^import jedi$/;"	i
jedi	jedi/test/test_evaluate/test_docstring.py	/^import jedi$/;"	i
jedi	jedi/test/test_evaluate/test_extension.py	/^import jedi$/;"	i
jedi	jedi/test/test_evaluate/test_imports.py	/^import jedi$/;"	i
jedi	jedi/test/test_evaluate/test_namespace_package.py	/^import jedi$/;"	i
jedi	jedi/test/test_evaluate/test_pyc.py	/^import jedi$/;"	i
jedi	jedi/test/test_jedi_system.py	/^import jedi$/;"	i
jedi	jedi/test/test_parser/test_fast_parser.py	/^import jedi$/;"	i
jedi	jedi/test/test_parser/test_parser.py	/^import jedi$/;"	i
jedi	jedi/test/test_parser/test_tokenize.py	/^    import jedi$/;"	i
jedi	jedi/test/test_parser/test_user_context.py	/^import jedi$/;"	i
jedi	jedi/test/test_regression.py	/^import jedi$/;"	i
jedi	jedi/test/test_speed.py	/^import jedi$/;"	i
jedi	jedi/test/test_windows.py	/^import jedi$/;"	i
jedi_	jedi/test/completion/sys_path.py	/^import jedi_$/;"	i
jedi_cache_directory_orig	jedi/conftest.py	/^jedi_cache_directory_orig = None$/;"	v
jedi_cache_directory_temp	jedi/conftest.py	/^jedi_cache_directory_temp = None$/;"	v
jedi_doc	jedi/test/test_api/test_classes.py	/^from jedi import Script, defined_names, __doc__ as jedi_doc, names$/;"	i
join	jedi/jedi/__main__.py	/^from os.path import join, dirname, abspath, isdir$/;"	i
join	jedi/test/completion/on_import.py	/^from os.path import join$/;"	i
join	jedi/test/test_api/test_full_name.py	/^        self.check('import os; os.path.join', 'os.path.join')$/;"	i
join	jedi/test/test_api/test_interpreter.py	/^        from os.path import join$/;"	i
join	jedi/test/test_evaluate/test_namespace_package.py	/^from os.path import dirname, join$/;"	i
join1	jedi/test/completion/descriptors.py	/^    def join1(self):$/;"	m	class:PropClass
join2	jedi/test/completion/descriptors.py	/^    def join2(self):$/;"	m	class:PropClass
json	jedi/jedi/parser/utils.py	/^import json$/;"	i
json	jedi/sith.py	/^import json$/;"	i
json	jedi/test/completion/on_import.py	/^import json$/;"	i
json	jedi/test/completion/on_import.py	/^import json, datetime$/;"	i
json	jedi/test/completion/stdlib.py	/^import json$/;"	i
json	jedi/test/test_api/test_classes.py	/^    assert get_types('import json.tool') == set(['module'])$/;"	i
json	jedi/test/test_api/test_classes.py	/^    assert get_types('import json.tool', column=9) == set(['module'])$/;"	i
json	jedi/test/test_api/test_classes.py	/^    assert get_types('import json.tool; json') == set(['module'])$/;"	i
json	jedi/test/test_api/test_classes.py	/^    assert get_types('import json.tool; json.tool') == set(['module'])$/;"	i
json	jedi/test/test_api/test_classes.py	/^    assert get_types('import json.tool; json.tool.main') == set(['function'])$/;"	i
jumpToChild	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToChild(currentNode, direction)$/;"	f
jumpToFirstChild	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToFirstChild(node)$/;"	f
jumpToLastChild	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToLastChild(node)$/;"	f
jumpToNextSibling	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToNextSibling(node)$/;"	f
jumpToParent	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToParent(node)$/;"	f
jumpToPrevSibling	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToPrevSibling(node)$/;"	f
jumpToRoot	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToRoot()$/;"	f
jumpToSibling	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToSibling(currentNode, forward)$/;"	f
jump_to_tab	vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! s:jump_to_tab(offset)$/;"	f
just_a_func	jedi/test/completion/decorators.py	/^def just_a_func():$/;"	f
just_a_method	jedi/test/completion/descriptors.py	/^    def just_a_method(self):$/;"	m	class:RevealAccess
just_a_method	jedi/test/completion/usages.py	/^    def just_a_method(self): pass$/;"	m	class:Super
just_a_method	jedi/test/completion/usages.py	/^    def just_a_method(self):$/;"	m	class:TestClass
just_because_we_can	jedi/test/completion/pep0484.py	/^def just_because_we_can(x: "flo" + "at"):$/;"	f
just_newlines	jedi/jedi/parser/fast.py	/^        def just_newlines(current_lines):$/;"	f	function:FastParser._split_parts
keys	jedi/jedi/api/keywords.py	/^        keys = keyword.kwlist + ["async", "await"]$/;"	v
keys	jedi/jedi/api/keywords.py	/^        keys = keyword.kwlist$/;"	v
keys	jedi/jedi/api/keywords.py	/^    keys = keyword.kwlist + ['None', 'False', 'True']$/;"	v
keys	jedi/jedi/evaluate/jedi_typing.py	/^        def keys(self):$/;"	m	class:factory.Mapping
keyword	jedi/jedi/api/keywords.py	/^def keyword(evaluator, string, pos=(0, 0)):$/;"	f
keyword	jedi/jedi/api/keywords.py	/^import keyword$/;"	i
keyword	jedi/jedi/parser/tree.py	/^    def keyword(self):$/;"	m	class:KeywordStatement
keyword	jedi/test/completion/imports.py	/^    import keyword$/;"	i
keyword	jedi/test/test_api/test_interpreter.py	/^    import keyword$/;"	i
keyword	jedi/test/test_utils.py	/^        assert self.completions('import keyword') == ['import keyword']$/;"	i
keywords	jedi/jedi/api/classes.py	/^from jedi.api import keywords$/;"	i
keywords	jedi/jedi/api/completion.py	/^from jedi.api import keywords$/;"	i
keywords	jedi/setup.py	/^      keywords='python completion refactoring vim',$/;"	v
keywords_only_valid_as_leaf	jedi/jedi/api/keywords.py	/^keywords_only_valid_as_leaf = ($/;"	v
kw	jedi/test/completion/stdlib.py	/^kw = functools.partial(function, b=1.0)$/;"	v
kwargs_func	jedi/test/completion/functions.py	/^def kwargs_func(**kwargs):$/;"	f
kwargs_iteration	jedi/test/completion/functions.py	/^def kwargs_iteration(**kwargs):$/;"	f
kwargs_nested	jedi/test/static_analysis/star_arguments.py	/^def kwargs_nested(**kwargs):$/;"	f
kwargs_test	jedi/test/static_analysis/star_arguments.py	/^def kwargs_test(**kwargs):$/;"	f
kwlist	jedi/test/completion/imports.py	/^                    iskeyword$/;"	i
l	Conque-GDB/autoload/conque_term/conque.py	/^    l = 1 # current cursor line$/;"	v	class:Conque
l	jedi/test/completion/precedence.py	/^l = list$/;"	v
lash	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:lash(...)$/;"	f
lash	ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! s:lash(...)$/;"	f
last	jedi/test/run.py	/^            last = arg$/;"	v
last	jedi/test/run.py	/^    last = None$/;"	v
last_bp_line	Conque-GDB/autoload/conque_gdb/conque_sole_gdb.py	/^    last_bp_line = -1$/;"	v	class:ConqueSoleGdb
last_leaf	jedi/jedi/parser/tree.py	/^    def last_leaf(self):$/;"	m	class:BaseNode
lastvisual	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:lastvisual()$/;"	f
latex_documents	jedi/docs/conf.py	/^latex_documents = [$/;"	v
latex_elements	jedi/docs/conf.py	/^latex_elements = {$/;"	v
lc	jedi/test/completion/arrays.py	/^lc = [x for a, *x in [(1, '', 1.0)]]$/;"	v
leavepre	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:leavepre()$/;"	f
level	jedi/jedi/evaluate/helpers.py	/^    def level(self):$/;"	m	class:FakeImport
level	jedi/jedi/evaluate/imports.py	/^                        debug.warning('Attempted relative import beyond top-level package.')$/;"	i
level	jedi/jedi/parser/tree.py	/^    def level(self):$/;"	m	class:ImportFrom
level	jedi/jedi/parser/tree.py	/^    def level(self):$/;"	m	class:ImportName
license	jedi/setup.py	/^      license='MIT',$/;"	v
line	jedi/jedi/api/classes.py	/^    def line(self):$/;"	m	class:BaseDefinition
line	jedi/jedi/evaluate/analysis.py	/^    def line(self):$/;"	m	class:Error
line_nr_test	jedi/test/run.py	/^    def line_nr_test(self):$/;"	m	class:IntegrationTestCase
line_offset	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    line_offset = 0$/;"	v	class:ConqueSoleSubprocess
lineout	ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! s:lineout(dict)$/;"	f
lines	Conque-GDB/autoload/conque_term/conque.py	/^    lines = 24 # same as $LINES$/;"	v	class:Conque
lines	Conque-GDB/autoload/conque_term/conque_sole_wrapper.py	/^    lines = 24$/;"	v	class:ConqueSoleWrapper
list_arr	jedi/test/completion/dynamic_arrays.py	/^    def list_arr(self, el):$/;"	m	class:C
list_with_non_imports	jedi/test/completion/docstring.py	/^def list_with_non_imports(lst):$/;"	f
listen	jedi/test/completion/comprehensions.py	/^def listen(arg):$/;"	f
literal_arr	jedi/test/completion/dynamic_arrays.py	/^    def literal_arr(self, el):$/;"	m	class:C
literal_eval	jedi/jedi/_compatibility.py	/^def literal_eval(string):$/;"	f
literal_eval	jedi/jedi/common.py	/^from ast import literal_eval$/;"	i
literal_eval	jedi/jedi/evaluate/docstrings.py	/^from ast import literal_eval$/;"	i
literal_eval	jedi/test/run.py	/^from ast import literal_eval$/;"	i
literals_to_types	jedi/jedi/evaluate/precedence.py	/^def literals_to_types(evaluator, result):$/;"	f
load	jedi/jedi/evaluate/imports.py	/^    def load(source):$/;"	f	function:_load_module
load	jedi/jedi/evaluate/sys_path.py	/^    def load(buildout_script):$/;"	f	function:_get_paths_from_buildout_script
load	jedi/jedi/parser/pgen2/grammar.py	/^    def load(self, filename):$/;"	m	class:Grammar
load	jedi/test/completion/on_import.py	/^from json import load, dump$/;"	i
load_grammar	jedi/jedi/api/__init__.py	/^from jedi.parser import load_grammar$/;"	i
load_grammar	jedi/jedi/evaluate/compiled/fake.py	/^from jedi.parser import ParserWithRecovery, load_grammar$/;"	i
load_grammar	jedi/jedi/evaluate/docstrings.py	/^from jedi.parser import ParserWithRecovery, load_grammar$/;"	i
load_grammar	jedi/jedi/evaluate/pep0484.py	/^    Parser, load_grammar, ParseError, ParserWithRecovery, tree$/;"	i
load_grammar	jedi/jedi/parser/__init__.py	/^def load_grammar(version='3.4'):$/;"	f
load_grammar	jedi/test/run.py	/^from jedi.parser import Parser, load_grammar$/;"	i
load_grammar	jedi/test/test_evaluate/test_absolute_import.py	/^from jedi.parser import ParserWithRecovery, load_grammar$/;"	i
load_grammar	jedi/test/test_evaluate/test_buildout_detection.py	/^from jedi.parser import ParserWithRecovery, load_grammar$/;"	i
load_grammar	jedi/test/test_evaluate/test_compiled.py	/^from jedi.parser import load_grammar$/;"	i
load_grammar	jedi/test/test_evaluate/test_precedence.py	/^from jedi.parser import load_grammar, Parser$/;"	i
load_grammar	jedi/test/test_evaluate/test_sys_path.py	/^from jedi.parser import ParserWithRecovery, load_grammar$/;"	i
load_grammar	jedi/test/test_new_parser.py	/^from jedi.parser import ParserWithRecovery, load_grammar$/;"	i
load_grammar	jedi/test/test_parser/test_fast_parser.py	/^from jedi.parser import load_grammar$/;"	i
load_grammar	jedi/test/test_parser/test_get_code.py	/^from jedi.parser import ParserWithRecovery, load_grammar$/;"	i
load_grammar	jedi/test/test_parser/test_param_splitting.py	/^from jedi.parser import Parser, load_grammar$/;"	i
load_grammar	jedi/test/test_parser/test_parser.py	/^from jedi.parser import ParserWithRecovery, load_grammar$/;"	i
load_grammar	jedi/test/test_parser/test_parser_tree.py	/^from jedi.parser import ParserWithRecovery, load_grammar$/;"	i
load_grammar	jedi/test/test_parser/test_pgen2.py	/^from jedi.parser import Parser, load_grammar, ParseError$/;"	i
load_grammar	jedi/test/test_parser/test_tokenize.py	/^from jedi.parser import ParserWithRecovery, load_grammar, tokenize$/;"	i
load_grammar	jedi/test/test_regression.py	/^from jedi.parser import ParserWithRecovery, load_grammar$/;"	i
load_module	jedi/jedi/evaluate/compiled/__init__.py	/^def load_module(evaluator, path=None, name=None):$/;"	f
load_parser	jedi/jedi/api/classes.py	/^from jedi.parser.utils import load_parser$/;"	i
load_parser	jedi/jedi/evaluate/imports.py	/^from jedi.parser.utils import save_parser, load_parser, parser_cache$/;"	i
load_parser	jedi/jedi/evaluate/sys_path.py	/^from jedi.parser.utils import load_parser, save_parser$/;"	i
load_parser	jedi/jedi/parser/utils.py	/^    def load_parser(self, path, original_changed_time):$/;"	m	class:ParserPickling
load_parser	jedi/jedi/parser/utils.py	/^def load_parser(path):$/;"	f
load_stored_item	jedi/test/test_cache.py	/^def load_stored_item(cache, path, item):$/;"	f
loaded_bufferpopup	PopupBuffer.vim/plugin/PopupBuffer.vim	/^let loaded_bufferpopup = 1$/;"	v
loaded_nerd_tree	nerdtree/plugin/NERD_tree.vim	/^let loaded_nerd_tree = 1$/;"	v
local_classes	jedi/test/completion/docstring.py	/^def local_classes(node, node2):$/;"	f
log	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:log(m)$/;"	f
logging	jedi/jedi/utils.py	/^import logging$/;"	i
long_description	jedi/setup.py	/^      long_description=readme,$/;"	v
look_key_filename	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    def look_key_filename(self, look_key):$/;"	m	class:ConqueGdb
look_key_split	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    def look_key_split(self, look_key):$/;"	m	class:ConqueGdb
lookup	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    def lookup(self, filename, line):$/;"	m	class:RegisteredBpDict
lookup_sign_ids	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    lookup_sign_ids = dict()$/;"	v	class:ConqueGdb
lookup_table	jedi/jedi/evaluate/flow_analysis.py	/^    lookup_table = {}$/;"	v	class:Status
loops	Conque-GDB/autoload/conque_term/conque_sole_communicator.py	/^        loops = 0$/;"	v
lsCmd	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:lsCmd()$/;"	f
lst	jedi/test/completion/dynamic_arrays.py	/^lst = [1]$/;"	v
lst	jedi/test/completion/dynamic_arrays.py	/^lst = list()$/;"	v
lst	jedi/test/completion/dynamic_arrays.py	/^lst = list(s)$/;"	v
lst	jedi/test/completion/dynamic_arrays.py	/^lst = list(st)$/;"	v
m	jedi/test/completion/classes.py	/^    m = meth$/;"	v	class:WithoutMethod
m	jedi/test/completion/descriptors.py	/^m = C()$/;"	v
main	jedi/scripts/memory_check.py	/^def main(mods):$/;"	f
main	jedi/scripts/profile.py	/^def main(args):$/;"	f
main	jedi/sith.py	/^def main(arguments):$/;"	f
main	jedi/test/test_api/test_classes.py	/^    assert get_types('import json.tool; json.tool.main') == set(['function'])$/;"	i
maintainer	jedi/setup.py	/^      maintainer=__AUTHOR__,$/;"	v
maintainer_email	jedi/setup.py	/^      maintainer_email=__AUTHOR_EMAIL__,$/;"	v
make_definitions	jedi/test/test_api/test_classes.py	/^def make_definitions():$/;"	f
make_dfa	jedi/jedi/parser/pgen2/pgen.py	/^    def make_dfa(self, start, finish):$/;"	m	class:ParserGenerator
make_first	jedi/jedi/parser/pgen2/pgen.py	/^    def make_first(self, c, name):$/;"	m	class:ParserGenerator
make_grammar	jedi/jedi/parser/pgen2/pgen.py	/^    def make_grammar(self):$/;"	m	class:ParserGenerator
make_label	jedi/jedi/parser/pgen2/pgen.py	/^    def make_label(self, c, label):$/;"	m	class:ParserGenerator
makecase	jedi/test/run.py	/^    def makecase(t):$/;"	f	function:collect_file_tests
makepath	jedi/jedi/evaluate/site.py	/^def makepath(*paths):$/;"	f
man_pages	jedi/docs/conf.py	/^man_pages = [$/;"	v
map	vim-airline/t/themes.vim	/^    let map = airline#themes#generate_color_map($/;"	v
map_keys	vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! s:map_keys()$/;"	f
mapping	jedi/jedi/evaluate/iterable.py	/^    mapping = {'(': 'tuple',$/;"	v	class:Array
mapping	jedi/test/completion/pep0484_typing.py	/^def mapping(p, q, d, r, s, t):$/;"	f
marks	jedi/test/speed/precedence.py	/^def marks(code):$/;"	f
master_doc	jedi/docs/conf.py	/^master_doc = 'index'$/;"	v
match	jedi/test/run.py	/^        match = re.match('(\\d+)-(\\d+)', arg)$/;"	v
match_something	jedi/test/static_analysis/attribute_error.py	/^    def match_something(self, param):$/;"	m	class:NotCalled
match_window_opts	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:match_window_opts()$/;"	f
matchfname	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchfname(item, pat)$/;"	f
matchlens	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchlens(str, pat, ...)$/;"	f
matchtabe	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchtabe(item, pat)$/;"	f
matchtabs	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchtabs(item, pat)$/;"	f
math	Conque-GDB/autoload/conque_term/conque.py	/^import math$/;"	i
math	jedi/test/completion/basic.py	/^    import math$/;"	i
math	jedi/test/completion/goto.py	/^import math$/;"	i
math	jedi/test/completion/on_import.py	/^    import math$/;"	i
math	jedi/test/completion/ordering.py	/^import math$/;"	i
math	jedi/test/completion/ordering.py	/^math = 3$/;"	v
math	jedi/test/completion/stdlib.py	/^import math$/;"	i
math	jedi/test/test_parser/test_parser.py	/^        assert imp.end_pos == (1, len('import math'))$/;"	i
math	jedi/test/test_parser/test_parser.py	/^        assert names[0].end_pos == (1, len('import math'))$/;"	i
max	ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! s:max(len, max)$/;"	f
max_executions	jedi/jedi/settings.py	/^max_executions = 250$/;"	v
max_executions_without_builtins	jedi/jedi/settings.py	/^max_executions_without_builtins = 200$/;"	v
max_function_recursion_level	jedi/jedi/settings.py	/^max_function_recursion_level = 5$/;"	v
max_loops	Conque-GDB/autoload/conque_term/conque_sole_communicator.py	/^        max_loops = 0$/;"	v
max_until_execution_unique	jedi/jedi/settings.py	/^max_until_execution_unique = 50$/;"	v
maxf	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:maxf(len)$/;"	f
maybe	jedi/jedi/parser/tokenize.py	/^def maybe(*choices):$/;"	f
mem_key	Conque-GDB/autoload/conque_term/conque_sole_communicator.py	/^        mem_key = sys.argv[1]$/;"	v
mem_key	Conque-GDB/autoload/conque_term/conque_sole_shared_memory.py	/^    mem_key = None$/;"	v	class:ConqueSoleSharedMemory
mem_redraw_ct	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    mem_redraw_ct = 0$/;"	v	class:ConqueSoleSubprocess
mem_size	Conque-GDB/autoload/conque_term/conque_sole_shared_memory.py	/^    mem_size = None$/;"	v	class:ConqueSoleSharedMemory
mem_type	Conque-GDB/autoload/conque_term/conque_sole_shared_memory.py	/^    mem_type = None$/;"	v	class:ConqueSoleSharedMemory
memoize	jedi/test/completion/decorators.py	/^def memoize(function):$/;"	f
memoize	jedi/test/completion/functions.py	/^def memoize(func):$/;"	f
memoize_default	jedi/jedi/api/classes.py	/^from jedi.evaluate.cache import memoize_default, CachedMetaClass$/;"	i
memoize_default	jedi/jedi/evaluate/__init__.py	/^from jedi.evaluate.cache import memoize_default$/;"	i
memoize_default	jedi/jedi/evaluate/cache.py	/^def memoize_default(default=NO_DEFAULT, evaluator_is_first_arg=False, second_arg_is_evaluator=False):$/;"	f
memoize_default	jedi/jedi/evaluate/docstrings.py	/^from jedi.evaluate.cache import memoize_default$/;"	i
memoize_default	jedi/jedi/evaluate/dynamic.py	/^from jedi.evaluate.cache import memoize_default$/;"	i
memoize_default	jedi/jedi/evaluate/finder.py	/^from jedi.evaluate.cache import memoize_default$/;"	i
memoize_default	jedi/jedi/evaluate/imports.py	/^from jedi.evaluate.cache import memoize_default, NO_DEFAULT$/;"	i
memoize_default	jedi/jedi/evaluate/iterable.py	/^from jedi.evaluate.cache import CachedMetaClass, memoize_default$/;"	i
memoize_default	jedi/jedi/evaluate/pep0484.py	/^from jedi.evaluate.cache import memoize_default$/;"	i
memoize_default	jedi/jedi/evaluate/representation.py	/^from jedi.evaluate.cache import memoize_default, CachedMetaClass, NO_DEFAULT$/;"	i
memoize_default	jedi/jedi/evaluate/sys_path.py	/^from jedi.evaluate.cache import memoize_default$/;"	i
memoize_faked	jedi/jedi/evaluate/compiled/fake.py	/^def memoize_faked(obj):$/;"	f
memoize_method	jedi/jedi/cache.py	/^def memoize_method(method):$/;"	f
memoize_method	jedi/jedi/evaluate/compiled/__init__.py	/^from jedi.cache import underscore_memoization, memoize_method$/;"	i
memoizer	jedi/jedi/evaluate/compiled/fake.py	/^    def memoizer(*args, **kwargs):$/;"	f	function:memoize_faked
mergelists	ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:mergelists()$/;"	f
messy	jedi/test/test_integration_import.py	/^@pytest.mark.skipif('True', reason='The nested import stuff is still very messy.')$/;"	i
meth	jedi/test/completion/classes.py	/^def meth(self):$/;"	f
method_base	jedi/test/completion/classes.py	/^    def method_base(self):$/;"	m	class:Base
method_mixin	jedi/test/completion/classes.py	/^    def method_mixin(self):$/;"	m	class:Mixin
method_sub	jedi/test/completion/classes.py	/^    def method_sub(self):$/;"	m	class:SubClass
method_super	jedi/test/completion/classes.py	/^    def method_super(self):$/;"	m	class:SuperClass
method_var	jedi/test/completion/decorators.py	/^    def method_var(self):$/;"	m	class:MethodDecorators
mfunc	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mfunc()$/;"	f
migemo	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:migemo(str)$/;"	f
mixed	jedi/jedi/api/classes.py	/^from jedi.evaluate.compiled import mixed$/;"	i
mixed	jedi/jedi/api/interpreter.py	/^from jedi.evaluate.compiled import mixed$/;"	i
mixed	jedi/jedi/evaluate/representation.py	/^from jedi.evaluate.compiled import mixed$/;"	i
mixed	jedi/test/static_analysis/star_arguments.py	/^def mixed(*args, **kwargs):$/;"	f
mixed	jedi/test/test_api/test_interpreter.py	/^from jedi.evaluate.compiled import mixed$/;"	i
mixed2	jedi/test/static_analysis/star_arguments.py	/^def mixed2(*args, **kwargs):$/;"	f
mixedsort	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mixedsort(...)$/;"	f
mmap	Conque-GDB/autoload/conque_term/conque_sole_shared_memory.py	/^import mmap$/;"	i
mmode	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mmode()$/;"	f
mod	jedi/test/test_evaluate/test_imports.py	/^    assert len(jedi.Script('import pkg; pkg.mod', 1, 19).completions()) == 1$/;"	i
mod1	jedi/test/completion/goto.py	/^import import_tree.mod1$/;"	i
mod1	jedi/test/completion/goto.py	/^import import_tree.pkg.mod1$/;"	i
mod1	jedi/test/completion/imports.py	/^    import import_tree.mod1$/;"	i
mod1	jedi/test/completion/imports.py	/^    import import_tree.pkg.mod1$/;"	i
mod1	jedi/test/completion/imports.py	/^from . import datetime as mod1$/;"	i
modevar	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:modevar()$/;"	f
modify	ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:modify(entry, type)$/;"	f
mods	jedi/scripts/memory_check.py	/^        mods = ['re', 'numpy', 'scipy', 'scipy.sparse', 'scipy.stats',$/;"	v
mods	jedi/scripts/memory_check.py	/^        mods = sys.argv[1:]$/;"	v
module	jedi/jedi/_compatibility.py	/^    import builtins  # module name in python 3$/;"	i
module	jedi/jedi/api/classes.py	/^    def module(self):$/;"	m	class:CallSignature
module	jedi/test/test_api/test_classes.py	/^    assert get_types('from json import tool') == set(['module'])$/;"	i
module	jedi/test/test_api/test_classes.py	/^    assert get_types('from json import tool; tool') == set(['module'])$/;"	i
module	jedi/test/test_api/test_classes.py	/^    assert get_types('import ') == set(['module'])$/;"	i
module	jedi/test/test_api/test_classes.py	/^    assert get_types('import datetime; datetime') == set(['module'])$/;"	i
module	jedi/test/test_api/test_classes.py	/^    assert get_types('import json.tool') == set(['module'])$/;"	i
module	jedi/test/test_api/test_classes.py	/^    assert get_types('import json.tool', column=9) == set(['module'])$/;"	i
module	jedi/test/test_api/test_classes.py	/^    assert get_types('import json.tool; json') == set(['module'])$/;"	i
module	jedi/test/test_api/test_classes.py	/^    assert get_types('import json.tool; json.tool') == set(['module'])$/;"	i
module	jedi/test/test_api/test_classes.py	/^    assert get_types('import t') == set(['module'])$/;"	i
module	jedi/test/test_evaluate/init_extension_module/module.c	/^static struct PyModuleDef module = {$/;"	v	typeref:struct:PyModuleDef	file:
module	jedi/test/test_evaluate/not_in_sys_path/pkg/module.py	/^from not_in_sys_path.not_in_sys_path_package import module$/;"	i
module_name	jedi/jedi/api/classes.py	/^    def module_name(self):$/;"	m	class:BaseDefinition
module_name	jedi/test/run.py	/^    def module_name(self):$/;"	m	class:IntegrationTestCase
module_not_exists	jedi/test/completion/usages.py	/^import module_not_exists$/;"	i
modules	jedi/jedi/evaluate/compiled/fake.py	/^modules = {}$/;"	v
moo	jedi/test/test_evaluate/test_imports.py	/^    pytest.mark.xfail(("import flask.ext.moo; flask.ext.moo.", "Foo")),$/;"	i
move	jedi/jedi/parser/tree.py	/^    def move(self, line_offset, column_offset):$/;"	m	class:BaseNode
move	jedi/jedi/parser/tree.py	/^    def move(self, line_offset, column_offset):$/;"	m	class:Leaf
mro	jedi/test/completion/context.py	/^    def mro$/;"	m	class:Y
msg	ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:msg(name, cwd)$/;"	f
mtype	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mtype()$/;"	f
multi_line_call	jedi/test/completion/functions.py	/^def multi_line_call(b):$/;"	f
multi_line_func	jedi/test/completion/functions.py	/^def multi_line_func(a, # comment blabla$/;"	f
multiple	jedi/test/completion/named_param.py	/^def multiple(foo, bar):$/;"	f
multipliers	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:multipliers(...)$/;"	f
my_decorator	jedi/test/completion/stdlib.py	/^def my_decorator(f):$/;"	f
my_lambda	jedi/test/completion/named_param.py	/^my_lambda = lambda lambda_param: lambda_param + 1$/;"	v
myclass	jedi/test/completion/classes.py	/^myclass = TestClass(1, '', 3.0)$/;"	v
myfoobar	jedi/test/completion/context.py	/^    myfoobar = 3$/;"	v	class:Base
na	jedi/test/completion/thirdparty/pylab_.py	/^na = numpy.array([1,2])$/;"	v
name	jedi/jedi/_compatibility.py	/^    import builtins  # module name in python 3$/;"	i
name	jedi/jedi/api/classes.py	/^    def name(self):$/;"	m	class:BaseDefinition
name	jedi/jedi/evaluate/compiled/__init__.py	/^    def name(self):$/;"	m	class:CompiledObject
name	jedi/jedi/evaluate/imports.py	/^        self._import = name.get_parent_until(tree.Import)$/;"	i
name	jedi/jedi/evaluate/iterable.py	/^    def name(self):$/;"	m	class:Array
name	jedi/jedi/evaluate/iterable.py	/^    def name(self):$/;"	m	class:ArrayMixin
name	jedi/jedi/evaluate/param.py	/^    def name(self):$/;"	m	class:ExecutedParam
name	jedi/jedi/evaluate/representation.py	/^    def name(self):$/;"	m	class:Instance
name	jedi/jedi/evaluate/representation.py	/^    def name(self):$/;"	m	class:InstanceElement
name	jedi/jedi/evaluate/representation.py	/^    def name(self):$/;"	m	class:ModuleWrapper
name	jedi/jedi/evaluate/representation.py	/^    def name(self):$/;"	m	class:Wrapper
name	jedi/jedi/parser/tokenize.py	/^name = r'\\w+'$/;"	v
name	jedi/jedi/parser/tree.py	/^    def name(self):$/;"	m	class:ClassOrFunc
name	jedi/jedi/parser/tree.py	/^    def name(self):$/;"	m	class:Function
name	jedi/jedi/parser/tree.py	/^    def name(self):$/;"	m	class:Lambda
name	jedi/jedi/parser/tree.py	/^    def name(self):$/;"	m	class:Module
name	jedi/jedi/parser/tree.py	/^    def name(self):$/;"	m	class:Param
name_class	jedi/jedi/evaluate/compiled/__init__.py	/^    name_class = CompiledName$/;"	v	class:LazyNamesDict
name_class	jedi/jedi/evaluate/compiled/mixed.py	/^    name_class = MixedName$/;"	v	class:LazyMixedNamesDict
name_for_position	jedi/jedi/evaluate/representation.py	/^    def name_for_position(self, position):$/;"	m	class:FunctionExecution
name_for_position	jedi/jedi/parser/tree.py	/^    def name_for_position(self, position):$/;"	m	class:BaseNode
name_with_symbols	jedi/jedi/api/classes.py	/^    def name_with_symbols(self):$/;"	m	class:Completion
namechars	jedi/jedi/parser/tokenize.py	/^    namechars = string.ascii_letters + '_'$/;"	v
namedtuple	jedi/jedi/api/helpers.py	/^from collections import namedtuple$/;"	i
namedtuple	jedi/jedi/parser/tokenize.py	/^from collections import namedtuple$/;"	i
namedtuple	jedi/jedi/utils.py	/^from collections import namedtuple$/;"	i
names	jedi/jedi/__init__.py	/^from jedi.api import preload_module, defined_names, names$/;"	i
names	jedi/jedi/api/__init__.py	/^def names(source=None, path=None, encoding='utf-8', all_scopes=False,$/;"	f
names	jedi/jedi/api/keywords.py	/^    def names(self):$/;"	m	class:Keyword
names	jedi/test/test_api/test_classes.py	/^from jedi import Script, defined_names, __doc__ as jedi_doc, names$/;"	i
names	jedi/test/test_api/test_defined_names.py	/^from jedi import defined_names, names$/;"	i
names	jedi/test/test_evaluate/test_helpers.py	/^from jedi import names$/;"	i
names_dict	jedi/jedi/evaluate/compiled/__init__.py	/^    def names_dict(self):$/;"	m	class:CompiledObject
names_dict	jedi/jedi/evaluate/compiled/mixed.py	/^    def names_dict(self):$/;"	m	class:MixedObject
names_dict	jedi/jedi/parser/tree.py	/^    def names_dict(self):$/;"	m	class:CompFor
names_dict_lookup	jedi/jedi/evaluate/finder.py	/^    def names_dict_lookup(self, names_dict, position):$/;"	m	class:NameFinder
names_dicts	jedi/jedi/api/interpreter.py	/^    def names_dicts(self, search_global):$/;"	m	class:MixedModule
names_dicts	jedi/jedi/evaluate/compiled/__init__.py	/^    def names_dicts(self, search_global, is_instance=False):$/;"	m	class:CompiledObject
names_dicts	jedi/jedi/evaluate/compiled/mixed.py	/^    def names_dicts(self, search_global):$/;"	m	class:MixedObject
names_dicts	jedi/jedi/evaluate/iterable.py	/^    def names_dicts(self, search_global=False):  # Always False.$/;"	m	class:ArrayMixin
names_dicts	jedi/jedi/evaluate/iterable.py	/^    def names_dicts(self, search_global=False):  # is always False$/;"	m	class:GeneratorMixin
names_dicts	jedi/jedi/evaluate/representation.py	/^    def names_dicts(self, search_global):$/;"	m	class:Function
names_dicts	jedi/jedi/evaluate/representation.py	/^    def names_dicts(self, search_global):$/;"	m	class:FunctionExecution
names_dicts	jedi/jedi/evaluate/representation.py	/^    def names_dicts(self, search_global):$/;"	m	class:Instance
names_dicts	jedi/jedi/evaluate/representation.py	/^    def names_dicts(self, search_global):$/;"	m	class:ModuleWrapper
names_dicts	jedi/jedi/evaluate/representation.py	/^    def names_dicts(self, search_global, is_instance=False):$/;"	m	class:Class
names_dicts	jedi/jedi/parser/tree.py	/^    def names_dicts(self, search_global):$/;"	m	class:CompFor
narrowable	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:narrowable()$/;"	f
nerdtree#checkForBrowse	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#checkForBrowse(dir)$/;"	f
nerdtree#compareBookmarks	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareBookmarks(first, second)$/;"	f
nerdtree#compareNodes	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodes(n1, n2)$/;"	f
nerdtree#compareNodesBySortKey	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodesBySortKey(n1, n2)$/;"	f
nerdtree#completeBookmarks	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#completeBookmarks(A,L,P)$/;"	f
nerdtree#deprecated	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#deprecated(func, ...)$/;"	f
nerdtree#echo	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echo(msg)$/;"	f
nerdtree#echoError	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoError(msg)$/;"	f
nerdtree#echoWarning	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoWarning(msg)$/;"	f
nerdtree#exec	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#exec(cmd)$/;"	f
nerdtree#has_opt	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#has_opt(options, name)$/;"	f
nerdtree#loadClassFiles	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#loadClassFiles()$/;"	f
nerdtree#postSourceActions	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#postSourceActions()$/;"	f
nerdtree#renderView	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#renderView()$/;"	f
nerdtree#runningWindows	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#runningWindows()$/;"	f
nerdtree#ui_glue#bookmarkNode	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#bookmarkNode(...)$/;"	f
nerdtree#ui_glue#chRootCwd	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#chRootCwd()$/;"	f
nerdtree#ui_glue#clearBookmarks	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#clearBookmarks(bookmarks)$/;"	f
nerdtree#ui_glue#createDefaultBindings	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#createDefaultBindings()$/;"	f
nerdtree#ui_glue#invokeKeyMap	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#invokeKeyMap(key)$/;"	f
nerdtree#ui_glue#openBookmark	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#openBookmark(name)$/;"	f
nerdtree#ui_glue#revealBookmark	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#revealBookmark(name)$/;"	f
nerdtree#ui_glue#setupCommands	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#setupCommands()$/;"	f
nerdtree#ui_glue#upDir	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#upDir(keepState)$/;"	f
nerdtree#version	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#version()$/;"	f
nested	jedi/test/completion/descriptors.py	/^    def nested(self):$/;"	m	class:PropClass
nested	jedi/test/static_analysis/star_arguments.py	/^def nested(*args):$/;"	f
nested2	jedi/test/completion/descriptors.py	/^    def nested2(self):$/;"	m	class:PropClass
nested_args	jedi/test/completion/functions.py	/^def nested_args(*args):$/;"	f
nested_args2	jedi/test/completion/functions.py	/^def nested_args2(*args, **kwargs):$/;"	f
nested_both	jedi/test/completion/functions.py	/^def nested_both(*args, **kwargs):$/;"	f
nested_both2	jedi/test/completion/functions.py	/^def nested_both2(*args, **kwargs):$/;"	f
nested_def	jedi/test/completion/functions.py	/^def nested_def(a, *args, **kwargs):$/;"	f
nested_def2	jedi/test/completion/functions.py	/^def nested_def2(*args, **kwargs):$/;"	f
nested_default	jedi/test/completion/functions.py	/^def nested_default(**kwargs):$/;"	f
nested_import	jedi/jedi/evaluate/imports.py	/^        self._nested_import = nested_import$/;"	i
nested_kw	jedi/test/completion/functions.py	/^def nested_kw(**kwargs1):$/;"	f
nested_kw2	jedi/test/completion/functions.py	/^def nested_kw2(**kwargs2):$/;"	f
nested_no_call_to_function	jedi/test/static_analysis/star_arguments.py	/^def nested_no_call_to_function(*args):$/;"	f
nested_twice	jedi/test/static_analysis/star_arguments.py	/^def nested_twice(*args1):$/;"	f
new_files	jedi/jedi/refactoring.py	/^    def new_files(self):$/;"	m	class:Refactoring
newcache	ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! s:newcache(cwd)$/;"	f
next	jedi/jedi/common.py	/^    def next(self):$/;"	m	class:PushBackIterator
next	jedi/jedi/evaluate/jedi_typing.py	/^        def next(self):$/;"	m	class:factory.Iterator
next	jedi/jedi/parser/fast.py	/^    def next(self):$/;"	m	class:FastTokenizer
next	jedi/test/completion/generators.py	/^    def next(self):$/;"	m	class:Counter
next_sign_id	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    next_sign_id = 15607$/;"	v	class:ConqueGdb
njedi	jedi/test/test_api/test_classes.py	/^    docstr('import jedi\\njedi.Scr', cleandoc(Script.__doc__))$/;"	i
no_completion_duplicates	jedi/jedi/settings.py	/^no_completion_duplicates = True$/;"	v
no_unicode_pprint	jedi/jedi/_compatibility.py	/^def no_unicode_pprint(dct):$/;"	f
nocache	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:nocache(...)$/;"	f
nocache	ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! s:nocache()$/;"	f
nocache	ctrlp.vim/autoload/ctrlp/rtscript.vim	/^fu! s:nocache()$/;"	f
node	jedi/test/test_parser/test_parser_tree.py	/^    def node(self, request):$/;"	m	class:TestsFunctionAndLambdaParsing
node_after_else	jedi/jedi/parser/tree.py	/^    def node_after_else(self, node):$/;"	m	class:IfStmt
node_from_name	jedi/jedi/parser/tree.py	/^    def node_from_name(self, name):$/;"	m	class:WithStmt
node_in_which_check_node	jedi/jedi/parser/tree.py	/^    def node_in_which_check_node(self, node):$/;"	m	class:IfStmt
node_statements	jedi/jedi/evaluate/recursion.py	/^    def node_statements(self):$/;"	m	class:RecursionDetector
nodes_to_execute	jedi/jedi/parser/tree.py	/^    def nodes_to_execute(self, last_added=False):$/;"	m	class:Base
nodes_to_execute	jedi/jedi/parser/tree.py	/^    def nodes_to_execute(self, last_added=False):$/;"	m	class:Class
nodes_to_execute	jedi/jedi/parser/tree.py	/^    def nodes_to_execute(self, last_added=False):$/;"	m	class:CompFor
nodes_to_execute	jedi/jedi/parser/tree.py	/^    def nodes_to_execute(self, last_added=False):$/;"	m	class:Decorator
nodes_to_execute	jedi/jedi/parser/tree.py	/^    def nodes_to_execute(self, last_added=False):$/;"	m	class:ErrorNode
nodes_to_execute	jedi/jedi/parser/tree.py	/^    def nodes_to_execute(self, last_added=False):$/;"	m	class:ExprStmt
nodes_to_execute	jedi/jedi/parser/tree.py	/^    def nodes_to_execute(self, last_added=False):$/;"	m	class:Flow
nodes_to_execute	jedi/jedi/parser/tree.py	/^    def nodes_to_execute(self, last_added=False):$/;"	m	class:Function
nodes_to_execute	jedi/jedi/parser/tree.py	/^    def nodes_to_execute(self, last_added=False):$/;"	m	class:GlobalStmt
nodes_to_execute	jedi/jedi/parser/tree.py	/^    def nodes_to_execute(self, last_added=False):$/;"	m	class:Import
nodes_to_execute	jedi/jedi/parser/tree.py	/^    def nodes_to_execute(self, last_added=False):$/;"	m	class:KeywordStatement
nodes_to_execute	jedi/jedi/parser/tree.py	/^    def nodes_to_execute(self, last_added=False):$/;"	m	class:Lambda
nodes_to_execute	jedi/jedi/parser/tree.py	/^    def nodes_to_execute(self, last_added=False):$/;"	m	class:Leaf
nodes_to_execute	jedi/jedi/parser/tree.py	/^    def nodes_to_execute(self, last_added=False):$/;"	m	class:Module
nodes_to_execute	jedi/jedi/parser/tree.py	/^    def nodes_to_execute(self, last_added=False):$/;"	m	class:Name
nodes_to_execute	jedi/jedi/parser/tree.py	/^    def nodes_to_execute(self, last_added=False):$/;"	m	class:Node
nodes_to_execute	jedi/jedi/parser/tree.py	/^    def nodes_to_execute(self, last_added=False):$/;"	m	class:TryStmt
nodes_to_execute	jedi/jedi/parser/tree.py	/^    def nodes_to_execute(self, last_added=False):$/;"	m	class:WithStmt
nodes_to_execute	jedi/jedi/parser/tree.py	/^    def nodes_to_execute(self, last_added=False):$/;"	m	class:YieldExpr
nonamecond	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:nonamecond(str, filpath)$/;"	f
normal_method	jedi/test/completion/classes.py	/^    def normal_method(self):$/;"	m	class:TestX
normalfunc	jedi/test/completion/invalid.py	/^def normalfunc():$/;"	f
nosort	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:nosort()$/;"	f
nosplit	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:nosplit()$/;"	f
not	jedi/test/test_cache.py	/^@pytest.mark.skipif('True', message='Currently the star import cache is not enabled.')$/;"	i
not_existant	jedi/test/completion/imports.py	/^    import not_existant, import_tree.mod1 as foo$/;"	i
not_existing	jedi/test/static_analysis/imports.py	/^from os.path import not_existing$/;"	i
not_existing	jedi/test/static_analysis/imports.py	/^import not_existing$/;"	i
not_existing1	jedi/test/completion/imports.py	/^from keyword import not_existing1, not_existing2$/;"	i
not_existing2	jedi/test/completion/imports.py	/^from keyword import not_existing1, not_existing2$/;"	i
not_existing_import	jedi/test/completion/imports.py	/^import not_existing_import$/;"	i
not_existing_import	jedi/test/static_analysis/try_except.py	/^    import not_existing_import$/;"	i
not_existing_nested	jedi/test/static_analysis/imports.py	/^import not_existing_nested.date$/;"	i
not_in_sys_path	jedi/test/test_evaluate/not_in_sys_path/pkg/module.py	/^from not_in_sys_path import not_in_sys_path$/;"	i
not_in_sys_path_package	jedi/test/test_evaluate/not_in_sys_path/pkg/module.py	/^from not_in_sys_path import not_in_sys_path_package$/;"	i
not_pkg	jedi/test/test_evaluate/test_imports.py	/^      jedi.Script('import not_pkg; not_pkg.val', 1, 27).completions()) == 1$/;"	i
nothing	jedi/test/completion/decorators.py	/^def nothing(a,b,c):$/;"	f
ns1_file	jedi/test/test_evaluate/test_namespace_package.py	/^    assert script_with_path('from pkg import ns1_file').goto_definitions()$/;"	i
ns2_file	jedi/test/test_evaluate/test_namespace_package.py	/^    assert script_with_path('from pkg import ns2_file').goto_definitions()$/;"	i
ns3_file	jedi/test/test_evaluate/test_namespace_package.py	/^    assert not script_with_path('from pkg import ns3_file').goto_definitions()$/;"	i
number	jedi/jedi/parser/tokenize.py	/^number = group(imag_number, float_number, int_number)$/;"	v
numbers	jedi/test/speed/precedence.py	/^def numbers(code5):$/;"	f
numpy	jedi/scripts/profile.py	/^        args['<code>'] = 'import numpy; numpy.array([0])'$/;"	i
numpy	jedi/test/completion/thirdparty/pylab_.py	/^import numpy$/;"	i
numpy	jedi/test/completion/thirdparty/pylab_.py	/^import numpy.random$/;"	i
numpydoc	jedi/test/test_evaluate/test_docstring.py	/^    import numpydoc$/;"	i
numpydoc_unavailable	jedi/test/test_evaluate/test_docstring.py	/^    numpydoc_unavailable = False$/;"	v
numpydoc_unavailable	jedi/test/test_evaluate/test_docstring.py	/^    numpydoc_unavailable = True$/;"	v
obj	jedi/jedi/evaluate/iterable.py	/^    def obj(self):$/;"	m	class:Slice
objgraph	jedi/scripts/wx_check.py	/^import objgraph$/;"	i
oct_number	jedi/jedi/parser/tokenize.py	/^    oct_number = '0[0-7]+'$/;"	v
offset	Conque-GDB/autoload/conque_term/conque_sole.py	/^    offset = 0$/;"	v	class:ConqueSole
offset	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:offset(lines, height)$/;"	f
old_files	jedi/jedi/refactoring.py	/^    def old_files(self):$/;"	m	class:Refactoring
on_colorscheme_changed	vim-airline/plugin/airline.vim	/^function! s:on_colorscheme_changed()$/;"	f
on_exit	vim-airline/autoload/airline/extensions/branch.vim	/^  function! s:on_exit(channel) dict abort$/;"	f
on_exit	vim-airline/autoload/airline/extensions/po.vim	/^  function! s:on_exit(channel) dict abort$/;"	f
on_exit_mq	vim-airline/autoload/airline/extensions/branch.vim	/^  function! s:on_exit_mq(channel) dict abort$/;"	f
on_stdout	vim-airline/autoload/airline/extensions/branch.vim	/^  function! s:on_stdout(channel, msg) dict abort$/;"	f
on_stdout	vim-airline/autoload/airline/extensions/po.vim	/^  function! s:on_stdout(channel, msg) dict abort$/;"	f
on_window_changed	vim-airline/plugin/airline.vim	/^function! s:on_window_changed()$/;"	f
one_param	jedi/test/completion/parser.py	/^    def one_param($/;"	m	class:IndentIssues
only_valid_as_leaf	jedi/jedi/api/keywords.py	/^    def only_valid_as_leaf(self):$/;"	m	class:Keyword
open	Conque-GDB/autoload/conque_term/conque.py	/^    def open(self):$/;"	m	class:Conque
open	Conque-GDB/autoload/conque_term/conque_sole.py	/^    def open(self):$/;"	m	class:ConqueSole
open	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    def open(self, cmd, mem_key, options={}):$/;"	m	class:ConqueSoleSubprocess
open	Conque-GDB/autoload/conque_term/conque_sole_wrapper.py	/^    def open(self, cmd, lines, columns, python_exe='python.exe', communicator_py='conque_sole_communicator.py', options={}):$/;"	m	class:ConqueSoleWrapper
open	Conque-GDB/autoload/conque_term/conque_subprocess.py	/^    def open(self, command, env={}):$/;"	m	class:ConqueSubprocess
open	jedi/test/static_analysis/descriptors.py	/^    def open(cls, name, **kwargs):$/;"	m	class:TarFile
openExplorer	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openExplorer(node)$/;"	f
openHSplit	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openHSplit(target)$/;"	f
openInNewTab	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTab(target)$/;"	f
openInNewTabSilent	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTabSilent(target)$/;"	f
openNodeRecursively	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openNodeRecursively(node)$/;"	f
openVSplit	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openVSplit(target)$/;"	f
open_file	Conque-GDB/autoload/conque_gdb.vim	/^function! s:open_file(fname, lineno, perm)$/;"	f
openbrace	jedi/test/completion/invalid.py	/^def openbrace():$/;"	f
openbrace2	jedi/test/completion/invalid.py	/^def openbrace2():$/;"	f
openfile	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:openfile(cmd, fid, tail, chkmod, ...)$/;"	f
operation	jedi/test/test_api/test_full_name.py	/^    operation = 'completions'$/;"	v	class:TestFullNameWithCompletions
operation	jedi/test/test_api/test_full_name.py	/^    operation = 'goto_definitions'$/;"	v	class:TestFullNameWithGotoDefinitions
operation	jedi/test/test_api/test_full_name.py	/^    operation = None$/;"	v	class:MixinTestFullName
operations	jedi/sith.py	/^    operations = [$/;"	v	class:TestCase
operator	jedi/jedi/evaluate/precedence.py	/^import operator$/;"	i
operator	jedi/jedi/parser/tokenize.py	/^operator = group(r"\\*\\*=?", r">>=?", r"<<=?", r"!=",$/;"	v
operator	jedi/test/run.py	/^import operator$/;"	i
opmap	jedi/jedi/parser/token.py	/^opmap = {}$/;"	v
opmap	jedi/jedi/parser/tokenize.py	/^from jedi.parser.token import (tok_name, N_TOKENS, ENDMARKER, STRING, NUMBER, opmap,$/;"	i
optional	jedi/test/completion/pep0484_typing.py	/^def optional(p):$/;"	f
options	Conque-GDB/autoload/conque_term/conque_sole_communicator.py	/^        options = {'LINES': console_height, 'COLUMNS': console_width, 'CODE_PAGE': code_page, 'FAST_MODE': fast_mode}$/;"	v
opts	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:opts(...)$/;"	f
os	Conque-GDB/autoload/conque_gdb/conque_gdb_gdb.py	/^import gdb, os, signal$/;"	i
os	Conque-GDB/autoload/conque_gdb/conque_sole_gdb.py	/^import os$/;"	i
os	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^import os$/;"	i
os	Conque-GDB/autoload/conque_term/conque_subprocess.py	/^import os$/;"	i
os	jedi/docs/conf.py	/^import os$/;"	i
os	jedi/jedi/__main__.py	/^            import os$/;"	i
os	jedi/jedi/_compatibility.py	/^import os$/;"	i
os	jedi/jedi/api/__init__.py	/^import os$/;"	i
os	jedi/jedi/debug.py	/^import os$/;"	i
os	jedi/jedi/evaluate/compiled/__init__.py	/^import os$/;"	i
os	jedi/jedi/evaluate/compiled/fake.py	/^import os$/;"	i
os	jedi/jedi/evaluate/compiled/mixed.py	/^import os$/;"	i
os	jedi/jedi/evaluate/imports.py	/^import os$/;"	i
os	jedi/jedi/evaluate/pep0484.py	/^import os$/;"	i
os	jedi/jedi/evaluate/representation.py	/^import os$/;"	i
os	jedi/jedi/evaluate/site.py	/^import os$/;"	i
os	jedi/jedi/evaluate/sys_path.py	/^    c = "import os; from os.path import *; result=%s"$/;"	i
os	jedi/jedi/evaluate/sys_path.py	/^import os$/;"	i
os	jedi/jedi/parser/__init__.py	/^import os$/;"	i
os	jedi/jedi/parser/tree.py	/^import os$/;"	i
os	jedi/jedi/parser/utils.py	/^import os$/;"	i
os	jedi/jedi/settings.py	/^import os$/;"	i
os	jedi/jedi/utils.py	/^import os$/;"	i
os	jedi/scripts/memory_check.py	/^import os$/;"	i
os	jedi/sith.py	/^import os$/;"	i
os	jedi/test/completion/imports.py	/^import os$/;"	i
os	jedi/test/completion/on_import.py	/^import os$/;"	i
os	jedi/test/completion/stdlib.py	/^import os$/;"	i
os	jedi/test/completion/sys_path.py	/^import os$/;"	i
os	jedi/test/conftest.py	/^import os$/;"	i
os	jedi/test/helpers.py	/^import os$/;"	i
os	jedi/test/refactor.py	/^import os$/;"	i
os	jedi/test/run.py	/^import os$/;"	i
os	jedi/test/static_analysis/imports.py	/^import os$/;"	i
os	jedi/test/static_analysis/imports.py	/^import os.path$/;"	i
os	jedi/test/test_api/test_classes.py	/^    for c in Script('import os; os.path.').completions():$/;"	i
os	jedi/test/test_api/test_full_name.py	/^        self.check('from os import path', 'os.path')$/;"	i
os	jedi/test/test_api/test_full_name.py	/^        self.check('import os; os.path.join', 'os.path.join')$/;"	i
os	jedi/test/test_api/test_interpreter.py	/^        import os$/;"	i
os	jedi/test/test_evaluate/test_buildout_detection.py	/^import os$/;"	i
os	jedi/test/test_evaluate/test_extension.py	/^import os$/;"	i
os	jedi/test/test_evaluate/test_imports.py	/^import os$/;"	i
os	jedi/test/test_evaluate/test_pyc.py	/^import os$/;"	i
os	jedi/test/test_evaluate/test_sys_path.py	/^import os$/;"	i
os	jedi/test/test_integration.py	/^import os$/;"	i
os	jedi/test/test_integration_import.py	/^    check('\\nfrom os import whatever', ['import'], len('from os im'))$/;"	i
os	jedi/test/test_jedi_system.py	/^import os$/;"	i
os	jedi/test/test_regression.py	/^import os$/;"	i
os	jedi/test/test_utils.py	/^        import os$/;"	i
other	jedi/test/completion/functions.py	/^def other(a):$/;"	f
other_method	jedi/test/completion/classes.py	/^    def other_method(self):$/;"	m	class:TestX
other_method	jedi/test/completion/decorators.py	/^    def other_method(self):$/;"	m	class:SelfVars
output_blocks	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    output_blocks = 1$/;"	v	class:ConqueSoleSubprocess
p	jedi/test/completion/descriptors.py	/^    p = property(t)$/;"	v	class:B
package	jedi/jedi/evaluate/imports.py	/^                        debug.warning('Attempted relative import beyond top-level package.')$/;"	i
package_data	jedi/setup.py	/^      package_data={'jedi': ['evaluate\/compiled\/fake\/*.pym', 'parser\/grammar*.txt']},$/;"	v
packages	jedi/setup.py	/^      packages=packages,$/;"	v
packages	jedi/setup.py	/^packages = ['jedi', 'jedi.parser', 'jedi.parser.pgen2',$/;"	v
param	jedi/jedi/evaluate/__init__.py	/^from jedi.evaluate import param$/;"	i
param	jedi/jedi/evaluate/finder.py	/^from jedi.evaluate import param$/;"	i
param	jedi/jedi/evaluate/iterable.py	/^    from jedi.evaluate import param$/;"	i
param	jedi/jedi/evaluate/iterable.py	/^    from jedi.evaluate import representation as er, param$/;"	i
param	jedi/jedi/evaluate/representation.py	/^from jedi.evaluate import param$/;"	i
param	jedi/jedi/evaluate/stdlib.py	/^from jedi.evaluate import param$/;"	i
param	jedi/test/completion/goto.py	/^param = ClassDef$/;"	v
param_by_name	jedi/jedi/evaluate/representation.py	/^    def param_by_name(self, name):$/;"	m	class:FunctionExecution
params	jedi/jedi/api/classes.py	/^    def params(self):$/;"	m	class:BaseDefinition
params	jedi/jedi/evaluate/compiled/__init__.py	/^    def params(self):$/;"	m	class:CompiledObject
params	jedi/jedi/evaluate/representation.py	/^    def params(self):$/;"	m	class:Class
params	jedi/jedi/parser/tree.py	/^    def params(self):$/;"	m	class:Function
params	jedi/jedi/parser/tree.py	/^    def params(self):$/;"	m	class:Lambda
params	jedi/test/test_api/test_call_signatures.py	/^    def params(self, source, line=None, column=None):$/;"	m	class:TestParams
parent	jedi/jedi/api/classes.py	/^    def parent(self):$/;"	m	class:BaseDefinition
parent	jedi/jedi/api/interpreter.py	/^    def parent(self):$/;"	m	class:LazyName
parent	jedi/jedi/api/interpreter.py	/^    def parent(self, value):$/;"	m	class:LazyName
parent	jedi/jedi/evaluate/compiled/__init__.py	/^    def parent(self):$/;"	m	class:CompiledName
parent	jedi/jedi/evaluate/compiled/__init__.py	/^    def parent(self, value):$/;"	m	class:CompiledName
parent	jedi/jedi/evaluate/compiled/mixed.py	/^    def parent(self):$/;"	m	class:MixedName
parent	jedi/jedi/evaluate/compiled/mixed.py	/^    def parent(self, value):$/;"	m	class:MixedName
parent	jedi/jedi/evaluate/helpers.py	/^    def parent(self):$/;"	m	class:LazyName
parent	jedi/jedi/evaluate/helpers.py	/^    def parent(self, value):$/;"	m	class:LazyName
parent	jedi/jedi/evaluate/iterable.py	/^    def parent(self):$/;"	m	class:ArrayMixin
parent	jedi/jedi/evaluate/representation.py	/^    def parent(self):$/;"	m	class:Executed
parent	jedi/jedi/evaluate/representation.py	/^    def parent(self):$/;"	m	class:InstanceElement
parent_callback	jedi/jedi/evaluate/representation.py	/^        def parent_callback():$/;"	f	function:ModuleWrapper._module_attributes_dict
parent_function	jedi/jedi/parser/tree.py	/^    def parent_function(self):$/;"	m	class:Param
parse	jedi/jedi/evaluate/compiled/mixed.py	/^def parse(grammar, path):$/;"	f
parse	jedi/jedi/parser/__init__.py	/^    def parse(self, tokenizer):$/;"	m	class:Parser
parse	jedi/jedi/parser/__init__.py	/^    def parse(self, tokenizer):$/;"	m	class:ParserWithRecovery
parse	jedi/jedi/parser/pgen2/parse.py	/^    def parse(self, tokenizer):$/;"	m	class:PgenParser
parse	jedi/jedi/parser/pgen2/pgen.py	/^    def parse(self):$/;"	m	class:ParserGenerator
parse	jedi/test/test_parser/test_pgen2.py	/^def parse(code, version='3.4'):$/;"	f
parse_alt	jedi/jedi/parser/pgen2/pgen.py	/^    def parse_alt(self):$/;"	m	class:ParserGenerator
parse_atom	jedi/jedi/parser/pgen2/pgen.py	/^    def parse_atom(self):$/;"	m	class:ParserGenerator
parse_csi	Conque-GDB/autoload/conque_term/conque.py	/^    def parse_csi(self, s):$/;"	m	class:Conque
parse_item	jedi/jedi/parser/pgen2/pgen.py	/^    def parse_item(self):$/;"	m	class:ParserGenerator
parse_rhs	jedi/jedi/parser/pgen2/pgen.py	/^    def parse_rhs(self):$/;"	m	class:ParserGenerator
parse_test_files_option	jedi/test/conftest.py	/^def parse_test_files_option(opt):$/;"	f
parseline	ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:parseline(line)$/;"	f
parser	jedi/jedi/api/helpers.py	/^from jedi import parser$/;"	i
parser_cache	jedi/jedi/cache.py	/^from jedi.parser.utils import parser_cache$/;"	i
parser_cache	jedi/jedi/evaluate/imports.py	/^from jedi.parser.utils import save_parser, load_parser, parser_cache$/;"	i
parser_cache	jedi/jedi/parser/fast.py	/^from jedi.parser.utils import underscore_memoization, parser_cache$/;"	i
parser_cache	jedi/jedi/parser/utils.py	/^parser_cache = {}$/;"	v
parsing	jedi/test/completion/thirdparty/jedi_.py	/^from jedi import functions, evaluate, parsing$/;"	i
partial	jedi/jedi/evaluate/compiled/__init__.py	/^from functools import partial$/;"	i
partial	jedi/test/completion/descriptors.py	/^from functools import partial$/;"	i
partial	jedi/test/completion/imports.py	/^from functools import (partial, wraps)$/;"	i
parts	ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:parts(str)$/;"	f
pass_decorator	jedi/test/completion/completion.py	/^def pass_decorator(func):$/;"	f
path	jedi/jedi/evaluate/compiled/__init__.py	/^    path = None  # modules have this attribute - set it to None.$/;"	v	class:CompiledObject
path	jedi/jedi/evaluate/sys_path.py	/^    c = "import os; from os.path import *; result=%s"$/;"	i
path	jedi/test/completion/ordering.py	/^from os import path$/;"	i
path	jedi/test/static_analysis/imports.py	/^import os.path$/;"	i
path	jedi/test/test_api/test_classes.py	/^    for c in Script('import os; os.path.').completions():$/;"	i
path	jedi/test/test_api/test_full_name.py	/^        self.check('from os import path', 'os.path')$/;"	i
path	jedi/test/test_api/test_full_name.py	/^        self.check('import os; os.path.join', 'os.path.join')$/;"	i
path_for_name	jedi/jedi/parser/tree.py	/^    def path_for_name(self, name):$/;"	m	class:Import
paths	jedi/jedi/evaluate/helpers.py	/^    def paths(self):$/;"	m	class:FakeImport
paths	jedi/jedi/parser/tree.py	/^    def paths(self):$/;"	m	class:ImportFrom
paths	jedi/jedi/parser/tree.py	/^    def paths(self):$/;"	m	class:ImportName
paths	jedi/test/test_evaluate/test_sys_path.py	/^    def paths(src):$/;"	f	function:test_paths_from_assignment
pathshorten	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:pathshorten(str)$/;"	f
pdb	jedi/jedi/__main__.py	/^                import pdb$/;"	i
pdb	jedi/test/run.py	/^                import pdb$/;"	i
pep0484	jedi/jedi/evaluate/finder.py	/^from jedi.evaluate import pep0484$/;"	i
pep0484	jedi/jedi/evaluate/iterable.py	/^from jedi.evaluate import pep0484$/;"	i
pep0484	jedi/jedi/evaluate/representation.py	/^from jedi.evaluate import pep0484$/;"	i
pickle	Conque-GDB/autoload/conque_term/conque_sole_shared_memory.py	/^    import cPickle as pickle$/;"	i
pickle	Conque-GDB/autoload/conque_term/conque_sole_shared_memory.py	/^    import pickle$/;"	i
pickle	jedi/jedi/parser/pgen2/grammar.py	/^import pickle$/;"	i
pickle	jedi/jedi/parser/utils.py	/^import pickle$/;"	i
pid	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    pid = None$/;"	v	class:ConqueSoleSubprocess
pid	Conque-GDB/autoload/conque_term/conque_sole_wrapper.py	/^    pid = None$/;"	v	class:ConqueSoleWrapper
pid	Conque-GDB/autoload/conque_term/conque_subprocess.py	/^    pid = 0$/;"	v	class:ConqueSubprocess
pjoin	jedi/test/test_api/test_interpreter.py	/^        from os.path import join as pjoin$/;"	i
pkg	jedi/test/completion/goto.py	/^import import_tree.pkg$/;"	i
pkg	jedi/test/completion/goto.py	/^import import_tree.pkg.mod1$/;"	i
pkg	jedi/test/completion/imports.py	/^    import import_tree.pkg$/;"	i
pkg	jedi/test/completion/imports.py	/^    import import_tree.pkg.mod1$/;"	i
pkg	jedi/test/test_evaluate/test_imports.py	/^    assert len(jedi.Script('import pkg; pkg.mod', 1, 19).completions()) == 1$/;"	i
pkg_resources	jedi/test/test_evaluate/namespace_package/ns1/pkg/__init__.py	/^    import pkg_resources$/;"	i
pkgutil	jedi/jedi/_compatibility.py	/^import pkgutil$/;"	i
pkgutil	jedi/jedi/evaluate/imports.py	/^import pkgutil$/;"	i
pkgutil	jedi/jedi/evaluate/representation.py	/^import pkgutil$/;"	i
pkgutil	jedi/test/test_evaluate/namespace_package/ns1/pkg/__init__.py	/^    import pkgutil$/;"	i
place_file_breakpoints	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    def place_file_breakpoints(self, filename):$/;"	m	class:ConqueGdb
place_sign	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    def place_sign(self, breakpoints, line):$/;"	m	class:ConqueGdb
plain_text	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    def plain_text(self, input):$/;"	m	class:ConqueGdb
plain_text	Conque-GDB/autoload/conque_gdb/conque_sole_gdb.py	/^    def plain_text(self, line_nr, text, attributes, stats):$/;"	m	class:ConqueSoleGdb
plain_text	Conque-GDB/autoload/conque_term/conque.py	/^    def plain_text(self, input):$/;"	m	class:Conque
plain_text	Conque-GDB/autoload/conque_term/conque_sole.py	/^    def plain_text(self, line_nr, text, attributes, stats):$/;"	m	class:ConqueSole
platform	jedi/jedi/settings.py	/^import platform$/;"	i
platforms	jedi/setup.py	/^      platforms=['any'],$/;"	v
point_float	jedi/jedi/parser/tokenize.py	/^point_float = group(r'[0-9]+\\.[0-9]*', r'\\.[0-9]+') + maybe(exponent)$/;"	v
poll_wait_for_proc	Conque-GDB/autoload/conque_term/conque.py	/^    def poll_wait_for_proc(self, tries):$/;"	m	class:Conque
pop	jedi/jedi/parser/pgen2/parse.py	/^    def pop(self):$/;"	m	class:PgenParser
pop_execution	jedi/jedi/evaluate/recursion.py	/^    def pop_execution(self):$/;"	m	class:ExecutionRecursionDetector
pop_stmt	jedi/jedi/evaluate/recursion.py	/^    def pop_stmt(self):$/;"	m	class:RecursionDetector
position_nr	jedi/jedi/evaluate/param.py	/^    def position_nr(self):$/;"	m	class:ExecutedParam
position_nr	jedi/jedi/parser/tree.py	/^    def position_nr(self):$/;"	m	class:Param
possible_recursion_error	jedi/test/completion/flow_analysis.py	/^def possible_recursion_error(filename):$/;"	f
pprint	jedi/jedi/_compatibility.py	/^    import pprint$/;"	i
pprint	jedi/jedi/parser/pgen2/grammar.py	/^        from pprint import pprint$/;"	i
precedence	jedi/jedi/evaluate/__init__.py	/^from jedi.evaluate import precedence$/;"	i
precedence	jedi/jedi/evaluate/param.py	/^from jedi.evaluate import precedence$/;"	i
precedence	jedi/jedi/evaluate/stdlib.py	/^from jedi.evaluate import precedence$/;"	i
preload_module	jedi/jedi/__init__.py	/^from jedi.api import preload_module, defined_names, names$/;"	i
preload_module	jedi/jedi/api/__init__.py	/^def preload_module(*modules):$/;"	f
previewNodeCurrent	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeCurrent(node)$/;"	f
previewNodeHSplit	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeHSplit(node)$/;"	f
previewNodeVSplit	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeVSplit(node)$/;"	f
print_function	jedi/jedi/evaluate/site.py	/^from __future__ import print_function$/;"	i
print_function	jedi/sith.py	/^from __future__ import print_function, division, unicode_literals$/;"	i
print_to_stdout	jedi/jedi/debug.py	/^def print_to_stdout(color, str_out):$/;"	f
proc	Conque-GDB/autoload/conque_term/conque.py	/^    proc = None$/;"	v	class:Conque
proc	Conque-GDB/autoload/conque_term/conque_sole_communicator.py	/^        proc = ConqueSoleSubprocess()$/;"	v
proc	Conque-GDB/autoload/conque_term/conque_sole_wrapper.py	/^    proc = None$/;"	v	class:ConqueSoleWrapper
process	ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:process(entries, type)$/;"	f
process	ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:process(fname, ftype)$/;"	f
process	ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! s:process(clines, ...)$/;"	f
process	jedi/jedi/refactoring.py	/^    def process(path, old_lines, new_lines):$/;"	f	function:_rename
process_memory	jedi/scripts/wx_check.py	/^def process_memory():$/;"	f
profile_preload	jedi/scripts/memory_check.py	/^def profile_preload(mod):$/;"	f
project	jedi/docs/conf.py	/^project = u'Jedi'$/;"	v
prompt	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    prompt = None$/;"	v	class:ConqueGdb
promptToDelBuffer	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
promptToRenameBuffer	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToRenameBuffer(bufnum, msg, newFileName)$/;"	f
prompt_hook	Conque-GDB/autoload/conque_gdb/conque_gdb_gdb.py	/^def prompt_hook(prompt):$/;"	f
prop	jedi/test/completion/usages.py	/^    def prop(self):$/;"	m	class:TestProperty
prototype.add_raw	vim-airline/autoload/airline/builder.vim	/^function! s:prototype.add_raw(text) dict$/;"	f
prototype.add_section	vim-airline/autoload/airline/builder.vim	/^function! s:prototype.add_section(group, contents) dict$/;"	f
prototype.add_section_spaced	vim-airline/autoload/airline/builder.vim	/^function! s:prototype.add_section_spaced(group, contents) dict$/;"	f
prototype.build	vim-airline/autoload/airline/builder.vim	/^function! s:prototype.build() dict$/;"	f
prototype.split	vim-airline/autoload/airline/builder.vim	/^function! s:prototype.split(...) dict$/;"	f
prune_colors	Conque-GDB/autoload/conque_term/conque.py	/^    def prune_colors(self):$/;"	m	class:Conque
pseudo_extras	jedi/jedi/parser/tokenize.py	/^pseudo_extras = group(r'\\\\\\r?\\n', comment, triple)$/;"	v
pseudo_token	jedi/jedi/parser/tokenize.py	/^    group(pseudo_extras, number, funny, cont_str, name)$/;"	v
psutil	jedi/scripts/memory_check.py	/^import psutil$/;"	i
psycopg2	jedi/test/completion/thirdparty/psycopg2_.py	/^import psycopg2$/;"	i
pt	jedi/jedi/evaluate/compiled/fake.py	/^from jedi.parser import tree as pt$/;"	i
pt	jedi/jedi/parser/__init__.py	/^from jedi.parser import tree as pt$/;"	i
pt	jedi/jedi/refactoring.py	/^from jedi.parser import tree as pt$/;"	i
pt	jedi/test/test_parser/test_parser.py	/^from jedi.parser import tree as pt$/;"	i
pt	jedi/test/test_parser/test_parser_tree.py	/^from jedi.parser import tree as pt$/;"	i
pty	Conque-GDB/autoload/conque_term/conque_subprocess.py	/^import pty$/;"	i
push	jedi/jedi/parser/pgen2/parse.py	/^    def push(self, type_, newdfa, newstate):$/;"	m	class:PgenParser
push_back	jedi/jedi/common.py	/^    def push_back(self, value):$/;"	m	class:PushBackIterator
push_execution	jedi/jedi/evaluate/recursion.py	/^    def push_execution(self, execution):$/;"	m	class:ExecutionRecursionDetector
push_stmt	jedi/jedi/evaluate/recursion.py	/^    def push_stmt(self, stmt):$/;"	m	class:RecursionDetector
py__annotations__	jedi/jedi/evaluate/representation.py	/^    def py__annotations__(self):$/;"	m	class:Function
py__bases__	jedi/jedi/evaluate/compiled/__init__.py	/^    def py__bases__(self):$/;"	m	class:CompiledObject
py__bases__	jedi/jedi/evaluate/representation.py	/^    def py__bases__(self):$/;"	m	class:Class
py__bool__	jedi/jedi/evaluate/compiled/__init__.py	/^    def py__bool__(self):$/;"	m	class:CompiledObject
py__bool__	jedi/jedi/evaluate/iterable.py	/^    def py__bool__(self):$/;"	m	class:ArrayMixin
py__bool__	jedi/jedi/evaluate/iterable.py	/^    def py__bool__(self):$/;"	m	class:GeneratorMixin
py__bool__	jedi/jedi/evaluate/representation.py	/^    def py__bool__(self):$/;"	m	class:Instance
py__bool__	jedi/jedi/evaluate/representation.py	/^    def py__bool__(self):$/;"	m	class:Wrapper
py__call__	jedi/jedi/evaluate/compiled/__init__.py	/^    def py__call__(self, params):$/;"	m	class:CompiledObject
py__call__	jedi/jedi/evaluate/iterable.py	/^    def py__call__(self, params):$/;"	m	class:BuiltinMethod
py__call__	jedi/jedi/evaluate/representation.py	/^    def py__call__(self):$/;"	m	class:Instance
py__call__	jedi/jedi/evaluate/representation.py	/^    def py__call__(self, params):$/;"	m	class:Class
py__call__	jedi/jedi/evaluate/representation.py	/^    def py__call__(self, params):$/;"	m	class:Function
py__call__	jedi/jedi/evaluate/representation.py	/^    def py__call__(self, params):$/;"	m	class:InstanceElement
py__class__	jedi/jedi/evaluate/compiled/__init__.py	/^    def py__class__(self):$/;"	m	class:CompiledObject
py__class__	jedi/jedi/evaluate/iterable.py	/^    def py__class__(self):$/;"	m	class:ArrayMixin
py__class__	jedi/jedi/evaluate/iterable.py	/^    def py__class__(self):$/;"	m	class:GeneratorMixin
py__class__	jedi/jedi/evaluate/representation.py	/^    def py__class__(self):$/;"	m	class:Class
py__class__	jedi/jedi/evaluate/representation.py	/^    def py__class__(self):$/;"	m	class:Function
py__class__	jedi/jedi/evaluate/representation.py	/^    def py__class__(self):$/;"	m	class:Instance
py__class__	jedi/jedi/evaluate/representation.py	/^    def py__class__(self):$/;"	m	class:ModuleWrapper
py__file__	jedi/jedi/evaluate/compiled/__init__.py	/^    def py__file__(self):$/;"	m	class:CompiledObject
py__file__	jedi/jedi/evaluate/representation.py	/^    def py__file__(self):$/;"	m	class:ModuleWrapper
py__getitem__	jedi/jedi/evaluate/compiled/__init__.py	/^    def py__getitem__(self, index):$/;"	m	class:CompiledObject
py__getitem__	jedi/jedi/evaluate/iterable.py	/^    def py__getitem__(self, index):$/;"	m	class:Array
py__getitem__	jedi/jedi/evaluate/iterable.py	/^    def py__getitem__(self, index):$/;"	m	class:DictComprehension
py__getitem__	jedi/jedi/evaluate/iterable.py	/^    def py__getitem__(self, index):$/;"	m	class:FakeDict
py__getitem__	jedi/jedi/evaluate/iterable.py	/^    def py__getitem__(self, index):$/;"	m	class:ListComprehension
py__getitem__	jedi/jedi/evaluate/iterable.py	/^    def py__getitem__(self, index):$/;"	m	class:MergedArray
py__getitem__	jedi/jedi/evaluate/iterable.py	/^def py__getitem__(evaluator, types, trailer):$/;"	f
py__getitem__	jedi/jedi/evaluate/representation.py	/^    def py__getitem__(self, index):$/;"	m	class:Instance
py__iter__	jedi/jedi/evaluate/compiled/__init__.py	/^    def py__iter__(self):$/;"	m	class:CompiledObject
py__iter__	jedi/jedi/evaluate/iterable.py	/^    def py__iter__(self):$/;"	m	class:Array
py__iter__	jedi/jedi/evaluate/iterable.py	/^    def py__iter__(self):$/;"	m	class:Comprehension
py__iter__	jedi/jedi/evaluate/iterable.py	/^    def py__iter__(self):$/;"	m	class:DictComprehension
py__iter__	jedi/jedi/evaluate/iterable.py	/^    def py__iter__(self):$/;"	m	class:FakeDict
py__iter__	jedi/jedi/evaluate/iterable.py	/^    def py__iter__(self):$/;"	m	class:Generator
py__iter__	jedi/jedi/evaluate/iterable.py	/^    def py__iter__(self):$/;"	m	class:MergedArray
py__iter__	jedi/jedi/evaluate/iterable.py	/^    def py__iter__(self):$/;"	m	class:_ArrayInstance
py__iter__	jedi/jedi/evaluate/iterable.py	/^def py__iter__(evaluator, types, node=None):$/;"	f
py__iter__	jedi/jedi/evaluate/representation.py	/^    def py__iter__(self):$/;"	m	class:Instance
py__iter__	jedi/jedi/evaluate/sys_path.py	/^        from jedi.evaluate.iterable import py__iter__$/;"	i
py__iter__types	jedi/jedi/evaluate/iterable.py	/^def py__iter__types(evaluator, types, node=None):$/;"	f
py__mro__	jedi/jedi/evaluate/compiled/__init__.py	/^    def py__mro__(self):$/;"	m	class:CompiledObject
py__mro__	jedi/jedi/evaluate/representation.py	/^    def py__mro__(self):$/;"	m	class:Class
py__name__	jedi/jedi/evaluate/representation.py	/^    def py__name__(self):$/;"	m	class:ModuleWrapper
py__next__	jedi/jedi/evaluate/iterable.py	/^    def py__next__(self):$/;"	m	class:GeneratorMixin
py__package__	jedi/jedi/evaluate/representation.py	/^    def py__package__(self):$/;"	m	class:ModuleWrapper
py__path__	jedi/jedi/evaluate/representation.py	/^    def py__path__(self):$/;"	m	class:ModuleWrapper
pydoc	jedi/jedi/api/keywords.py	/^import pydoc$/;"	i
pydoc_topics	jedi/jedi/api/keywords.py	/^        import pydoc_topics$/;"	i
pydoc_topics	jedi/jedi/api/keywords.py	/^        pydoc_topics = None$/;"	v
pydoc_topics	jedi/jedi/api/keywords.py	/^    from pydoc_data import topics as pydoc_topics$/;"	i
pygments_style	jedi/docs/conf.py	/^pygments_style = 'sphinx'$/;"	v
pylab	jedi/test/completion/thirdparty/pylab_.py	/^import pylab$/;"	i
pytest	jedi/conftest.py	/^import pytest$/;"	i
pytest	jedi/test/conftest.py	/^import pytest$/;"	i
pytest	jedi/test/test_api/test_classes.py	/^import pytest$/;"	i
pytest	jedi/test/test_api/test_full_name.py	/^import pytest$/;"	i
pytest	jedi/test/test_cache.py	/^import pytest$/;"	i
pytest	jedi/test/test_evaluate/test_annotations.py	/^import pytest$/;"	i
pytest	jedi/test/test_evaluate/test_extension.py	/^import pytest$/;"	i
pytest	jedi/test/test_evaluate/test_imports.py	/^import pytest$/;"	i
pytest	jedi/test/test_evaluate/test_precedence.py	/^import pytest$/;"	i
pytest	jedi/test/test_evaluate/test_pyc.py	/^import pytest$/;"	i
pytest	jedi/test/test_evaluate/test_sys_path.py	/^import pytest$/;"	i
pytest	jedi/test/test_integration.py	/^import pytest$/;"	i
pytest	jedi/test/test_integration_import.py	/^import pytest$/;"	i
pytest	jedi/test/test_integration_stdlib.py	/^import pytest$/;"	i
pytest	jedi/test/test_parser/test_fast_parser.py	/^import pytest$/;"	i
pytest	jedi/test/test_parser/test_get_code.py	/^import pytest$/;"	i
pytest	jedi/test/test_parser/test_parser_tree.py	/^import pytest$/;"	i
pytest	jedi/test/test_parser/test_pgen2.py	/^import pytest$/;"	i
pytest	jedi/test/test_parser/test_tokenize.py	/^import pytest$/;"	i
pytest	jedi/test/test_regression.py	/^import pytest$/;"	i
pytest_addoption	jedi/conftest.py	/^def pytest_addoption(parser):$/;"	f
pytest_addoption	jedi/test/conftest.py	/^def pytest_addoption(parser):$/;"	f
pytest_configure	jedi/conftest.py	/^def pytest_configure(config):$/;"	f
pytest_generate_tests	jedi/test/conftest.py	/^def pytest_generate_tests(metafunc):$/;"	f
pytest_unconfigure	jedi/conftest.py	/^def pytest_unconfigure(config):$/;"	f
pytestmark	jedi/test/test_integration_stdlib.py	/^pytestmark = pytest.mark.skipif('sys.version_info[0] < 3')$/;"	v
python	jedi/jedi/_compatibility.py	/^    import builtins  # module name in python 3$/;"	i
r	jedi/test/completion/descriptors.py	/^    def r(self):$/;"	m	class:B
r	jedi/test/completion/descriptors.py	/^    def r(self, value):$/;"	m	class:B
raboof	jedi/test/completion/precedence.py	/^    raboof = 'fourtytwo'$/;"	v	class:FooBar
raise_error	jedi/jedi/parser/pgen2/pgen.py	/^    def raise_error(self, msg, *args):$/;"	m	class:ParserGenerator
raises	jedi/test/static_analysis/keywords.py	/^def raises():$/;"	f
raises	jedi/test/test_api/test_api.py	/^from pytest import raises$/;"	i
random	jedi/sith.py	/^import random$/;"	i
random	jedi/test/completion/imports.py	/^    import import_tree.random$/;"	i
random	jedi/test/completion/stdlib.py	/^import random$/;"	i
random	jedi/test/completion/thirdparty/pylab_.py	/^import numpy.random$/;"	i
random	jedi/test/static_analysis/branches.py	/^import random$/;"	i
raw	jedi/jedi/api/classes.py	/^    def raw(self):$/;"	m	class:_Help
raw_doc	jedi/jedi/api/classes.py	/^    def raw_doc(self):$/;"	m	class:BaseDefinition
raw_doc	jedi/jedi/parser/tree.py	/^    def raw_doc(self):$/;"	m	class:DocstringMixin
re	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^import re, collections$/;"	i
re	Conque-GDB/autoload/conque_gdb/conque_sole_gdb.py	/^import re$/;"	i
re	Conque-GDB/autoload/conque_term/conque.py	/^import re$/;"	i
re	Conque-GDB/autoload/conque_term/conque_globals.py	/^import re$/;"	i
re	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^import re$/;"	i
re	jedi/jedi/_compatibility.py	/^import re$/;"	i
re	jedi/jedi/api/classes.py	/^import re$/;"	i
re	jedi/jedi/api/helpers.py	/^import re$/;"	i
re	jedi/jedi/common.py	/^import re$/;"	i
re	jedi/jedi/evaluate/compiled/__init__.py	/^import re$/;"	i
re	jedi/jedi/evaluate/docstrings.py	/^import re$/;"	i
re	jedi/jedi/evaluate/pep0484.py	/^import re$/;"	i
re	jedi/jedi/evaluate/representation.py	/^import re$/;"	i
re	jedi/jedi/evaluate/stdlib.py	/^import re$/;"	i
re	jedi/jedi/parser/__init__.py	/^import re$/;"	i
re	jedi/jedi/parser/fast.py	/^import re$/;"	i
re	jedi/jedi/parser/tokenize.py	/^import re$/;"	i
re	jedi/jedi/parser/tree.py	/^import re$/;"	i
re	jedi/jedi/utils.py	/^import re$/;"	i
re	jedi/test/completion/stdlib.py	/^import re$/;"	i
re	jedi/test/conftest.py	/^import re$/;"	i
re	jedi/test/refactor.py	/^import re$/;"	i
re	jedi/test/run.py	/^import re$/;"	i
react	jedi/test/completion/classes.py	/^    def react(self):$/;"	m	class:Dude
read	Conque-GDB/autoload/conque_term/conque.py	/^    def read(self, timeout=1, set_cursor=True, return_output=False, update_buffer=True):$/;"	m	class:Conque
read	Conque-GDB/autoload/conque_term/conque_sole.py	/^    def read(self, timeout=1, set_cursor=True, return_output=False, update_buffer=True):$/;"	m	class:ConqueSole
read	Conque-GDB/autoload/conque_term/conque_sole_shared_memory.py	/^    def read(self, chars=1, start=0):$/;"	m	class:ConqueSoleSharedMemory
read	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    def read(self):$/;"	m	class:ConqueSoleSubprocess
read	Conque-GDB/autoload/conque_term/conque_sole_wrapper.py	/^    def read(self, start_line, num_lines, timeout=0):$/;"	m	class:ConqueSoleWrapper
read	Conque-GDB/autoload/conque_term/conque_subprocess.py	/^    def read(self, timeout=1):$/;"	m	class:ConqueSubprocess
read	jedi/jedi/_compatibility.py	/^    def read(self):$/;"	m	class:DummyFile
read_count	Conque-GDB/autoload/conque_term/conque.py	/^    read_count = 0$/;"	v	class:Conque
readline	jedi/jedi/utils.py	/^        import readline$/;"	i
readline	jedi/test/test_utils.py	/^    import readline$/;"	i
readline	jedi/test/test_utils.py	/^    readline = False$/;"	v
readme	jedi/setup.py	/^readme = open('README.rst').read() + '\\n\\n' + open('CHANGELOG.rst').read()$/;"	v
record	ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:record(bufnr)$/;"	f
recurse	jedi/test/completion/recursion.py	/^    def recurse(self):$/;"	f	function:Recursion
recurse	jedi/test/completion/recursion.py	/^    def recurse(self):$/;"	m	class:X
recurse_class1	jedi/test/completion/import_tree/recurse_class2.py	/^import recurse_class1$/;"	i
recurse_class2	jedi/test/completion/import_tree/recurse_class1.py	/^import recurse_class2$/;"	i
recursion	jedi/jedi/evaluate/__init__.py	/^from jedi.evaluate import recursion$/;"	i
recursion	jedi/jedi/evaluate/representation.py	/^from jedi.evaluate import recursion$/;"	i
recursion	jedi/test/completion/functions.py	/^def recursion(a, b):$/;"	f
recursion1	jedi/test/completion/recursion.py	/^def recursion1(foo):$/;"	f
recursion2	jedi/test/completion/functions.py	/^def recursion2(a):$/;"	f
recursion_decorator	jedi/jedi/evaluate/recursion.py	/^def recursion_decorator(func):$/;"	f
reduce	jedi/test/refactor.py	/^from functools import reduce$/;"	i
reduce	jedi/test/run.py	/^from functools import reduce$/;"	i
refactor	jedi/test/conftest.py	/^from . import refactor$/;"	i
refactor	jedi/test/refactor.py	/^    def refactor(self):$/;"	m	class:RefactoringCase
refactoring	jedi/test/refactor.py	/^from jedi import refactoring$/;"	i
reformat	ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:reformat(mrufs, ...)$/;"	f
refreshCurrent	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:refreshCurrent(node)$/;"	f
refreshRoot	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:refreshRoot()$/;"	f
regexfilter	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:regexfilter(str)$/;"	f
regisfilter	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:regisfilter(reg)$/;"	f
register_builtin_method	jedi/jedi/evaluate/iterable.py	/^def register_builtin_method(method_name, type=None):$/;"	f
registered_breakpoints	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    registered_breakpoints = RegisteredBpDict()$/;"	v	class:ConqueGdb
release	jedi/docs/conf.py	/^release = jedi.__version__$/;"	v
remarksigns	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:remarksigns()$/;"	f
remove_all_signs	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    def remove_all_signs(self):$/;"	m	class:ConqueGdb
remove_last_newline	jedi/jedi/parser/__init__.py	/^    def remove_last_newline(self):$/;"	m	class:Parser
remove_last_newline	jedi/jedi/parser/fast.py	/^    def remove_last_newline(self):$/;"	m	class:ParserNode
remove_sign	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    def remove_sign(self, id, line):$/;"	m	class:ConqueGdb
ren	jedi/test/completion/on_import.py	/^from . import import_tree as ren$/;"	i
rename	jedi/jedi/refactoring.py	/^def rename(script, new_name):$/;"	f
report	jedi/jedi/parser/pgen2/grammar.py	/^    def report(self):$/;"	m	class:Grammar
report	jedi/test/run.py	/^    def report(case, actual, desired):$/;"	f
representation	jedi/test/test_evaluate/test_compiled.py	/^from jedi.evaluate import compiled, representation$/;"	i
reraise	jedi/jedi/_compatibility.py	/^    def reraise(exception, traceback):$/;"	f
reraise	jedi/jedi/common.py	/^from jedi._compatibility import unicode, reraise$/;"	i
reraise_uncaught	jedi/jedi/common.py	/^def reraise_uncaught(func):$/;"	f
res	Conque-GDB/autoload/conque_term/conque_sole_communicator.py	/^        res = proc.open(cmd_line, mem_key, options)$/;"	v
res	jedi/test/completion/dynamic_arrays.py	/^res = add_to_arr(arr3, 1)$/;"	v
reset_caches	jedi/jedi/parser/fast.py	/^    def reset_caches(self):$/;"	m	class:FastModule
reset_console	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    def reset_console(self, buf_info, add_block=True):$/;"	m	class:ConqueSoleSubprocess
reset_node	jedi/jedi/parser/fast.py	/^    def reset_node(self):$/;"	m	class:ParserNode
reset_recursion_limitations	jedi/jedi/evaluate/__init__.py	/^    def reset_recursion_limitations(self):$/;"	m	class:Evaluator
reset_registered_breakpoints	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    def reset_registered_breakpoints(self):$/;"	m	class:ConqueGdb
reset_size	Conque-GDB/autoload/conque_term/conque_screen.py	/^    def reset_size(self, line):$/;"	m	class:ConqueScreen
reset_time	jedi/jedi/debug.py	/^def reset_time():$/;"	f
reset_untracked_cache	vim-airline/autoload/airline/extensions/branch.vim	/^function! s:reset_untracked_cache(shellcmdpost)$/;"	f
resets_positions	jedi/jedi/api/interpreter.py	/^    resets_positions = True$/;"	v	class:MixedModule
resolution	jedi/test/completion/on_import.py	/^from datetime.timedelta import resolution$/;"	i
resolve_implicit_imports	jedi/jedi/evaluate/__init__.py	/^        def resolve_implicit_imports(names):$/;"	f	function:Evaluator.goto
resource	jedi/scripts/wx_check.py	/^import resource$/;"	i
response	jedi/test/completion/usages.py	/^response = 5$/;"	v
response	jedi/test/completion/usages.py	/^response = HttpResponse(mimetype='application\/pdf')$/;"	v
restore	Conque-GDB/autoload/conque_gdb.vim	/^function! s:restore()$/;"	f
restore	jedi/conftest.py	/^    def restore():$/;"	f	function:clean_jedi_cache
result	jedi/jedi/evaluate/sys_path.py	/^    c = "import os; from os.path import *; result=%s"$/;"	i
result	jedi/test/completion/lambdas.py	/^result = arg_l(*args)$/;"	v
resume	Conque-GDB/autoload/conque_term/conque.py	/^    def resume(self):$/;"	m	class:Conque
resume	Conque-GDB/autoload/conque_term/conque_sole.py	/^    def resume(self):$/;"	m	class:ConqueSole
resume	Conque-GDB/autoload/conque_term/conque_sole_wrapper.py	/^    def resume(self):$/;"	m	class:ConqueSoleWrapper
ret	jedi/test/completion/basic.py	/^def ret(a):$/;"	f
ret	jedi/test/completion/classes.py	/^    def ret(self):$/;"	m	class:V
ret	jedi/test/completion/classes.py	/^    def ret(self, a1):$/;"	m	class:TestClass
ret	jedi/test/completion/classes.py	/^    def ret(self, b):$/;"	m	class:Base
ret	jedi/test/completion/decorators.py	/^    def ret(self):$/;"	m	class:A
ret	jedi/test/completion/descriptors.py	/^    def ret(self):$/;"	m	class:PropClass
ret	jedi/test/completion/descriptors.py	/^    def ret(self, value):$/;"	m	class:PropClass
ret	jedi/test/completion/lambdas.py	/^    def ret(a, b):$/;"	f	function:xy
ret	jedi/test/completion/lambdas.py	/^    def ret(self):$/;"	m	class:C
ret2	jedi/test/completion/descriptors.py	/^    def ret2(self):$/;"	m	class:PropClass
ret2	jedi/test/completion/descriptors.py	/^    ret2 = property(ret2)$/;"	v	class:PropClass
return_annotation_and_docstring	jedi/test/completion/pep0484.py	/^def return_annotation_and_docstring() -> str:$/;"	f
return_annotation_and_docstring_different	jedi/test/completion/pep0484.py	/^def return_annotation_and_docstring_different() -> str:$/;"	f
return_custom_class	jedi/test/completion/pep0484.py	/^def return_custom_class() -> A:$/;"	f
return_module_object	jedi/test/completion/docstring.py	/^def return_module_object():$/;"	f
return_none	jedi/test/completion/pep0484.py	/^def return_none() -> None:$/;"	f
return_one	jedi/test/static_analysis/attribute_error.py	/^def return_one(something):$/;"	f
return_str	jedi/test/completion/pep0484.py	/^def return_str() -> str:$/;"	f
return_str_type	jedi/test/completion/pep0484.py	/^def return_str_type():$/;"	f
return_sup	jedi/test/completion/classes.py	/^    def return_sup(self):$/;"	m	class:Super
return_sup	jedi/test/completion/classes.py	/^    def return_sup(self):$/;"	m	class:TestSuper
return_unspecified	jedi/test/completion/pep0484.py	/^def return_unspecified():$/;"	f
returns	jedi/jedi/evaluate/representation.py	/^    def returns(self):$/;"	m	class:FunctionExecution
returns	jedi/jedi/parser/tree.py	/^    def returns(self):$/;"	m	class:Scope
reuseWin	nerdtree/autoload/nerdtree.vim	/^function! s:reuseWin(dir) abort$/;"	f
root_dir	jedi/test/helpers.py	/^root_dir = dirname(test_dir)$/;"	v
row	jedi/test/completion/stdlib.py	/^row = c.fetchall()[0]$/;"	v
rparam	jedi/test/completion/docstring.py	/^def rparam(a,b):$/;"	f
run	jedi/jedi/evaluate/recursion.py	/^    def run(evaluator, stmt, *args, **kwargs):$/;"	f	function:recursion_decorator
run	jedi/jedi/evaluate/recursion.py	/^    def run(execution, **kwargs):$/;"	f	function:execution_recursion_decorator
run	jedi/scripts/profile.py	/^def run(code, index):$/;"	f
run	jedi/scripts/wx_check.py	/^def run():$/;"	f
run	jedi/sith.py	/^    def run(self, debugger, record=None, print_result=False):$/;"	m	class:TestCase
run	jedi/test/completion/imports.py	/^from . import run$/;"	i
run	jedi/test/completion/on_import.py	/^from .. import run$/;"	i
run	jedi/test/conftest.py	/^    def run(self, compare_cb):$/;"	m	class:StaticAnalysisCase
run	jedi/test/conftest.py	/^from . import run$/;"	i
run	jedi/test/refactor.py	/^    def run(self):$/;"	m	class:RefactoringCase
run	jedi/test/run.py	/^    def run(self, compare_cb):$/;"	m	class:IntegrationTestCase
run	jedi/test/test_api/test_classes.py	/^    def run(rest_source):$/;"	f	function:test_added_equals_to_params
run_completion	jedi/test/run.py	/^    def run_completion(self, compare_cb):$/;"	m	class:IntegrationTestCase
run_goto_assignments	jedi/test/run.py	/^    def run_goto_assignments(self, compare_cb):$/;"	m	class:IntegrationTestCase
run_goto_definitions	jedi/test/run.py	/^    def run_goto_definitions(self, compare_cb):$/;"	m	class:IntegrationTestCase
run_usages	jedi/test/run.py	/^    def run_usages(self, compare_cb):$/;"	m	class:IntegrationTestCase
rw_prop	jedi/test/completion/usages.py	/^    def rw_prop(self):$/;"	m	class:TestProperty
rw_prop	jedi/test/completion/usages.py	/^    def rw_prop(self, value):$/;"	m	class:TestProperty
s	jedi/jedi/evaluate/imports.py	/^        debug.speed('import %s' % (import_path,))$/;"	i
s	jedi/jedi/evaluate/sys_path.py	/^    c = "import os; from os.path import *; result=%s"$/;"	i
s	jedi/test/completion/descriptors.py	/^    def s(cls, x):$/;"	m	class:E
s	jedi/test/completion/descriptors.py	/^    s = classmethod(s)$/;"	v	class:E
s	jedi/test/completion/dynamic_arrays.py	/^s = set(lst)$/;"	v
s	jedi/test/completion/flow_analysis.py	/^    s = str()$/;"	v
s	vim-airline/t/section.vim	/^    let s = airline#section#create(['asdf', 'func'])$/;"	v
s	vim-airline/t/section.vim	/^    let s = airline#section#create(['conditional'])$/;"	v
s	vim-airline/t/section.vim	/^    let s = airline#section#create(['hi'])$/;"	v
s	vim-airline/t/section.vim	/^    let s = airline#section#create(['paste'])$/;"	v
s	vim-airline/t/section.vim	/^    let s = airline#section#create(['text', 'raw', 'func'])$/;"	v
s	vim-airline/t/section.vim	/^    let s = airline#section#create(['whitespace'])$/;"	v
s	vim-airline/t/section.vim	/^    let s = airline#section#create_left(['asdf', 'aaaa', 'raw'])$/;"	v
s	vim-airline/t/section.vim	/^    let s = airline#section#create_left(['asdf', 'raw'])$/;"	v
s	vim-airline/t/section.vim	/^    let s = airline#section#create_left(['text', 'text'])$/;"	v
s	vim-airline/t/section.vim	/^    let s = airline#section#create_right(['%t', 'asdf', '%{getcwd()}'])$/;"	v
s	vim-airline/t/section.vim	/^    let s = airline#section#create_right(['ffenc','%{strftime("%H:%M")}'])$/;"	v
s	vim-airline/t/section.vim	/^    let s = airline#section#create_right(['raw', '%f'])$/;"	v
s	vim-airline/t/section.vim	/^    let s = airline#section#create_right(['text', 'text'])$/;"	v
s:Bookmark	nerdtree/lib/nerdtree/bookmark.vim	/^let s:Bookmark = {}$/;"	v
s:Creator	nerdtree/lib/nerdtree/creator.vim	/^let s:Creator = {}$/;"	v
s:Event	nerdtree/lib/nerdtree/event.vim	/^let s:Event = {}$/;"	v
s:FlagSet	nerdtree/lib/nerdtree/flag_set.vim	/^let s:FlagSet = {}$/;"	v
s:I1	vim-airline/autoload/airline/themes/dark.vim	/^let s:I1 = [ '#00005f' , '#00dfff' , 17  , 45  ]$/;"	v
s:I2	vim-airline/autoload/airline/themes/dark.vim	/^let s:I2 = [ '#ffffff' , '#005fff' , 255 , 27  ]$/;"	v
s:I3	vim-airline/autoload/airline/themes/dark.vim	/^let s:I3 = [ '#ffffff' , '#000080' , 15  , 17  ]$/;"	v
s:IA1	vim-airline/autoload/airline/themes/dark.vim	/^let s:IA1 = [ '#4e4e4e' , '#1c1c1c' , 239 , 234 , '' ]$/;"	v
s:IA2	vim-airline/autoload/airline/themes/dark.vim	/^let s:IA2 = [ '#4e4e4e' , '#262626' , 239 , 235 , '' ]$/;"	v
s:IA3	vim-airline/autoload/airline/themes/dark.vim	/^let s:IA3 = [ '#4e4e4e' , '#303030' , 239 , 236 , '' ]$/;"	v
s:KeyMap	nerdtree/lib/nerdtree/key_map.vim	/^let s:KeyMap = {}$/;"	v
s:MenuController	nerdtree/lib/nerdtree/menu_controller.vim	/^let s:MenuController = {}$/;"	v
s:MenuItem	nerdtree/lib/nerdtree/menu_item.vim	/^let s:MenuItem = {}$/;"	v
s:N1	vim-airline/autoload/airline/themes/dark.vim	/^let s:N1   = [ '#00005f' , '#dfff00' , 17  , 190 ]$/;"	v
s:N2	vim-airline/autoload/airline/themes/dark.vim	/^let s:N2   = [ '#ffffff' , '#444444' , 255 , 238 ]$/;"	v
s:N3	vim-airline/autoload/airline/themes/dark.vim	/^let s:N3   = [ '#9cffd3' , '#202020' , 85  , 234 ]$/;"	v
s:NERDTree	nerdtree/lib/nerdtree/nerdtree.vim	/^let s:NERDTree = {}$/;"	v
s:NERDTreeSortStarIndex	nerdtree/lib/nerdtree/path.vim	/^let s:NERDTreeSortStarIndex = index(g:NERDTreeSortOrder, '*')$/;"	v
s:Notifier	nerdtree/lib/nerdtree/notifier.vim	/^let s:Notifier = {}$/;"	v
s:Opener	nerdtree/lib/nerdtree/opener.vim	/^let s:Opener = {}$/;"	v
s:Path	nerdtree/lib/nerdtree/path.vim	/^let s:Path = {}$/;"	v
s:SCRIPT_DIR	Conque-GDB/autoload/conque_gdb.vim	/^let s:SCRIPT_DIR = expand("<sfile>:h") . '\/conque_gdb\/'$/;"	v
s:SIGN_DISABLED	Conque-GDB/autoload/conque_gdb.vim	/^let s:SIGN_DISABLED = 'conque_gdb_break_disabled'$/;"	v
s:SIGN_ENABLED	Conque-GDB/autoload/conque_gdb.vim	/^let s:SIGN_ENABLED = 'conque_gdb_break_enabled'$/;"	v
s:SIGN_POINTER	Conque-GDB/autoload/conque_gdb.vim	/^let s:SIGN_POINTER = 'conque_gdb_sign_pointer'$/;"	v
s:SIGN_POINTER_VAL	Conque-GDB/autoload/conque_gdb.vim	/^let s:SIGN_POINTER_VAL = 15605$/;"	v
s:TreeDirNode	nerdtree/lib/nerdtree/tree_dir_node.vim	/^let s:TreeDirNode = copy(g:NERDTreeFileNode)$/;"	v
s:TreeFileNode	nerdtree/lib/nerdtree/tree_file_node.vim	/^let s:TreeFileNode = {}$/;"	v
s:UI	nerdtree/lib/nerdtree/ui.vim	/^let s:UI = {}$/;"	v
s:V1	vim-airline/autoload/airline/themes/dark.vim	/^let s:V1 = [ '#000000' , '#ffaf00' , 232 , 214 ]$/;"	v
s:V2	vim-airline/autoload/airline/themes/dark.vim	/^let s:V2 = [ '#000000' , '#ff5f00' , 232 , 202 ]$/;"	v
s:V3	vim-airline/autoload/airline/themes/dark.vim	/^let s:V3 = [ '#ffffff' , '#5f0000' , 15  , 52  ]$/;"	v
s:accents	vim-airline/autoload/airline/highlighter.vim	/^let s:accents = {}$/;"	v
s:active_winnr	vim-airline/autoload/airline/extensions.vim	/^let s:active_winnr = -1$/;"	v
s:airline_initialized	vim-airline/plugin/airline.vim	/^let s:airline_initialized = 0$/;"	v
s:airline_tagbar_last_lookup_time	vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:airline_tagbar_last_lookup_time = 0$/;"	v
s:airline_tagbar_last_lookup_val	vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:airline_tagbar_last_lookup_val = ''$/;"	v
s:ars	ctrlp.vim/autoload/ctrlp/dir.vim	/^let s:ars = ['s:maxdepth', 's:maxfiles', 's:compare_lim', 's:glob', 's:caching']$/;"	v
s:basic16	vim-airline/autoload/airline/msdos.vim	/^let s:basic16 = [$/;"	v
s:bins	ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let s:bins = [$/;"	v
s:buf_min_count	vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^let s:buf_min_count = get(g:, 'airline#extensions#tabline#buffer_min_count', 0)$/;"	v
s:buf_modified_symbol	vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^let s:buf_modified_symbol = g:airline_symbols.modified$/;"	v
s:buf_nr_format	vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^let s:buf_nr_format = get(g:, 'airline#extensions#tabline#buffer_nr_format', '%s: ')$/;"	v
s:buf_nr_show	vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^let s:buf_nr_show = get(g:, 'airline#extensions#tabline#buffer_nr_show', 0)$/;"	v
s:buffer_idx_mode	vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:buffer_idx_mode = get(g:, 'airline#extensions#tabline#buffer_idx_mode', 0)$/;"	v
s:buffers_label	vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:buffers_label = get(g:, 'airline#extensions#tabline#buffers_label', 'buffers')$/;"	v
s:buffers_label	vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:buffers_label = get(g:, 'airline#extensions#tabline#buffers_label', 'buffers')$/;"	v
s:builder	vim-airline/t/builder.vim	/^    let s:builder = airline#builder#new({'active': 0})$/;"	v
s:builder	vim-airline/t/builder.vim	/^    let s:builder = airline#builder#new({'active': 1})$/;"	v
s:builder	vim-airline/t/extensions_default.vim	/^    let s:builder = airline#builder#new({'active': 1})$/;"	v
s:c_like_langs	vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:c_like_langs = get(g:, 'airline#extensions#c_like_langs', [ 'c', 'cpp', 'cuda', 'go', 'javascript', 'ld', 'php' ])$/;"	v
s:ccex	ctrlp.vim/autoload/ctrlp.vim	/^let s:ccex = s:pref.'clear_cache_on_exit'$/;"	v
s:close_symbol	vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:close_symbol = get(g:, 'airline#extensions#tabline#close_symbol', 'X')$/;"	v
s:color_template	vim-airline/autoload/airline/extensions/ctrlp.vim	/^let s:color_template = get(g:, 'airline#extensions#ctrlp#color_template', 'insert')$/;"	v
s:color_template	vim-airline/autoload/airline/extensions/promptline.vim	/^let s:color_template = get(g:, 'airline#extensions#promptline#color_template', 'normal')$/;"	v
s:color_template	vim-airline/autoload/airline/extensions/tmuxline.vim	/^let s:color_template = get(g:, 'airline#extensions#tmuxline#color_template', 'normal')$/;"	v
s:column_display	vim-airline/autoload/airline/extensions/csv.vim	/^let s:column_display = get(g:, 'airline#extensions#csv#column_display', 'Number')$/;"	v
s:compare_lim	ctrlp.vim/autoload/ctrlp.vim	/^let s:compare_lim = 3000$/;"	v
s:contexts	vim-airline/autoload/airline.vim	/^let s:contexts = {}$/;"	v
s:core_funcrefs	vim-airline/autoload/airline.vim	/^let s:core_funcrefs = [$/;"	v
s:ctrlspace	vim-airline/autoload/airline/extensions/tabline.vim	/^let s:ctrlspace = get(g:, 'CtrlSpaceLoaded', 0)$/;"	v
s:current_bufnr	vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_bufnr = -1$/;"	v
s:current_bufnr	vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:current_bufnr = -1$/;"	v
s:current_bufnr	vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:current_bufnr = -1$/;"	v
s:current_modified	vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_modified = 0$/;"	v
s:current_modified	vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:current_modified = 0$/;"	v
s:current_tabcnt	vim-airline/autoload/airline/extensions/tabline.vim	/^let s:current_tabcnt = -1$/;"	v
s:current_tabline	vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_tabline = ''$/;"	v
s:current_tabline	vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:current_tabline = ''$/;"	v
s:current_tabnr	vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:current_tabnr = -1$/;"	v
s:current_tabnr	vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:current_tabnr = -1$/;"	v
s:current_visible_buffers	vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_visible_buffers = []$/;"	v
s:default_checks	vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:default_checks = ['indent', 'trailing', 'mixed-indent-file']$/;"	v
s:dirArrows	nerdtree/syntax/nerdtree.vim	/^let s:dirArrows = escape(g:NERDTreeDirArrowCollapsible, '~]\\-').escape(g:NERDTreeDirArrowExpandable, '~]\\-')$/;"	v
s:dircounts	ctrlp.vim/autoload/ctrlp/dir.vim	/^let s:dircounts = {}$/;"	v
s:enabled	vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:enabled = get(g:, 'airline#extensions#whitespace#enabled', 1)$/;"	v
s:error_symbol	vim-airline/autoload/airline/extensions/ale.vim	/^let s:error_symbol = get(g:, 'airline#extensions#ale#error_symbol', 'E:')$/;"	v
s:error_symbol	vim-airline/autoload/airline/extensions/neomake.vim	/^let s:error_symbol = get(g:, 'airline#extensions#neomake#error_symbol', 'E:')$/;"	v
s:error_symbol	vim-airline/autoload/airline/extensions/ycm.vim	/^let s:error_symbol = get(g:, 'airline#extensions#ycm#error_symbol', 'E:')$/;"	v
s:ext	vim-airline/autoload/airline/extensions.vim	/^let s:ext = {}$/;"	v
s:ext	vim-airline/autoload/airline/extensions.vim	/^let s:ext._theme_funcrefs = []$/;"	v
s:ficounts	ctrlp.vim/autoload/ctrlp.vim	/^let s:ficounts = {}$/;"	v
s:filecounts	ctrlp.vim/autoload/ctrlp/rtscript.vim	/^let s:filecounts = {}$/;"	v
s:filetype_overrides	vim-airline/autoload/airline/extensions.vim	/^let s:filetype_overrides = {$/;"	v
s:filetype_regex_overrides	vim-airline/autoload/airline/extensions.vim	/^let s:filetype_regex_overrides = {}$/;"	v
s:flags	vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:flags = get(g:, 'airline#extensions#tagbar#flags', '')$/;"	v
s:fnamecollapse	vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^let s:fnamecollapse = get(g:, 'airline#extensions#tabline#fnamecollapse', 1)$/;"	v
s:fnametruncate	vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^let s:fnametruncate = get(g:, 'airline#extensions#tabline#fnametruncate', 0)$/;"	v
s:format	vim-airline/autoload/airline/extensions/wordcount.vim	/^let s:format = get(g:, 'airline#extensions#wordcount#format', '%d words')$/;"	v
s:formatter	vim-airline/autoload/airline/extensions/tabline.vim	/^let s:formatter = get(g:, 'airline#extensions#tabline#formatter', 'default')$/;"	v
s:formatter	vim-airline/autoload/airline/extensions/wordcount.vim	/^let s:formatter = get(g:, 'airline#extensions#wordcount#formatter', 'default')$/;"	v
s:fpats	ctrlp.vim/autoload/ctrlp.vim	/^let s:fpats = {$/;"	v
s:gdb	Conque-GDB/autoload/conque_gdb.vim	/^let s:gdb = {'idx': 1, 'active': 0, 'buffer_number': -1}$/;"	v
s:gdb_command	Conque-GDB/autoload/conque_gdb.vim	/^let s:gdb_command = ''$/;"	v
s:git_dirs	vim-airline/autoload/airline/extensions/branch.vim	/^let s:git_dirs = {}$/;"	v
s:glbs	ctrlp.vim/autoload/ctrlp.vim	/^let s:glbs = { 'magic': 1, 'to': 1, 'tm': 0, 'sb': 1, 'hls': 0, 'im': 0,$/;"	v
s:has_async	vim-airline/autoload/airline/extensions/branch.vim	/^let s:has_async = airline#util#async$/;"	v
s:has_async	vim-airline/autoload/airline/extensions/po.vim	/^let s:has_async = airline#util#async$/;"	v
s:has_fugitive	vim-airline/autoload/airline/extensions/branch.vim	/^let s:has_fugitive = exists('*fugitive#head')$/;"	v
s:has_lawrencium	vim-airline/autoload/airline/extensions/branch.vim	/^let s:has_lawrencium = exists('*lawrencium#statusline')$/;"	v
s:has_vcscommand	vim-airline/autoload/airline/extensions/branch.vim	/^let s:has_vcscommand = get(g:, 'airline#extensions#branch#use_vcscommand', 0) && exists('*VCSCommandGetStatusLine')$/;"	v
s:head_format	vim-airline/autoload/airline/extensions/branch.vim	/^let s:head_format = get(g:, 'airline#extensions#branch#format', 0)$/;"	v
s:hlgrps	ctrlp.vim/autoload/ctrlp.vim	/^let s:hlgrps = {$/;"	v
s:hooks	Conque-GDB/autoload/conque_term.vim	/^let s:hooks = { 'after_startup': [], 'buffer_enter': [], 'buffer_leave': [], 'after_keymap': [], 'after_close': [] }$/;"	v
s:hunk_symbols	vim-airline/autoload/airline/extensions/hunks.vim	/^let s:hunk_symbols = get(g:, 'airline#extensions#hunks#hunk_symbols', ['+', '~', '-'])$/;"	v
s:id	ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	ctrlp.vim/autoload/ctrlp/changes.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	ctrlp.vim/autoload/ctrlp/dir.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	ctrlp.vim/autoload/ctrlp/line.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	ctrlp.vim/autoload/ctrlp/mixed.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	ctrlp.vim/autoload/ctrlp/quickfix.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	ctrlp.vim/autoload/ctrlp/rtscript.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	ctrlp.vim/autoload/ctrlp/tag.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	ctrlp.vim/autoload/ctrlp/undo.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:ignore_bufadd_pat	vim-airline/autoload/airline/extensions/tabline.vim	/^let s:ignore_bufadd_pat = get(g:, 'airline#extensions#tabline#ignore_bufadd_pat', '\\c\\vgundo|undotree|vimfiler|tagbar|nerd_tree')$/;"	v
s:inactive_funcrefs	vim-airline/autoload/airline.vim	/^let s:inactive_funcrefs = []$/;"	v
s:indent_algo	vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:indent_algo = get(g:, 'airline#extensions#whitespace#mixed_indent_algo', 0)$/;"	v
s:initialized	Conque-GDB/autoload/conque_term.vim	/^let s:initialized = 0$/;"	v
s:is_gdb_startup	Conque-GDB/autoload/conque_gdb.vim	/^let s:is_gdb_startup = 0$/;"	v
s:is_win32term	vim-airline/autoload/airline/highlighter.vim	/^let s:is_win32term = (has('win32') || has('win64')) && !has('gui_running') && (empty($CONEMUBUILD) || &term !=? 'xterm')$/;"	v
s:jobs	vim-airline/autoload/airline/extensions/branch.vim	/^  let s:jobs = {}$/;"	v
s:jobs	vim-airline/autoload/airline/extensions/po.vim	/^  let s:jobs = {}$/;"	v
s:kprange	ctrlp.vim/autoload/ctrlp.vim	/^let s:kprange = {$/;"	v
s:layout	vim-airline/autoload/airline/extensions/default.vim	/^let s:layout = get(g:, 'airline#extensions#default#layout', [$/;"	v
s:loaded	vim-airline/autoload/airline/init.vim	/^let s:loaded = 0$/;"	v
s:long_format	vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:long_format = get(g:, 'airline#extensions#whitespace#long_format', 'long[%s]')$/;"	v
s:max_lines	vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:max_lines = get(g:, 'airline#extensions#whitespace#max_lines', 20000)$/;"	v
s:mixed_indent_file_format	vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:mixed_indent_file_format = get(g:, 'airline#extensions#whitespace#mixed_indent_file_format', 'mix-indent-file[%s]')$/;"	v
s:mixed_indent_format	vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:mixed_indent_format = get(g:, 'airline#extensions#whitespace#mixed_indent_format', 'mixed-indent[%s]')$/;"	v
s:non_zero_only	vim-airline/autoload/airline/extensions/hunks.vim	/^let s:non_zero_only = get(g:, 'airline#extensions#hunks#non_zero_only', 0)$/;"	v
s:number_map	vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:number_map = &encoding == 'utf-8'$/;"	v
s:number_map	vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:number_map = {$/;"	v
s:old_cpo	nerdtree/plugin/NERD_tree.vim	/^let s:old_cpo = &cpo$/;"	v
s:opened_buffers	Conque-GDB/autoload/conque_gdb.vim	/^let s:opened_buffers = {}$/;"	v
s:orig_gdb_path	Conque-GDB/autoload/conque_gdb.vim	/^let s:orig_gdb_path = g:ConqueGdb_GdbExe$/;"	v
s:overwrite	vim-airline/autoload/airline/extensions/bufferline.vim	/^let s:overwrite = get(g:, 'airline#extensions#bufferline#overwrite_variables', 1)$/;"	v
s:padding	vim-airline/autoload/airline/extensions/ctrlspace.vim	/^let s:padding = s:spc . s:spc . s:spc$/;"	v
s:parts	vim-airline/autoload/airline/parts.vim	/^let s:parts = {}$/;"	v
s:pbmenu_wait	PopupBuffer.vim/plugin/PopupBuffer.vim	/^let s:pbmenu_wait = 1$/;"	v
s:platform	Conque-GDB/autoload/conque_gdb.vim	/^let s:platform = ''$/;"	v
s:prompt_snapshot_file	vim-airline/autoload/airline/extensions/promptline.vim	/^let s:prompt_snapshot_file = get(g:, 'airline#extensions#promptline#snapshot_file', '')$/;"	v
s:prototype	vim-airline/autoload/airline/builder.vim	/^let s:prototype = {}$/;"	v
s:py	Conque-GDB/autoload/conque_gdb.vim	/^let s:py = ''$/;"	v
s:reset_updatetime	Conque-GDB/autoload/conque_term.vim	/^let s:reset_updatetime = 1$/;"	v
s:save_updatetime	Conque-GDB/autoload/conque_term.vim	/^let s:save_updatetime = &updatetime$/;"	v
s:saved_terminals	Conque-GDB/autoload/conque_term.vim	/^        let s:saved_terminals = {}$/;"	v
s:script_path	vim-airline/autoload/airline/extensions.vim	/^let s:script_path = tolower(resolve(expand('<sfile>:p:h')))$/;"	v
s:scriptdir	Conque-GDB/autoload/conque_term.vim	/^let s:scriptdir = expand("<sfile>:h") . '\/'$/;"	v
s:scriptdirpy	Conque-GDB/autoload/conque_term.vim	/^let s:scriptdirpy = expand("<sfile>:h") . '\/conque_term\/'$/;"	v
s:section_truncate_width	vim-airline/autoload/airline/extensions/default.vim	/^let s:section_truncate_width = get(g:, 'airline#extensions#default#section_truncate_width', {$/;"	v
s:section_use_groups	vim-airline/autoload/airline/extensions/default.vim	/^let s:section_use_groups     = get(g:, 'airline#extensions#default#section_use_groupitems', 1)$/;"	v
s:sections	vim-airline/autoload/airline.vim	/^let s:sections = ['a','b','c','gutter','x','y','z', 'error', 'warning']$/;"	v
s:sections	vim-airline/t/init.vim	/^let s:sections = ['a', 'b', 'c', 'gutter', 'x', 'y', 'z', 'warning']$/;"	v
s:separators	vim-airline/autoload/airline/highlighter.vim	/^let s:separators = {}$/;"	v
s:show_buffers	vim-airline/autoload/airline/extensions/tabline.vim	/^let s:show_buffers = get(g:, 'airline#extensions#tabline#show_buffers', 1)$/;"	v
s:show_buffers	vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^let s:show_buffers = get(g:, 'airline#extensions#tabline#show_buffers', 1)$/;"	v
s:show_buffers	vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:show_buffers = get(g:, 'airline#extensions#tabline#show_buffers', 1)$/;"	v
s:show_close_button	vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:show_close_button = get(g:, 'airline#extensions#tabline#show_close_button', 1)$/;"	v
s:show_message	vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:show_message = get(g:, 'airline#extensions#whitespace#show_message', 1)$/;"	v
s:show_splits	vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:show_splits = get(g:, 'airline#extensions#tabline#show_splits', 1)$/;"	v
s:show_tab_nr	vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:show_tab_nr = get(g:, 'airline#extensions#tabline#show_tab_nr', 1)$/;"	v
s:show_tab_type	vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:show_tab_type = get(g:, 'airline#extensions#tabline#show_tab_type', 1)$/;"	v
s:show_tab_type	vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:show_tab_type = get(g:, 'airline#extensions#tabline#show_tab_type', 1)$/;"	v
s:show_tabs	vim-airline/autoload/airline/extensions/tabline.vim	/^let s:show_tabs = get(g:, 'airline#extensions#tabline#show_tabs', 1)$/;"	v
s:show_tabs	vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:show_tabs = get(g:, 'airline#extensions#tabline#show_tabs', 1)$/;"	v
s:sign_file	Conque-GDB/autoload/conque_gdb.vim	/^let s:sign_file = ''$/;"	v
s:sign_line	Conque-GDB/autoload/conque_gdb.vim	/^let s:sign_line = -1$/;"	v
s:sign_pointer_id	Conque-GDB/autoload/conque_gdb.vim	/^let s:sign_pointer_id = s:SIGN_POINTER_VAL$/;"	v
s:skip_check_ft	vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:skip_check_ft = {'make': ['indent', 'mixed-indent-file'] }$/;"	v
s:skip_symbol	vim-airline/autoload/airline/extensions/tabline/formatters/unique_tail_improved.vim	/^let s:skip_symbol = '…'$/;"	v
s:sortKeyFormat	nerdtree/lib/nerdtree/path.vim	/^    let s:sortKeyFormat = "%0" . float2nr(ceil(log10(len(g:NERDTreeSortOrder)))) . "d"$/;"	v
s:sortKeyFormat	nerdtree/lib/nerdtree/path.vim	/^    let s:sortKeyFormat = "%04d"$/;"	v
s:spc	vim-airline/autoload/airline/extensions/ctrlspace.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	vim-airline/autoload/airline/extensions/example.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	vim-airline/autoload/airline/extensions/obsession.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	vim-airline/autoload/airline/extensions/virtualenv.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	vim-airline/autoload/airline/extensions/windowswap.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	vim-airline/autoload/airline/extensions/ycm.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	vim-airline/autoload/airline/section.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	vim-airline/autoload/airline/util.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:src_buf	Conque-GDB/autoload/conque_gdb.vim	/^let s:src_buf = -1$/;"	v
s:src_bufwin	Conque-GDB/autoload/conque_gdb.vim	/^let s:src_bufwin = -1$/;"	v
s:switch_buffers_and_tabs	vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:switch_buffers_and_tabs = get(g:, 'airline#extensions#tabline#switch_buffers_and_tabs', 0)$/;"	v
s:symbol	vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:symbol = get(g:, 'airline#extensions#whitespace#symbol', g:airline_symbols.whitespace)$/;"	v
s:tab_min_count	vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^let s:tab_min_count = get(g:, 'airline#extensions#tabline#tab_min_count', 0)$/;"	v
s:tab_nr_type	vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:tab_nr_type = get(g:, 'airline#extensions#tabline#tab_nr_type', 0)$/;"	v
s:taboo	vim-airline/autoload/airline/extensions/tabline.vim	/^let s:taboo = get(g:, 'airline#extensions#taboo#enabled', 1) && get(g:, 'loaded_taboo', 0)$/;"	v
s:tabs_label	vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:tabs_label = get(g:, 'airline#extensions#tabline#tabs_label', 'tabs')$/;"	v
s:tabs_label	vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:tabs_label = get(g:, 'airline#extensions#tabline#tabs_label', 'tabs')$/;"	v
s:term_count	Conque-GDB/autoload/conque_term.vim	/^let s:term_count = 0$/;"	v
s:term_obj	Conque-GDB/autoload/conque_term.vim	/^let s:term_obj = {'idx': 1, 'var': '', 'is_buffer': 1, 'active': 1, 'buffer_name': '', 'buffer_number' : -1, 'command': ''}$/;"	v
s:term_object	Conque-GDB/autoload/conque_gdb.vim	/^let s:term_object = ''$/;"	v
s:text	ctrlp.vim/autoload/ctrlp/undo.vim	/^let s:text = map(['second', 'seconds', 'minutes', 'hours', 'days', 'weeks',$/;"	v
s:tmuxline_snapshot_file	vim-airline/autoload/airline/extensions/tmuxline.vim	/^let s:tmuxline_snapshot_file = get(g:, 'airline#extensions#tmuxline#snapshot_file', '')$/;"	v
s:trailing_format	vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:trailing_format = get(g:, 'airline#extensions#whitespace#trailing_format', 'trailing[%s]')$/;"	v
s:tree_up_dir_line	nerdtree/syntax/nerdtree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:types	ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let s:types = {$/;"	v
s:vcs_config	vim-airline/autoload/airline/extensions/branch.vim	/^let s:vcs_config = {$/;"	v
s:warning_symbol	vim-airline/autoload/airline/extensions/ale.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#ale#warning_symbol', 'W:')$/;"	v
s:warning_symbol	vim-airline/autoload/airline/extensions/neomake.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#neomake#warning_symbol', 'W:')$/;"	v
s:warning_symbol	vim-airline/autoload/airline/extensions/ycm.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#ycm#warning_symbol', 'W:')$/;"	v
s:wig_cond	ctrlp.vim/autoload/ctrlp/utils.vim	/^let s:wig_cond = v:version > 702 || ( v:version == 702 && has('patch051') )$/;"	v
s:windows_vk	Conque-GDB/autoload/conque_term.vim	/^let s:windows_vk = {$/;"	v
safe_property	jedi/jedi/common.py	/^def safe_property(func):$/;"	f
safe_property	jedi/jedi/evaluate/iterable.py	/^from jedi.common import unite, safe_property$/;"	i
same_func	jedi/test/completion/decorators.py	/^def same_func(func):$/;"	f
samerootsyml	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:samerootsyml(each, isfile, cwd)$/;"	f
sample_int	jedi/test/helpers.py	/^sample_int = 1  # This is used in completion\/imports.py$/;"	v
sanstail	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:sanstail(str)$/;"	f
save_parser	jedi/jedi/api/__init__.py	/^from jedi.parser.utils import save_parser$/;"	i
save_parser	jedi/jedi/evaluate/imports.py	/^from jedi.parser.utils import save_parser, load_parser, parser_cache$/;"	i
save_parser	jedi/jedi/evaluate/sys_path.py	/^from jedi.parser.utils import load_parser, save_parser$/;"	i
save_parser	jedi/jedi/parser/utils.py	/^    def save_parser(self, path, parser_cache_item):$/;"	m	class:ParserPickling
save_parser	jedi/jedi/parser/utils.py	/^def save_parser(path, parser, pickling=True):$/;"	f
save_parser	jedi/test/test_parser/test_fast_parser.py	/^from jedi.parser.utils import save_parser$/;"	i
savebookmark	ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:savebookmark(name, cwd)$/;"	f
savetofile	ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:savetofile(mrufs)$/;"	f
say	jedi/test/completion/stdlib.py	/^    def say(self): pass$/;"	m	class:A
scale_call_signatures	jedi/jedi/settings.py	/^scale_call_signatures = 0.1$/;"	v
scale_speed_settings	jedi/jedi/common.py	/^def scale_speed_settings(factor):$/;"	f
scan	jedi/jedi/api/completion.py	/^        def scan(scope):$/;"	f	function:get_user_scope
scan	jedi/jedi/parser/tree.py	/^        def scan(children):$/;"	f	function:Scope._search_in_scope
scan_stack	jedi/jedi/api/helpers.py	/^    def scan_stack(index):$/;"	f	function:get_possible_completion_types
scope	jedi/jedi/evaluate/param.py	/^    def scope(self):$/;"	m	class:Arguments
scope_basic	jedi/test/completion/imports.py	/^def scope_basic():$/;"	f
scope_from_import_variable	jedi/test/completion/imports.py	/^def scope_from_import_variable():$/;"	f
scope_from_import_variable_with_parenthesis	jedi/test/completion/imports.py	/^def scope_from_import_variable_with_parenthesis():$/;"	f
scope_nested	jedi/test/completion/imports.py	/^def scope_nested():$/;"	f
scope_nested2	jedi/test/completion/imports.py	/^def scope_nested2():$/;"	f
scope_pkg	jedi/test/completion/imports.py	/^def scope_pkg():$/;"	f
scopes	jedi/jedi/evaluate/finder.py	/^    def scopes(self, search_global=False):$/;"	m	class:NameFinder
screen	Conque-GDB/autoload/conque_term/conque.py	/^    screen = None$/;"	v	class:Conque
screen_encoding	Conque-GDB/autoload/conque_term/conque_screen.py	/^    screen_encoding = 'utf-8'$/;"	v	class:ConqueScreen
screen_height	Conque-GDB/autoload/conque_term/conque_screen.py	/^    screen_height = 80$/;"	v	class:ConqueScreen
screen_redraw_ct	Conque-GDB/autoload/conque_term/conque_sole.py	/^    screen_redraw_ct = 1$/;"	v	class:ConqueSole
screen_redraw_ct	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    screen_redraw_ct = 0$/;"	v	class:ConqueSoleSubprocess
screen_top	Conque-GDB/autoload/conque_term/conque_screen.py	/^    screen_top = 1$/;"	v	class:ConqueScreen
screen_width	Conque-GDB/autoload/conque_term/conque_screen.py	/^    screen_width = 80$/;"	v	class:ConqueScreen
script	jedi/test/run.py	/^    def script(self):$/;"	m	class:IntegrationTestCase
script_with_path	jedi/test/test_evaluate/test_namespace_package.py	/^    def script_with_path(*args, **kwargs):$/;"	f	function:test_namespace_package
search_function_call	jedi/jedi/evaluate/dynamic.py	/^def search_function_call(evaluator, func):$/;"	f
search_params	jedi/jedi/evaluate/dynamic.py	/^def search_params(evaluator, param):$/;"	f
search_return_in_docstr	jedi/jedi/evaluate/docstrings.py	/^    def search_return_in_docstr(code):$/;"	f	function:find_return_types
search_scope	jedi/jedi/evaluate/compiled/fake.py	/^def search_scope(scope, obj_name):$/;"	f
second	jedi/test/completion/classes.py	/^second = ""$/;"	v
second	jedi/test/completion/classes.py	/^second = 1$/;"	v
second	jedi/test/completion/dynamic_arrays.py	/^def second(a):$/;"	f
section_is_empty	vim-airline/autoload/airline/builder.vim	/^function! s:section_is_empty(self, content)$/;"	f
select	Conque-GDB/autoload/conque_term/conque_subprocess.py	/^import select$/;"	i
select_tab	vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! s:select_tab(buf_index)$/;"	f
self_test	jedi/test/completion/usages.py	/^    def self_test(self):$/;"	m	class:Abc
serialize	Conque-GDB/autoload/conque_term/conque_sole_shared_memory.py	/^    serialize = False$/;"	v	class:ConqueSoleSharedMemory
set_cursor	Conque-GDB/autoload/conque_term/conque.py	/^    def set_cursor(self, line, col):$/;"	m	class:Conque
set_cursor	Conque-GDB/autoload/conque_term/conque_screen.py	/^    def set_cursor(self, line, column):$/;"	m	class:ConqueScreen
set_cursor	Conque-GDB/autoload/conque_term/conque_sole.py	/^    def set_cursor(self, line, column):$/;"	m	class:ConqueSole
set_debug_function	jedi/jedi/__init__.py	/^from jedi.api import Script, Interpreter, NotFoundError, set_debug_function$/;"	i
set_debug_function	jedi/jedi/api/__init__.py	/^def set_debug_function(func_cb=debug.print_to_stdout, warnings=True,$/;"	f
set_object_var	jedi/test/completion/usages.py	/^set_object_var = object()$/;"	v
set_pointer	Conque-GDB/autoload/conque_gdb.vim	/^function! s:set_pointer(id, fname, lineno)$/;"	f
set_screen_width	Conque-GDB/autoload/conque_term/conque_screen.py	/^    def set_screen_width(self, width):$/;"	m	class:ConqueScreen
set_t	jedi/test/completion/types.py	/^set_t = {1,2}$/;"	v
set_t2	jedi/test/completion/types.py	/^set_t2 = set()$/;"	v
set_term_updatetime	Conque-GDB/autoload/conque_term.vim	/^function! s:set_term_updatetime(time)$/;"	f
set_window_size	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    def set_window_size(self, width, height):$/;"	m	class:ConqueSoleSubprocess
setdud	jedi/test/completion/pep0484_typing.py	/^    def setdud(self):$/;"	m	class:TestDict
setentries	ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:setentries()$/;"	f
sets	jedi/test/completion/pep0484_typing.py	/^def sets(p, q):$/;"	f
settings	jedi/conftest.py	/^    from jedi import settings$/;"	i
settings	jedi/jedi/__init__.py	/^from jedi import settings$/;"	i
settings	jedi/jedi/api/__init__.py	/^from jedi import settings$/;"	i
settings	jedi/jedi/api/classes.py	/^from jedi import settings$/;"	i
settings	jedi/jedi/api/completion.py	/^from jedi import settings$/;"	i
settings	jedi/jedi/cache.py	/^from jedi import settings$/;"	i
settings	jedi/jedi/common.py	/^from jedi import settings$/;"	i
settings	jedi/jedi/evaluate/dynamic.py	/^from jedi import settings$/;"	i
settings	jedi/jedi/evaluate/finder.py	/^from jedi import settings$/;"	i
settings	jedi/jedi/evaluate/imports.py	/^from jedi import settings$/;"	i
settings	jedi/jedi/evaluate/iterable.py	/^from jedi import settings$/;"	i
settings	jedi/jedi/evaluate/recursion.py	/^from jedi import settings$/;"	i
settings	jedi/jedi/parser/fast.py	/^from jedi import settings$/;"	i
settings	jedi/jedi/parser/utils.py	/^from jedi import settings$/;"	i
settings	jedi/test/completion/thirdparty/django_.py	/^from django.conf import settings$/;"	i
settings	jedi/test/conftest.py	/^from jedi import settings$/;"	i
settings	jedi/test/test_cache.py	/^from jedi import settings, cache$/;"	i
settings	jedi/test/test_jedi_system.py	/^    from jedi import settings$/;"	i
settype	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:settype(type)$/;"	f
setup	jedi/docs/conf.py	/^def setup(app):$/;"	f
setup	jedi/setup.py	/^    from distutils.core import setup$/;"	i
setup	jedi/setup.py	/^    from setuptools import setup$/;"	i
setup	jedi/test/test_evaluate/init_extension_module/setup.py	/^from distutils.core import setup, Extension$/;"	i
setup_readline	jedi/jedi/utils.py	/^def setup_readline(namespace_module=__main__):$/;"	f
setupblank	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:setupblank()$/;"	f
shift	jedi/jedi/parser/pgen2/parse.py	/^    def shift(self, type_, value, newstate, prefix, start_pos):$/;"	m	class:PgenParser
shlex	Conque-GDB/autoload/conque_term/conque_subprocess.py	/^import shlex$/;"	i
shm	Conque-GDB/autoload/conque_term/conque_sole_shared_memory.py	/^    shm = None$/;"	v	class:ConqueSoleSharedMemory
shm_attributes	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    shm_attributes = None$/;"	v	class:ConqueSoleSubprocess
shm_attributes	Conque-GDB/autoload/conque_term/conque_sole_wrapper.py	/^    shm_attributes = None$/;"	v	class:ConqueSoleWrapper
shm_command	Conque-GDB/autoload/conque_term/conque_sole_communicator.py	/^        shm_command = ConqueSoleSharedMemory(CONQUE_SOLE_COMMANDS_SIZE, 'command', mem_key, serialize=True)$/;"	v
shm_command	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    shm_command = None$/;"	v	class:ConqueSoleSubprocess
shm_command	Conque-GDB/autoload/conque_term/conque_sole_wrapper.py	/^    shm_command = None$/;"	v	class:ConqueSoleWrapper
shm_input	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    shm_input = None$/;"	v	class:ConqueSoleSubprocess
shm_input	Conque-GDB/autoload/conque_term/conque_sole_wrapper.py	/^    shm_input = None$/;"	v	class:ConqueSoleWrapper
shm_key	Conque-GDB/autoload/conque_term/conque_sole_wrapper.py	/^    shm_key = ''$/;"	v	class:ConqueSoleWrapper
shm_output	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    shm_output = None$/;"	v	class:ConqueSoleSubprocess
shm_output	Conque-GDB/autoload/conque_term/conque_sole_wrapper.py	/^    shm_output = None$/;"	v	class:ConqueSoleWrapper
shm_rescroll	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    shm_rescroll = None$/;"	v	class:ConqueSoleSubprocess
shm_rescroll	Conque-GDB/autoload/conque_term/conque_sole_wrapper.py	/^    shm_rescroll = None$/;"	v	class:ConqueSoleWrapper
shm_resize	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    shm_resize = None$/;"	v	class:ConqueSoleSubprocess
shm_resize	Conque-GDB/autoload/conque_term/conque_sole_wrapper.py	/^    shm_resize = None$/;"	v	class:ConqueSoleWrapper
shm_stats	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    shm_stats = None$/;"	v	class:ConqueSoleSubprocess
shm_stats	Conque-GDB/autoload/conque_term/conque_sole_wrapper.py	/^    shm_stats = None$/;"	v	class:ConqueSoleWrapper
shorten	vim-airline/autoload/airline/extensions/po.vim	/^function! s:shorten()$/;"	f
shortest	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:shortest(lens)$/;"	f
should_change_group	vim-airline/autoload/airline/builder.vim	/^function! s:should_change_group(group1, group2)$/;"	f
shouldnt_expose_var	jedi/test/completion/decorators.py	/^    def shouldnt_expose_var(not_self):$/;"	m	class:SelfVars
shout	jedi/test/completion/classes.py	/^    def shout(self):$/;"	m	class:Angry
shout	jedi/test/completion/stdlib.py	/^    def shout(self): pass$/;"	m	class:B
showMenu	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:showMenu(node)$/;"	f
show_completions	jedi/sith.py	/^    def show_completions(self):$/;"	m	class:TestCase
show_definitions	jedi/sith.py	/^    def show_definitions(self):$/;"	m	class:TestCase
show_errors	jedi/sith.py	/^    def show_errors(self):$/;"	m	class:TestCase
show_location	jedi/sith.py	/^    def show_location(self, lineno, column, show=3):$/;"	m	class:TestCase
show_operation	jedi/sith.py	/^    def show_operation(self):$/;"	m	class:TestCase
show_tabline	vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^function! s:show_tabline(min_count, total_count)$/;"	f
shutil	jedi/conftest.py	/^import shutil$/;"	i
shutil	jedi/jedi/parser/utils.py	/^import shutil$/;"	i
shutil	jedi/test/test_evaluate/test_pyc.py	/^import shutil$/;"	i
signal	Conque-GDB/autoload/conque_gdb/conque_gdb_gdb.py	/^import gdb, os, signal$/;"	i
signal	Conque-GDB/autoload/conque_term/conque_subprocess.py	/^    def signal(self, signum):$/;"	m	class:ConqueSubprocess
signal	Conque-GDB/autoload/conque_term/conque_subprocess.py	/^import signal$/;"	i
simple	jedi/test/completion/functions.py	/^def simple(a):$/;"	f
simple	jedi/test/completion/generators.py	/^def simple():$/;"	f
simple	jedi/test/static_analysis/arguments.py	/^def simple(a):$/;"	f
simple	jedi/test/static_analysis/star_arguments.py	/^def simple(a):$/;"	f
simple2	jedi/test/completion/generators.py	/^def simple2():$/;"	f
simple2	jedi/test/static_analysis/star_arguments.py	/^def simple2(a, b, c):$/;"	f
simple_mixed	jedi/test/static_analysis/star_arguments.py	/^def simple_mixed(a, b, c):$/;"	f
simplify_dfa	jedi/jedi/parser/pgen2/pgen.py	/^    def simplify_dfa(self, dfa):$/;"	m	class:ParserGenerator
single	jedi/jedi/parser/tokenize.py	/^single = r"[^'\\\\]*(?:\\\\.[^'\\\\]*)*'"$/;"	v
single3	jedi/jedi/parser/tokenize.py	/^single3 = r"[^'\\\\]*(?:(?:\\\\.|'(?!''))[^'\\\\]*)*'''"$/;"	v
single_quoted	jedi/jedi/parser/tokenize.py	/^single_quoted = {}$/;"	v
skip_deprecated	jedi/docs/conf.py	/^def skip_deprecated(app, what, name, obj, skip, options):$/;"	f
skip_python_version	jedi/test/run.py	/^def skip_python_version(line):$/;"	f
sleep	jedi/test/test_api/test_call_signatures.py	/^        run("import time; abc = time; abc.sleep(", 'sleep', 0)$/;"	i
sleep_time	Conque-GDB/autoload/conque_term/conque_sole_communicator.py	/^        sleep_time = 0.01$/;"	v
some_func	jedi/test/completion/descriptors.py	/^    def some_func(self):$/;"	m	class:MemoizeTest
some_variable	jedi/test/completion/__init__.py	/^some_variable = 1$/;"	v
some_variable	jedi/test/completion/goto.py	/^from . import some_variable$/;"	i
some_variable	jedi/test/completion/on_import.py	/^from . import some_variable$/;"	i
something	jedi/test/static_analysis/attribute_error.py	/^something = a$/;"	v
sorted_definitions	jedi/jedi/api/helpers.py	/^def sorted_definitions(defs):$/;"	f
source_encoding	jedi/docs/conf.py	/^source_encoding = 'utf-8'$/;"	v
source_path	jedi/jedi/api/__init__.py	/^    def source_path(self):$/;"	m	class:Script
source_suffix	jedi/docs/conf.py	/^source_suffix = '.rst'$/;"	v
source_to_unicode	jedi/jedi/common.py	/^def source_to_unicode(source, encoding=None):$/;"	f
source_to_unicode	jedi/jedi/evaluate/imports.py	/^from jedi.common import source_to_unicode$/;"	i
source_tokens	jedi/jedi/parser/fast.py	/^from jedi.parser.tokenize import (source_tokens, NEWLINE,$/;"	i
source_tokens	jedi/jedi/parser/tokenize.py	/^def source_tokens(source, use_exact_op_types=False):$/;"	f
sources	jedi/test/test_evaluate/init_extension_module/setup.py	/^                    sources=['module.c'])$/;"	v
special	jedi/jedi/parser/tokenize.py	/^special = group(r'\\r?\\n', r'\\.\\.\\.', r'[:;.,@]')$/;"	v
speed	jedi/jedi/debug.py	/^def speed(name):$/;"	f
sphinxy	jedi/test/completion/docstring.py	/^def sphinxy(a, b, c, d, x):$/;"	f
sphinxy2	jedi/test/completion/docstring.py	/^def sphinxy2(a, b, x):$/;"	f
splitlines	jedi/jedi/common.py	/^def splitlines(string):$/;"	f
splits	jedi/test/test_parser/test_fast_parser.py	/^    def splits(source):$/;"	f	function:test_split_parts
sqlite3	jedi/test/completion/on_import.py	/^import sqlite3$/;"	i
sqlite3	jedi/test/completion/stdlib.py	/^import sqlite3$/;"	i
src_buf_written	Conque-GDB/autoload/conque_gdb.vim	/^function! s:src_buf_written()$/;"	f
st	jedi/test/completion/dynamic_arrays.py	/^st = set()$/;"	v
st	jedi/test/completion/dynamic_arrays.py	/^st = {1.0}$/;"	v
star_args_with_named	jedi/test/static_analysis/star_arguments.py	/^def star_args_with_named(*args):$/;"	f
star_import_cache_validity	jedi/jedi/settings.py	/^star_import_cache_validity = 60.0$/;"	v
star_import_name	jedi/jedi/parser/tree.py	/^    def star_import_name(self):$/;"	m	class:ImportFrom
star_imports	jedi/jedi/evaluate/representation.py	/^    def star_imports(self):$/;"	m	class:ModuleWrapper
stars	jedi/jedi/parser/tree.py	/^    def stars(self):$/;"	m	class:Param
start_breakpoint	Conque-GDB/autoload/conque_gdb/conque_sole_gdb.py	/^    def start_breakpoint(self, text, line):$/;"	m	class:ConqueSoleGdb
start_pos	jedi/jedi/api/classes.py	/^    def start_pos(self):$/;"	m	class:BaseDefinition
start_pos	jedi/jedi/evaluate/compiled/__init__.py	/^    start_pos = 0, 0$/;"	v	class:CompiledObject
start_pos	jedi/jedi/evaluate/compiled/mixed.py	/^    def start_pos(self):$/;"	m	class:MixedName
start_pos	jedi/jedi/evaluate/helpers.py	/^    def start_pos(self):$/;"	m	class:FakeImport
start_pos	jedi/jedi/parser/tree.py	/^    def start_pos(self):$/;"	m	class:BaseNode
start_pos	jedi/jedi/parser/tree.py	/^    def start_pos(self):$/;"	m	class:Leaf
start_pos	jedi/jedi/parser/tree.py	/^    def start_pos(self, value):$/;"	m	class:Leaf
statements	jedi/jedi/evaluate/representation.py	/^    def statements(self):$/;"	m	class:FunctionExecution
statements	jedi/jedi/parser/tree.py	/^    def statements(self):$/;"	m	class:Scope
stdin	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    stdin = None$/;"	v	class:ConqueSoleSubprocess
stdlib	jedi/jedi/evaluate/__init__.py	/^from jedi.evaluate import stdlib$/;"	i
stdout	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    stdout = None$/;"	v	class:ConqueSoleSubprocess
still	jedi/test/test_integration_import.py	/^@pytest.mark.skipif('True', reason='The nested import stuff is still very messy.')$/;"	i
stl	vim-airline/t/builder.vim	/^    let stl = s:builder.build()$/;"	v
stl	vim-airline/t/extensions_default.vim	/^    let stl = s:builder.build()$/;"	v
str_import_path	jedi/jedi/evaluate/imports.py	/^    def str_import_path(self):$/;"	m	class:Importer
string	jedi/jedi/parser/tokenize.py	/^import string$/;"	i
string	jedi/test/static_analysis/attribute_error.py	/^string = '%s %s' % (1, 2)$/;"	v
strs	jedi/test/completion/classes.py	/^strs = TestClass("", '')$/;"	v
struct	Conque-GDB/autoload/conque_term/conque_subprocess.py	/^import struct$/;"	i
strwidth	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:strwidth(str)$/;"	f
stuff	jedi/test/test_integration_import.py	/^@pytest.mark.skipif('True', reason='The nested import stuff is still very messy.')$/;"	i
styles	jedi/docs/_themes/flask_theme_support.py	/^    styles = {$/;"	v	class:FlaskyStyle
sublist	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:sublist(l, s, e)$/;"	f
sublist7071	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:sublist7071(l, s, e)$/;"	f
subscopes	jedi/jedi/evaluate/compiled/__init__.py	/^    def subscopes(self):$/;"	m	class:CompiledObject
subscopes	jedi/jedi/evaluate/representation.py	/^    def subscopes(self):$/;"	m	class:FunctionExecution
subscopes	jedi/jedi/parser/tree.py	/^    def subscopes(self):$/;"	m	class:Scope
summary	jedi/test/run.py	/^    summary = []$/;"	v
sync_active_winnr	vim-airline/autoload/airline/extensions.vim	/^function! s:sync_active_winnr()$/;"	f
syntax	ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:syntax()$/;"	f
syntax	ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:syntax()$/;"	f
syntax	ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! s:syntax()$/;"	f
syntax	ctrlp.vim/autoload/ctrlp/line.vim	/^fu! s:syntax()$/;"	f
syntax	ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! s:syntax()$/;"	f
syntax	ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! s:syntax()$/;"	f
syntax	ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:syntax()$/;"	f
sys	Conque-GDB/autoload/conque_term/conque_globals.py	/^import sys$/;"	i
sys	Conque-GDB/autoload/conque_term/conque_sole_communicator.py	/^import sys$/;"	i
sys	Conque-GDB/autoload/conque_term/conque_sole_shared_memory.py	/^import sys$/;"	i
sys	jedi/docs/conf.py	/^import sys$/;"	i
sys	jedi/jedi/__main__.py	/^import sys$/;"	i
sys	jedi/jedi/_compatibility.py	/^import sys$/;"	i
sys	jedi/jedi/api/__init__.py	/^import sys$/;"	i
sys	jedi/jedi/common.py	/^import sys$/;"	i
sys	jedi/jedi/evaluate/__init__.py	/^import sys$/;"	i
sys	jedi/jedi/evaluate/compiled/__init__.py	/^import sys$/;"	i
sys	jedi/jedi/evaluate/imports.py	/^import sys$/;"	i
sys	jedi/jedi/evaluate/site.py	/^import sys$/;"	i
sys	jedi/jedi/evaluate/sys_path.py	/^import sys$/;"	i
sys	jedi/jedi/parser/utils.py	/^import sys$/;"	i
sys	jedi/jedi/utils.py	/^import sys$/;"	i
sys	jedi/scripts/memory_check.py	/^import sys$/;"	i
sys	jedi/scripts/wx_check.py	/^import sys$/;"	i
sys	jedi/sith.py	/^import sys$/;"	i
sys	jedi/test/completion/imports.py	/^import sys$/;"	i
sys	jedi/test/completion/sys_path.py	/^import sys$/;"	i
sys	jedi/test/helpers.py	/^import sys$/;"	i
sys	jedi/test/run.py	/^    import sys$/;"	i
sys	jedi/test/run.py	/^import sys$/;"	i
sys	jedi/test/test_evaluate/sample_venvs/venv27/lib/python2.7/site-packages/smth.py	/^import sys$/;"	i
sys	jedi/test/test_evaluate/sample_venvs/venv34/lib/python3.4/site-packages/smth.py	/^import sys$/;"	i
sys	jedi/test/test_evaluate/test_imports.py	/^import sys$/;"	i
sys	jedi/test/test_evaluate/test_pyc.py	/^import sys$/;"	i
sys	jedi/test/test_evaluate/test_sys_path.py	/^import sys$/;"	i
sys	jedi/test/test_integration_import.py	/^    assert len(Script("import sys", 1, 8).goto_definitions()) == 1$/;"	i
sys	jedi/test/test_jedi_system.py	/^    import sys$/;"	i
sys	jedi/test/test_parser/test_parser.py	/^import sys$/;"	i
sys	jedi/test/test_regression.py	/^import sys$/;"	i
sys	jedi/test/test_utils.py	/^        import sys$/;"	i
sys_blabla	jedi/test/test_integration_import.py	/^    assert Script("import sys_blabla", 1, 8).goto_definitions() == []$/;"	i
sys_path	jedi/jedi/evaluate/imports.py	/^from jedi.evaluate import sys_path$/;"	i
sys_path	jedi/test/test_evaluate/test_sys_path.py	/^from jedi.evaluate import sys_path, Evaluator$/;"	i
sys_path_with_modifications	jedi/jedi/evaluate/imports.py	/^    def sys_path_with_modifications(self):$/;"	m	class:Importer
sys_path_with_modifications	jedi/jedi/evaluate/sys_path.py	/^def sys_path_with_modifications(evaluator, module):$/;"	f
system_job_handler	vim-airline/autoload/airline/util.vim	/^  function! s:system_job_handler(job_id, data, event) dict$/;"	f
t	jedi/jedi/evaluate/site.py	/^                if line.startswith(("import ", "import\\t")):$/;"	i
t	jedi/test/completion/descriptors.py	/^    def t(cls, x):$/;"	m	class:E
t	jedi/test/completion/descriptors.py	/^    def t(self):$/;"	m	class:B
t	jedi/test/completion/pep0484_typing.py	/^import typing as t$/;"	i
t	jedi/test/test_api/test_classes.py	/^    assert get_types('import t') == set(['module'])$/;"	i
t_start	jedi/test/run.py	/^    t_start = time.time()$/;"	v
tabsize	jedi/jedi/parser/tokenize.py	/^tabsize = 8$/;"	v
tabstops	Conque-GDB/autoload/conque_term/conque.py	/^    tabstops = []$/;"	v	class:Conque
tail	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:tail()$/;"	f
target	jedi/test/completion/precedence.py	/^target = ''$/;"	v
target	jedi/test/completion/precedence.py	/^target = u''$/;"	v
taropen	jedi/test/static_analysis/descriptors.py	/^    def taropen(cls, name, **kwargs):$/;"	m	class:TarFile
tee	jedi/test/completion/imports.py	/^from itertools import (tee,$/;"	i
temp	jedi/test/completion/ordering.py	/^temp = b;$/;"	v
tempfile	jedi/conftest.py	/^import tempfile$/;"	i
templates_path	jedi/docs/conf.py	/^templates_path = ['_templates']$/;"	v
term_obj.close	Conque-GDB/autoload/conque_term.vim	/^function! s:term_obj.close() dict " {{{$/;"	f
term_obj.focus	Conque-GDB/autoload/conque_term.vim	/^function! s:term_obj.focus() dict " {{{$/;"	f
term_obj.read	Conque-GDB/autoload/conque_term.vim	/^function! s:term_obj.read(...) dict " {{{$/;"	f
term_obj.set_callback	Conque-GDB/autoload/conque_term.vim	/^function! s:term_obj.set_callback(callback_func) dict " {{{$/;"	f
term_obj.write	Conque-GDB/autoload/conque_term.vim	/^function! s:term_obj.write(...) dict " {{{$/;"	f
term_obj.writeln	Conque-GDB/autoload/conque_term.vim	/^function! s:term_obj.writeln(...) dict " {{{$/;"	f
termios	Conque-GDB/autoload/conque_term/conque_subprocess.py	/^import termios$/;"	i
test	jedi/test/completion/classes.py	/^    def test(self):$/;"	m	class:TestSuper
test	jedi/test/completion/docstring.py	/^    def test(self):$/;"	m	class:Test
test	jedi/test/completion/dynamic_params.py	/^    def test(self, a):$/;"	m	class:A
test	jedi/test/completion/pep0484_comments.py	/^def test(a, b):$/;"	f
test	jedi/test/refactor/extract.py	/^def test():$/;"	f
test	jedi/test/refactor/inline.py	/^def test():$/;"	f
test	jedi/test/test_evaluate/absolute_import/unittest.py	/^    def test(self):$/;"	m	class:TestCase
test	jedi/test/test_parser/test_fast_parser.py	/^    def test(*parts):$/;"	f	function:test_split_parts
test	jedi/test/test_parser/test_get_code.py	/^    def test(source, end_pos):$/;"	f	function:test_end_newlines
test1	jedi/test/refactor/rename.py	/^def test1():$/;"	f
test2	jedi/test/completion/dynamic_params.py	/^    def test2(self):$/;"	m	class:A
test3	jedi/test/completion/dynamic_params.py	/^    def test3(self):$/;"	m	class:A
test_1	jedi/test/test_parser/test_pgen2.py	/^    def test_1(self):$/;"	m	class:TestFunctionAnnotations
test_1	jedi/test/test_parser/test_pgen2.py	/^    def test_1(self):$/;"	m	class:TestSetLiteral
test_2	jedi/test/test_parser/test_pgen2.py	/^    def test_2(self):$/;"	m	class:TestFunctionAnnotations
test_2	jedi/test/test_parser/test_pgen2.py	/^    def test_2(self):$/;"	m	class:TestSetLiteral
test_2x_style_1	jedi/test/test_parser/test_pgen2.py	/^    def test_2x_style_1(self):$/;"	m	class:TestRaiseChanges
test_2x_style_2	jedi/test/test_parser/test_pgen2.py	/^    def test_2x_style_2(self):$/;"	m	class:TestRaiseChanges
test_2x_style_3	jedi/test/test_parser/test_pgen2.py	/^    def test_2x_style_3(self):$/;"	m	class:TestRaiseChanges
test_2x_style_invalid_1	jedi/test/test_parser/test_pgen2.py	/^    def test_2x_style_invalid_1(self):$/;"	m	class:TestRaiseChanges
test_3	jedi/test/test_parser/test_pgen2.py	/^    def test_3(self):$/;"	m	class:TestFunctionAnnotations
test_3	jedi/test/test_parser/test_pgen2.py	/^    def test_3(self):$/;"	m	class:TestSetLiteral
test_3x_style	jedi/test/test_parser/test_pgen2.py	/^    def test_3x_style(self):$/;"	m	class:TestRaiseChanges
test_3x_style_invalid_1	jedi/test/test_parser/test_pgen2.py	/^    def test_3x_style_invalid_1(self):$/;"	m	class:TestRaiseChanges
test_3x_style_invalid_2	jedi/test/test_parser/test_pgen2.py	/^    def test_3x_style_invalid_2(self):$/;"	m	class:TestRaiseChanges
test_3x_style_invalid_3	jedi/test/test_parser/test_pgen2.py	/^    def test_3x_style_invalid_3(self):$/;"	m	class:TestRaiseChanges
test_3x_style_invalid_4	jedi/test/test_parser/test_pgen2.py	/^    def test_3x_style_invalid_4(self):$/;"	m	class:TestRaiseChanges
test_4	jedi/test/test_parser/test_pgen2.py	/^    def test_4(self):$/;"	m	class:TestFunctionAnnotations
test_4	jedi/test/test_parser/test_pgen2.py	/^    def test_4(self):$/;"	m	class:TestSetLiteral
test_5	jedi/test/test_parser/test_pgen2.py	/^    def test_5(self):$/;"	m	class:TestFunctionAnnotations
test_6	jedi/test/test_parser/test_pgen2.py	/^    def test_6(self):$/;"	m	class:TestFunctionAnnotations
test_7	jedi/test/test_parser/test_pgen2.py	/^    def test_7(self):$/;"	m	class:TestFunctionAnnotations
test_8	jedi/test/test_parser/test_pgen2.py	/^    def test_8(self):$/;"	m	class:TestFunctionAnnotations
test_add_dynamic_mods	jedi/test/test_regression.py	/^    def test_add_dynamic_mods(self):$/;"	m	class:TestRegression
test_add_to_end	jedi/test/test_parser/test_fast_parser.py	/^def test_add_to_end():$/;"	f
test_added_equals_to_params	jedi/test/test_api/test_classes.py	/^def test_added_equals_to_params():$/;"	f
test_additional_brackets	jedi/test/test_api/test_call_signatures.py	/^    def test_additional_brackets(self):$/;"	m	class:TestCallSignatures
test_additional_indent	jedi/test/test_parser/test_fast_parser.py	/^def test_additional_indent():$/;"	f
test_after_from	jedi/test/test_integration_import.py	/^def test_after_from():$/;"	f
test_annotation	jedi/test/test_parser/test_parser_tree.py	/^    def test_annotation(self, node, expected):$/;"	m	class:TestsFunctionAndLambdaParsing
test_append_on_non_sys_path	jedi/test/test_evaluate/test_buildout_detection.py	/^def test_append_on_non_sys_path():$/;"	f
test_async_for	jedi/test/test_parser/test_pgen2.py	/^    def test_async_for(self):$/;"	m	class:TestAsyncAwait
test_async_for_invalid	jedi/test/test_parser/test_pgen2.py	/^    def test_async_for_invalid(self):$/;"	m	class:TestAsyncAwait
test_async_var	jedi/test/test_parser/test_pgen2.py	/^    def test_async_var(self):$/;"	m	class:TestAsyncAwait
test_async_with	jedi/test/test_parser/test_pgen2.py	/^    def test_async_with(self):$/;"	m	class:TestAsyncAwait
test_async_with_invalid	jedi/test/test_parser/test_pgen2.py	/^    def test_async_with_invalid(self):$/;"	m	class:TestAsyncAwait
test_attribute_docstring	jedi/test/test_evaluate/test_docstring.py	/^    def test_attribute_docstring(self):$/;"	m	class:TestDocstring
test_await_expr	jedi/test/test_parser/test_pgen2.py	/^    def test_await_expr(self):$/;"	m	class:TestAsyncAwait
test_await_expr_invalid	jedi/test/test_parser/test_pgen2.py	/^    def test_await_expr_invalid(self):$/;"	m	class:TestAsyncAwait
test_backslash	jedi/test/test_parser/test_fast_parser.py	/^def test_backslash():$/;"	f
test_backslash_continuation	jedi/test/test_regression.py	/^    def test_backslash_continuation(self):$/;"	m	class:TestRegression
test_backslash_continuation_and_bracket	jedi/test/test_regression.py	/^    def test_backslash_continuation_and_bracket(self):$/;"	m	class:TestRegression
test_backslash_dos_style	jedi/test/test_parser/test_parser.py	/^def test_backslash_dos_style():$/;"	f
test_basedefinition_type	jedi/test/test_api/test_classes.py	/^def test_basedefinition_type(definition):$/;"	f
test_basedefinition_type_import	jedi/test/test_api/test_classes.py	/^def test_basedefinition_type_import():$/;"	f
test_basic_parsing	jedi/test/test_new_parser.py	/^def test_basic_parsing():$/;"	f
test_basic_parsing	jedi/test/test_parser/test_get_code.py	/^def test_basic_parsing():$/;"	f
test_blablabla	jedi/test/blabla_test_documentation.py	/^def test_blablabla():$/;"	f
test_bracket_start	jedi/test/test_api/test_call_signatures.py	/^def test_bracket_start():$/;"	f
test_brackets_in_string_literals	jedi/test/test_api/test_call_signatures.py	/^    def test_brackets_in_string_literals(self):$/;"	m	class:TestCallSignatures
test_buildout_detection	jedi/test/test_evaluate/test_buildout_detection.py	/^def test_buildout_detection():$/;"	f
test_builtin	jedi/test/test_api/test_full_name.py	/^    def test_builtin(self):$/;"	m	class:MixinTestFullName
test_builtin_details	jedi/test/test_api/test_interpreter.py	/^def test_builtin_details():$/;"	f
test_builtins	jedi/test/test_api/test_call_signatures.py	/^    def test_builtins(self):$/;"	m	class:TestParams
test_cache_call_signatures	jedi/test/test_cache.py	/^def test_cache_call_signatures():$/;"	f
test_cache_line_split_issues	jedi/test/test_cache.py	/^def test_cache_line_split_issues():$/;"	f
test_cache_works_with_sys_path_param	jedi/test/test_evaluate/test_imports.py	/^def test_cache_works_with_sys_path_param(tmpdir):$/;"	f
test_call_of_leaf_in_brackets	jedi/test/test_evaluate/test_helpers.py	/^def test_call_of_leaf_in_brackets():$/;"	f
test_call_signature_on_module	jedi/test/test_api/test_call_signatures.py	/^    def test_call_signature_on_module(self):$/;"	m	class:TestCallSignatures
test_call_signatures_empty_parentheses_pre_space	jedi/test/test_api/test_call_signatures.py	/^    def test_call_signatures_empty_parentheses_pre_space(self):$/;"	m	class:TestCallSignatures
test_call_signatures_extension	jedi/test/test_evaluate/test_extension.py	/^def test_call_signatures_extension():$/;"	f
test_call_signatures_stdlib	jedi/test/test_evaluate/test_extension.py	/^def test_call_signatures_stdlib():$/;"	f
test_call_signatures_whitespace	jedi/test/test_api/test_call_signatures.py	/^    def test_call_signatures_whitespace(self):$/;"	m	class:TestCallSignatures
test_call_type	jedi/test/test_parser/test_parser.py	/^    def test_call_type(self):$/;"	m	class:TestCallAndName
test_calls	jedi/test/test_utils.py	/^    def test_calls(self):$/;"	m	class:TestSetupReadline
test_can_complete_when_shadowing	jedi/test/test_evaluate/test_absolute_import.py	/^def test_can_complete_when_shadowing():$/;"	f
test_carriage_return_splitting	jedi/test/test_parser/test_fast_parser.py	/^def test_carriage_return_splitting():$/;"	f
test_carriage_return_statements	jedi/test/test_parser/test_parser.py	/^def test_carriage_return_statements():$/;"	f
test_chained_calls	jedi/test/test_api/test_call_signatures.py	/^    def test_chained_calls(self):$/;"	m	class:TestCallSignatures
test_change_and_undo	jedi/test/test_parser/test_fast_parser.py	/^def test_change_and_undo():$/;"	f
test_class_and_if	jedi/test/test_parser/test_fast_parser.py	/^def test_class_and_if():$/;"	f
test_class_call	jedi/test/test_api/test_classes.py	/^    def test_class_call(self):$/;"	m	class:TestGotoAssignments
test_class_call_signature	jedi/test/test_api/test_classes.py	/^def test_class_call_signature():$/;"	f
test_class_func_if	jedi/test/test_parser/test_fast_parser.py	/^def test_class_func_if():$/;"	f
test_class_in_docstr	jedi/test/test_parser/test_fast_parser.py	/^def test_class_in_docstr():$/;"	f
test_class_mro	jedi/test/test_evaluate/test_representation.py	/^def test_class_mro():$/;"	f
test_class_with_class_var	jedi/test/test_parser/test_fast_parser.py	/^def test_class_with_class_var():$/;"	f
test_colorama	jedi/test/test_utils.py	/^    def test_colorama(self):$/;"	m	class:TestSetupReadline
test_complete_at_zero	jedi/test/test_api/test_unicode.py	/^def test_complete_at_zero():$/;"	f
test_complete_on_empty_import	jedi/test/test_integration_import.py	/^def test_complete_on_empty_import():$/;"	f
test_complete_raw_function	jedi/test/test_api/test_interpreter.py	/^    def test_complete_raw_function(self):$/;"	m	class:TestInterpreterAPI
test_complete_raw_function_different_name	jedi/test/test_api/test_interpreter.py	/^    def test_complete_raw_function_different_name(self):$/;"	m	class:TestInterpreterAPI
test_complete_raw_instance	jedi/test/test_api/test_interpreter.py	/^    def test_complete_raw_instance(self):$/;"	m	class:TestInterpreterAPI
test_complete_raw_module	jedi/test/test_api/test_interpreter.py	/^    def test_complete_raw_module(self):$/;"	m	class:TestInterpreterAPI
test_completion	jedi/test/test_evaluate/test_docstring.py	/^    def test_completion(self):$/;"	m	class:TestDocstring
test_completion	jedi/test/test_integration.py	/^def test_completion(case, monkeypatch):$/;"	f
test_completion_docstring	jedi/test/test_api/test_classes.py	/^def test_completion_docstring():$/;"	f
test_completion_interference	jedi/test/test_api/test_call_signatures.py	/^def test_completion_interference():$/;"	f
test_completion_on_complex_literals	jedi/test/test_api/test_api.py	/^def test_completion_on_complex_literals():$/;"	f
test_completion_on_hex_literals	jedi/test/test_api/test_api.py	/^def test_completion_on_hex_literals():$/;"	f
test_completion_on_number_literals	jedi/test/test_api/test_api.py	/^def test_completion_on_number_literals():$/;"	f
test_completion_params	jedi/test/test_api/test_classes.py	/^def test_completion_params():$/;"	f
test_completions	jedi/test/test_evaluate/test_extension.py	/^def test_completions():$/;"	f
test_complex	jedi/test/test_api/test_call_signatures.py	/^    def test_complex(self):$/;"	m	class:TestCallSignatures
test_decorator	jedi/test/test_parser/test_fast_parser.py	/^def test_decorator():$/;"	f
test_decorator_in_class	jedi/test/test_api/test_call_signatures.py	/^    def test_decorator_in_class(self):$/;"	m	class:TestCallSignatures
test_decorator_string_issue	jedi/test/test_parser/test_fast_parser.py	/^def test_decorator_string_issue():$/;"	f
test_dict_literal_in_incomplete_call	jedi/test/test_api/test_call_signatures.py	/^def test_dict_literal_in_incomplete_call():$/;"	f
test_different_caller	jedi/test/test_api/test_call_signatures.py	/^def test_different_caller():$/;"	f
test_dir	jedi/test/helpers.py	/^test_dir = dirname(abspath(__file__))$/;"	v
test_doc	jedi/test/test_evaluate/test_compiled.py	/^def test_doc():$/;"	f
test_doc	jedi/test/test_parser/test_parser_tree.py	/^    def test_doc(self, node, expected):$/;"	m	class:TestsFunctionAndLambdaParsing
test_docstring_instance	jedi/test/test_evaluate/test_docstring.py	/^    def test_docstring_instance(self):$/;"	m	class:TestDocstring
test_docstrings_param_type	jedi/test/test_evaluate/test_docstring.py	/^    def test_docstrings_param_type(self):$/;"	m	class:TestDocstring
test_docstrings_type_dotted_import	jedi/test/test_evaluate/test_docstring.py	/^    def test_docstrings_type_dotted_import(self):$/;"	m	class:TestDocstring
test_docstrings_type_str	jedi/test/test_evaluate/test_docstring.py	/^    def test_docstrings_type_str(self):$/;"	m	class:TestDocstring
test_dont_break_imports_without_namespaces	jedi/test/test_evaluate/test_absolute_import.py	/^def test_dont_break_imports_without_namespaces():$/;"	f
test_dotted_assignment	jedi/test/test_api/test_defined_names.py	/^    def test_dotted_assignment(self):$/;"	m	class:TestDefinedNames
test_element	jedi/test/completion/pep0484.py	/^    test_element = 1$/;"	v	class:B
test_element	jedi/test/completion/pep0484.py	/^    test_element = 1$/;"	v	class:SelfReference
test_empty_decorator	jedi/test/completion/invalid.py	/^def test_empty_decorator():$/;"	f
test_empty_script	jedi/test/test_api/test_api.py	/^def test_empty_script():$/;"	f
test_end_newlines	jedi/test/test_parser/test_get_code.py	/^def test_end_newlines():$/;"	f
test_end_pos	jedi/test/test_parser/test_parser.py	/^def test_end_pos():$/;"	f
test_end_pos_error_correction	jedi/test/test_parser/test_parser.py	/^def test_end_pos_error_correction():$/;"	f
test_end_pos_line	jedi/test/test_regression.py	/^    def test_end_pos_line(self):$/;"	m	class:TestRegression
test_end_pos_multi_line	jedi/test/test_parser/test_tokenize.py	/^    def test_end_pos_multi_line(self):$/;"	m	class:TokenTest
test_end_pos_one_line	jedi/test/test_parser/test_tokenize.py	/^    def test_end_pos_one_line(self):$/;"	m	class:TokenTest
test_equals	jedi/test/test_evaluate/test_precedence.py	/^def test_equals(source):$/;"	f
test_error_correction_with	jedi/test/test_parser/test_parser.py	/^def test_error_correction_with():$/;"	f
test_explicit_absolute_imports	jedi/test/test_evaluate/test_absolute_import.py	/^def test_explicit_absolute_imports():$/;"	f
test_extended_unpacking	jedi/test/test_parser/test_pgen2.py	/^    def test_extended_unpacking(self):$/;"	m	class:TestParserIdempotency
test_fake_docstr	jedi/test/test_evaluate/test_compiled.py	/^def test_fake_docstr():$/;"	f
test_fake_loading	jedi/test/test_evaluate/test_compiled.py	/^def test_fake_loading():$/;"	f
test_fake_parentheses	jedi/test/test_parser/test_fast_parser.py	/^def test_fake_parentheses():$/;"	f
test_fake_subnodes	jedi/test/test_regression.py	/^    def test_fake_subnodes(self):$/;"	m	class:TestRegression
test_files	jedi/test/run.py	/^    test_files = {}$/;"	v
test_find_module_not_package	jedi/test/test_evaluate/test_imports.py	/^def test_find_module_not_package():$/;"	f
test_find_module_not_package_zipped	jedi/test/test_evaluate/test_imports.py	/^def test_find_module_not_package_zipped():$/;"	f
test_find_module_package	jedi/test/test_evaluate/test_imports.py	/^def test_find_module_package():$/;"	f
test_find_module_package_zipped	jedi/test/test_evaluate/test_imports.py	/^def test_find_module_package_zipped():$/;"	f
test_find_module_py33	jedi/test/test_evaluate/test_imports.py	/^def test_find_module_py33():$/;"	f
test_flask_ext	jedi/test/test_evaluate/test_imports.py	/^def test_flask_ext(script, name):$/;"	f
test_flow_call	jedi/test/test_api/test_call_signatures.py	/^    def test_flow_call(self):$/;"	m	class:TestCallSignatures
test_flows	jedi/test/test_api/test_call_signatures.py	/^    def test_flows(self):$/;"	m	class:TestCallSignatures
test_follow_definition_land_on_import	jedi/test/test_api/test_api_classes_follow_definition.py	/^def test_follow_definition_land_on_import():$/;"	f
test_follow_definition_nested_import	jedi/test/test_api/test_api_classes_follow_definition.py	/^def test_follow_definition_nested_import():$/;"	f
test_follow_import_incomplete	jedi/test/test_api/test_api_classes_follow_definition.py	/^def test_follow_import_incomplete():$/;"	f
test_follow_imports	jedi/test/test_api/test_defined_names.py	/^def test_follow_imports():$/;"	f
test_for	jedi/test/test_parser/test_fast_parser.py	/^def test_for():$/;"	f
test_for_on_one_line	jedi/test/test_parser/test_fast_parser.py	/^def test_for_on_one_line():$/;"	f
test_form_feed_characters	jedi/test/test_parser/test_user_context.py	/^def test_form_feed_characters():$/;"	f
test_formfeed	jedi/test/test_parser/test_pgen2.py	/^    def test_formfeed(self):$/;"	m	class:TestDriver
test_from_import	jedi/test/test_api/test_full_name.py	/^    def test_from_import(self):$/;"	m	class:TestFullNameWithGotoDefinitions
test_func	jedi/test/completion/arrays.py	/^def test_func():$/;"	f
test_func_with_for_and_comment	jedi/test/test_parser/test_fast_parser.py	/^def test_func_with_for_and_comment():$/;"	f
test_func_with_if	jedi/test/test_parser/test_fast_parser.py	/^def test_func_with_if():$/;"	f
test_function_call_signature_in_doc	jedi/test/test_api/test_classes.py	/^def test_function_call_signature_in_doc():$/;"	f
test_function_definitions_should_break	jedi/test/test_api/test_call_signatures.py	/^    def test_function_definitions_should_break(self):$/;"	m	class:TestCallSignatures
test_function_doc	jedi/test/test_evaluate/test_docstring.py	/^    def test_function_doc(self):$/;"	m	class:TestDocstring
test_function_execution	jedi/test/test_evaluate/test_representation.py	/^def test_function_execution():$/;"	f
test_function_whitespace	jedi/test/test_parser/test_tokenize.py	/^    def test_function_whitespace(self):$/;"	m	class:TokenTest
test_generator	jedi/test/test_regression.py	/^    def test_generator(self):$/;"	m	class:TestRegression
test_get_call_signature	jedi/test/test_parser/test_parser_tree.py	/^    def test_get_call_signature(self, node, expected):$/;"	m	class:TestsFunctionAndLambdaParsing
test_get_code	jedi/test/test_parser/test_get_code.py	/^def test_get_code():$/;"	f
test_get_definitions_flat	jedi/test/test_api/test_defined_names.py	/^    def test_get_definitions_flat(self):$/;"	m	class:TestDefinedNames
test_get_line_code	jedi/test/test_api/test_api.py	/^def test_get_line_code():$/;"	f
test_get_venv_path	jedi/test/test_evaluate/test_sys_path.py	/^def test_get_venv_path(venv):$/;"	f
test_getitem_side_effects	jedi/test/test_api/test_interpreter.py	/^    def test_getitem_side_effects(self):$/;"	m	class:TestInterpreterAPI
test_goto_assignments_follow_imports	jedi/test/test_api/test_api.py	/^def test_goto_assignments_follow_imports():$/;"	f
test_goto_assignments_keyword	jedi/test/test_integration_keyword.py	/^def test_goto_assignments_keyword():$/;"	f
test_goto_assignments_on_non_name	jedi/test/test_api/test_api.py	/^def test_goto_assignments_on_non_name():$/;"	f
test_goto_definition_at_zero	jedi/test/test_api/test_unicode.py	/^def test_goto_definition_at_zero():$/;"	f
test_goto_definition_cursor	jedi/test/test_regression.py	/^    def test_goto_definition_cursor(self):$/;"	m	class:TestRegression
test_goto_definition_not_multiple	jedi/test/test_api/test_api.py	/^def test_goto_definition_not_multiple():$/;"	f
test_goto_definition_on_import	jedi/test/test_integration_import.py	/^def test_goto_definition_on_import():$/;"	f
test_goto_definitions_on_non_name	jedi/test/test_api/test_api.py	/^def test_goto_definitions_on_non_name():$/;"	f
test_goto_following_on_imports	jedi/test/test_integration_import.py	/^def test_goto_following_on_imports():$/;"	f
test_hex_values_in_docstring	jedi/test/test_parser/test_parser.py	/^def test_hex_values_in_docstring():$/;"	f
test_identifier_contains_unicode	jedi/test/test_parser/test_tokenize.py	/^    def test_identifier_contains_unicode(self):$/;"	m	class:TokenTest
test_if	jedi/test/test_parser/test_fast_parser.py	/^def test_if():$/;"	f
test_if_simple	jedi/test/test_parser/test_fast_parser.py	/^def test_if_simple():$/;"	f
test_illegal_forward_references	jedi/test/test_evaluate/test_annotations.py	/^def test_illegal_forward_references(reference):$/;"	f
test_import	jedi/test/test_api/test_classes.py	/^    def test_import(self):$/;"	m	class:TestGotoAssignments
test_import	jedi/test/test_api/test_classes.py	/^    def test_import(self):$/;"	m	class:TestIsDefinition
test_import	jedi/test/test_utils.py	/^    def test_import(self):$/;"	m	class:TestSetupReadline
test_import_alias	jedi/test/test_api/test_classes.py	/^    def test_import_alias(self):$/;"	m	class:TestGotoAssignments
test_import_completion_docstring	jedi/test/test_evaluate/test_imports.py	/^def test_import_completion_docstring():$/;"	f
test_import_empty	jedi/test/test_api/test_api_classes_follow_definition.py	/^def test_import_empty():$/;"	f
test_import_names	jedi/test/test_parser/test_parser.py	/^    def test_import_names(self):$/;"	m	class:TestImports
test_import_not_in_sys_path	jedi/test/test_evaluate/test_imports.py	/^def test_import_not_in_sys_path():$/;"	f
test_import_priorities	jedi/test/completion/imports.py	/^def test_import_priorities():$/;"	f
test_import_unique	jedi/test/test_evaluate/test_imports.py	/^def test_import_unique():$/;"	f
test_import_usage	jedi/test/test_api/test_usages.py	/^def test_import_usage():$/;"	f
test_imports	jedi/test/test_api/test_full_name.py	/^    def test_imports(self):$/;"	m	class:TestFullDefinedName
test_imports_on_global_namespace_without_path	jedi/test/test_integration_import.py	/^def test_imports_on_global_namespace_without_path():$/;"	f
test_in_function	jedi/test/test_api/test_call_signatures.py	/^def test_in_function():$/;"	f
test_in_whitespace	jedi/test/test_api/test_completion_context.py	/^def test_in_whitespace():$/;"	f
test_incomplete_function	jedi/test/test_parser/test_fast_parser.py	/^def test_incomplete_function():$/;"	f
test_incomplete_list_comprehension	jedi/test/test_parser/test_parser.py	/^def test_incomplete_list_comprehension():$/;"	f
test_init_extension_module	jedi/test/test_evaluate/test_extension.py	/^def test_init_extension_module():$/;"	f
test_is_generator	jedi/test/test_parser/test_parser_tree.py	/^    def test_is_generator(self, node, expected):$/;"	m	class:TestsFunctionAndLambdaParsing
test_is_keyword	jedi/test/test_api/test_classes.py	/^def test_is_keyword():$/;"	f
test_issue436	jedi/test/test_integration_analysis.py	/^def test_issue436():$/;"	f
test_issue_57	jedi/test/test_api/test_call_signatures.py	/^    def test_issue_57(self):$/;"	m	class:TestCallSignatures
test_keyword	jedi/test/test_integration_keyword.py	/^def test_keyword():$/;"	f
test_keyword_argument_index	jedi/test/test_api/test_call_signatures.py	/^def test_keyword_argument_index():$/;"	f
test_keyword_doc	jedi/test/blabla_test_documentation.py	/^def test_keyword_doc():$/;"	f
test_lambda	jedi/test/blabla_test_documentation.py	/^def test_lambda():$/;"	f
test_lambda_forward_references	jedi/test/test_evaluate/test_annotations.py	/^def test_lambda_forward_references():$/;"	f
test_lambda_params	jedi/test/test_api/test_call_signatures.py	/^def test_lambda_params():$/;"	f
test_line_number_errors	jedi/test/test_api/test_api.py	/^def test_line_number_errors():$/;"	f
test_list	jedi/test/test_api/test_interpreter.py	/^    def test_list(self):$/;"	m	class:TestInterpreterAPI
test_literal_type	jedi/test/test_parser/test_parser.py	/^    def test_literal_type(self):$/;"	m	class:TestCallAndName
test_loading_unicode_files_with_bad_global_charset	jedi/test/test_regression.py	/^def test_loading_unicode_files_with_bad_global_charset(monkeypatch, tmpdir):$/;"	f
test_local_import	jedi/test/test_utils.py	/^    def test_local_import(self):$/;"	m	class:TestSetupReadline
test_local_names	jedi/test/test_api/test_full_name.py	/^    def test_local_names(self):$/;"	m	class:TestFullDefinedName
test_magic_methods	jedi/test/test_utils.py	/^    def test_magic_methods(self):$/;"	m	class:TestSetupReadline
test_matrix_multiplication_operator	jedi/test/test_parser/test_pgen2.py	/^    def test_matrix_multiplication_operator(self):$/;"	m	class:TestMatrixMultiplication
test_method	jedi/test/completion/pep0484.py	/^    def test_method(self, x: "SelfReference") -> "SelfReference":$/;"	m	class:SelfReference
test_method_completion	jedi/test/test_evaluate/test_compiled.py	/^def test_method_completion():$/;"	f
test_module	jedi/test/test_parser/test_parser.py	/^def test_module():$/;"	f
test_modulepickling_change_cache_dir	jedi/test/test_cache.py	/^def test_modulepickling_change_cache_dir(monkeypatch, tmpdir):$/;"	f
test_modulepickling_delete_incompatible_cache	jedi/test/test_cache.py	/^def test_modulepickling_delete_incompatible_cache():$/;"	f
test_modules	jedi/test/test_utils.py	/^    def test_modules(self):$/;"	m	class:TestSetupReadline
test_more_complicated	jedi/test/test_api/test_call_signatures.py	/^    def test_more_complicated(self):$/;"	m	class:TestCallSignatures
test_multi_line_for	jedi/test/test_parser/test_fast_parser.py	/^def test_multi_line_for():$/;"	f
test_multi_line_params	jedi/test/test_parser/test_fast_parser.py	/^def test_multi_line_params():$/;"	f
test_multibyte_script	jedi/test/test_api/test_unicode.py	/^def test_multibyte_script():$/;"	f
test_multiline_bytes_literals	jedi/test/test_parser/test_pgen2.py	/^    def test_multiline_bytes_literals(self):$/;"	m	class:TestLiterals
test_multiline_bytes_tripquote_literals	jedi/test/test_parser/test_pgen2.py	/^    def test_multiline_bytes_tripquote_literals(self):$/;"	m	class:TestLiterals
test_multiline_str_literals	jedi/test/test_parser/test_pgen2.py	/^    def test_multiline_str_literals(self):$/;"	m	class:TestLiterals
test_multiple_assignment	jedi/test/test_api/test_defined_names.py	/^    def test_multiple_assignment(self):$/;"	m	class:TestDefinedNames
test_multiple_docstrings	jedi/test/test_evaluate/test_docstring.py	/^    def test_multiple_docstrings(self):$/;"	m	class:TestDocstring
test_multiple_imports	jedi/test/test_api/test_defined_names.py	/^    def test_multiple_imports(self):$/;"	m	class:TestDefinedNames
test_multiple_signatures	jedi/test/test_api/test_call_signatures.py	/^    def test_multiple_signatures(self):$/;"	m	class:TestCallSignatures
test_name	jedi/test/test_api/test_classes.py	/^    def test_name(self):$/;"	m	class:TestIsDefinition
test_name	jedi/test/test_parser/test_parser_tree.py	/^    def test_name(self, node, expected):$/;"	m	class:TestsFunctionAndLambdaParsing
test_name_and_call_positions	jedi/test/test_parser/test_parser.py	/^    def test_name_and_call_positions(self):$/;"	m	class:TestCallAndName
test_named_import	jedi/test/test_integration_import.py	/^def test_named_import():$/;"	f
test_named_params	jedi/test/test_api/test_classes.py	/^    def test_named_params(self):$/;"	m	class:TestGotoAssignments
test_namedtuple_list	jedi/test/test_integration_stdlib.py	/^def test_namedtuple_list():$/;"	f
test_namedtuple_str	jedi/test/test_integration_stdlib.py	/^def test_namedtuple_str(letter, expected):$/;"	f
test_names_twice	jedi/test/test_api/test_defined_names.py	/^def test_names_twice():$/;"	f
test_namespace_package	jedi/test/test_evaluate/test_namespace_package.py	/^def test_namespace_package():$/;"	f
test_nested	jedi/test/test_utils.py	/^    def test_nested(self):$/;"	m	class:TestSetupReadline
test_nested_class	jedi/test/test_api/test_defined_names.py	/^    def test_nested_class(self):$/;"	m	class:TestDefinedNames
test_nested_definitions	jedi/test/test_api/test_defined_names.py	/^    def test_nested_definitions(self):$/;"	m	class:TestDefinedNames
test_nested_funcs	jedi/test/test_parser/test_fast_parser.py	/^def test_nested_funcs():$/;"	f
test_nested_namespace_package	jedi/test/test_evaluate/test_namespace_package.py	/^def test_nested_namespace_package():$/;"	f
test_nested_resolve	jedi/test/test_api/test_interpreter.py	/^def test_nested_resolve():$/;"	f
test_new	jedi/test/test_parser/test_pgen2.py	/^    def test_new(self):$/;"	m	class:TestExcept
test_new_binary_notation	jedi/test/test_parser/test_pgen2.py	/^    def test_new_binary_notation(self):$/;"	m	class:TestNumericLiterals
test_new_octal_notation	jedi/test/test_parser/test_pgen2.py	/^    def test_new_octal_notation(self):$/;"	m	class:TestNumericLiterals
test_new_syntax	jedi/test/test_parser/test_pgen2.py	/^    def test_new_syntax(self):$/;"	m	class:TestClassDef
test_newline_positions	jedi/test/test_parser/test_parser.py	/^def test_newline_positions():$/;"	f
test_no_duplicate_modules	jedi/test/test_jedi_system.py	/^def test_no_duplicate_modules():$/;"	f
test_no_explicit_absolute_imports	jedi/test/test_evaluate/test_absolute_import.py	/^def test_no_explicit_absolute_imports():$/;"	f
test_no_signature	jedi/test/test_api/test_call_signatures.py	/^def test_no_signature():$/;"	f
test_no_statement_parent	jedi/test/test_regression.py	/^    def test_no_statement_parent(self):$/;"	m	class:TestRegression
test_not_importable_file	jedi/test/test_evaluate/test_imports.py	/^def test_not_importable_file():$/;"	f
test_numpydoc_alternative_types	jedi/test/test_evaluate/test_docstring.py	/^    def test_numpydoc_alternative_types(self):$/;"	m	class:TestDocstring
test_numpydoc_docstring	jedi/test/test_evaluate/test_docstring.py	/^    def test_numpydoc_docstring(self):$/;"	m	class:TestDocstring
test_numpydoc_docstring_set_of_values	jedi/test/test_evaluate/test_docstring.py	/^    def test_numpydoc_docstring_set_of_values(self):$/;"	m	class:TestDocstring
test_old	jedi/test/test_parser/test_pgen2.py	/^    def test_old(self):$/;"	m	class:TestExcept
test_on_function	jedi/test/test_api/test_classes.py	/^    def test_on_function(self):$/;"	m	class:TestParent
test_one_statement_func	jedi/test/test_parser/test_fast_parser.py	/^def test_one_statement_func():$/;"	f
test_open_parentheses	jedi/test/test_parser/test_fast_parser.py	/^def test_open_parentheses():$/;"	f
test_operator_doc	jedi/test/blabla_test_documentation.py	/^def test_operator_doc(self):$/;"	f
test_operators	jedi/test/test_parser/test_get_code.py	/^def test_operators():$/;"	f
test_os_nowait	jedi/test/test_regression.py	/^    def test_os_nowait(self):$/;"	m	class:TestRegression
test_os_path_join	jedi/test/test_api/test_full_name.py	/^    def test_os_path_join(self):$/;"	m	class:MixinTestFullName
test_os_path_join	jedi/test/test_speed.py	/^    def test_os_path_join(self):$/;"	m	class:TestSpeed
test_param_completion	jedi/test/test_api/test_interpreter.py	/^    def test_param_completion(self):$/;"	m	class:TestInterpreterAPI
test_param_endings	jedi/test/test_api/test_classes.py	/^def test_param_endings():$/;"	f
test_param_name	jedi/test/test_api/test_call_signatures.py	/^    def test_param_name(self):$/;"	m	class:TestParams
test_param_splitting	jedi/test/test_parser/test_parser.py	/^def test_param_splitting():$/;"	f
test_params	jedi/test/test_parser/test_parser_tree.py	/^    def test_params(self, node, expected):$/;"	m	class:TestsFunctionAndLambdaParsing
test_parent	jedi/test/test_api/test_classes.py	/^    def test_parent(self):$/;"	m	class:TestParent
test_parent_dir_with_file	jedi/test/test_evaluate/test_buildout_detection.py	/^def test_parent_dir_with_file():$/;"	f
test_parent_on_completion	jedi/test/test_api/test_classes.py	/^    def test_parent_on_completion(self):$/;"	m	class:TestParent
test_parentheses	jedi/test/test_api/test_classes.py	/^    def test_parentheses(self):$/;"	m	class:TestGotoAssignments
test_parentheses_in_string	jedi/test/test_parser/test_fast_parser.py	/^def test_parentheses_in_string():$/;"	f
test_parse_function_doc_illegal_docstr	jedi/test/test_evaluate/test_compiled.py	/^def test_parse_function_doc_illegal_docstr():$/;"	f
test_path_from_invalid_sys_path_assignment	jedi/test/test_evaluate/test_buildout_detection.py	/^def test_path_from_invalid_sys_path_assignment():$/;"	f
test_path_from_sys_path_assignment	jedi/test/test_evaluate/test_buildout_detection.py	/^def test_path_from_sys_path_assignment():$/;"	f
test_path_issues	jedi/test/test_windows.py	/^def test_path_issues():$/;"	f
test_paths_from_assignment	jedi/test/test_evaluate/test_sys_path.py	/^def test_paths_from_assignment():$/;"	f
test_points_in_completion	jedi/test/test_regression.py	/^    def test_points_in_completion(self):$/;"	m	class:TestRegression
test_position_none_if_builtin	jedi/test/test_api/test_classes.py	/^def test_position_none_if_builtin():$/;"	f
test_positions	jedi/test/test_parser/test_fast_parser.py	/^def test_positions():$/;"	f
test_precedence_slowdown	jedi/test/test_speed.py	/^    def test_precedence_slowdown(self):$/;"	m	class:TestSpeed
test_preexisting_values	jedi/test/test_utils.py	/^    def test_preexisting_values(self):$/;"	m	class:TestSetupReadline
test_preload_modules	jedi/test/test_api/test_api.py	/^def test_preload_modules():$/;"	f
test_property_error	jedi/test/test_api/test_interpreter.py	/^    def test_property_error(self):$/;"	m	class:TestInterpreterAPI
test_pyc	jedi/test/test_evaluate/test_pyc.py	/^def test_pyc():$/;"	f
test_python2_octal	jedi/test/test_parser/test_parser.py	/^def test_python2_octal():$/;"	f
test_python3_octal	jedi/test/test_parser/test_parser.py	/^def test_python3_octal():$/;"	f
test_quoted_strings	jedi/test/test_parser/test_tokenize.py	/^    def test_quoted_strings(self):$/;"	m	class:TokenTest
test_refactor	jedi/test/test_integration.py	/^def test_refactor(refactor_case):$/;"	f
test_repetition	jedi/test/test_api/test_classes.py	/^    def test_repetition(self):$/;"	m	class:TestGotoAssignments
test_return	jedi/test/test_api/test_call_signatures.py	/^    def test_return(self):$/;"	m	class:TestCallSignatures
test_round_trip	jedi/test/test_parser/test_fast_parser.py	/^def test_round_trip():$/;"	f
test_scipy_speed	jedi/test/test_speed.py	/^    def test_scipy_speed(self):$/;"	m	class:TestSpeed
test_settings_module	jedi/test/test_jedi_system.py	/^def test_settings_module():$/;"	f
test_side_effect_completion	jedi/test/test_api/test_interpreter.py	/^def test_side_effect_completion():$/;"	f
test_signature_is_definition	jedi/test/test_api/test_call_signatures.py	/^def test_signature_is_definition():$/;"	f
test_signature_params	jedi/test/test_api/test_classes.py	/^def test_signature_params():$/;"	f
test_simple	jedi/test/test_api/test_call_signatures.py	/^    def test_simple(self):$/;"	m	class:TestCallSignatures
test_simple	jedi/test/test_debug.py	/^def test_simple():$/;"	f
test_simple	jedi/test/test_evaluate/test_compiled.py	/^def test_simple():$/;"	f
test_simple	jedi/test/test_utils.py	/^    def test_simple(self):$/;"	m	class:TestSetupReadline
test_simple_annotations	jedi/test/test_evaluate/test_annotations.py	/^def test_simple_annotations():$/;"	f
test_simple_no_whitespace	jedi/test/test_parser/test_tokenize.py	/^    def test_simple_no_whitespace(self):$/;"	m	class:TokenTest
test_simple_with_whitespace	jedi/test/test_parser/test_tokenize.py	/^    def test_simple_with_whitespace(self):$/;"	m	class:TokenTest
test_slice	jedi/test/test_api/test_interpreter.py	/^    def test_slice(self):$/;"	m	class:TestInterpreterAPI
test_source_to_unicode_unicode_text	jedi/test/test_regression.py	/^    def test_source_to_unicode_unicode_text(self):$/;"	m	class:TestRegression
test_split_params_with_separation_star	jedi/test/test_parser/test_param_splitting.py	/^def test_split_params_with_separation_star():$/;"	f
test_split_params_with_stars	jedi/test/test_parser/test_param_splitting.py	/^def test_split_params_with_stars():$/;"	f
test_split_parts	jedi/test/test_parser/test_fast_parser.py	/^def test_split_parts():$/;"	f
test_star_import_cache_duration	jedi/test/test_cache.py	/^def test_star_import_cache_duration():$/;"	f
test_started_lambda_stmt	jedi/test/test_parser/test_parser.py	/^def test_started_lambda_stmt():$/;"	f
test_static_analysis	jedi/test/test_integration.py	/^def test_static_analysis(static_analysis_case):$/;"	f
test_stmt	jedi/test/test_api/test_classes.py	/^    def test_stmt(self):$/;"	m	class:TestIsDefinition
test_strange_parentheses	jedi/test/test_parser/test_fast_parser.py	/^def test_strange_parentheses():$/;"	f
test_string_literals	jedi/test/test_evaluate/test_compiled.py	/^def test_string_literals():$/;"	f
test_string_literals	jedi/test/test_parser/test_fast_parser.py	/^def test_string_literals():$/;"	f
test_sub_module	jedi/test/test_api/test_full_name.py	/^def test_sub_module():$/;"	f
test_subscope_names	jedi/test/test_parser/test_parser.py	/^    def test_subscope_names(self):$/;"	m	class:TestSubscopes
test_sys_path_with_modifications	jedi/test/test_evaluate/test_buildout_detection.py	/^def test_sys_path_with_modifications():$/;"	f
test_tokenizer_with_string_literal_backslash	jedi/test/test_parser/test_tokenize.py	/^def test_tokenizer_with_string_literal_backslash():$/;"	f
test_tuple_mapping	jedi/test/test_api/test_full_name.py	/^    def test_tuple_mapping(self):$/;"	m	class:TestFullNameWithGotoDefinitions
test_type	jedi/test/test_api/test_classes.py	/^def test_type():$/;"	f
test_unicode_attribute	jedi/test/test_api/test_unicode.py	/^def test_unicode_attribute():$/;"	f
test_unicode_script	jedi/test/test_api/test_unicode.py	/^def test_unicode_script():$/;"	f
test_unicode_string	jedi/test/test_parser/test_parser.py	/^def test_unicode_string():$/;"	f
test_unterminated_strings	jedi/test/test_api/test_call_signatures.py	/^    def test_unterminated_strings(self):$/;"	m	class:TestCallSignatures
test_ur_literals	jedi/test/test_parser/test_tokenize.py	/^def test_ur_literals():$/;"	f
test_usage_description	jedi/test/test_api/test_api.py	/^def test_usage_description():$/;"	f
test_user_statement_on_import	jedi/test/test_parser/test_parser.py	/^def test_user_statement_on_import():$/;"	f
test_valid_call	jedi/test/test_api/test_call_signatures.py	/^    def test_valid_call(self):$/;"	m	class:TestCallSignatures
test_version_info	jedi/test/test_utils.py	/^def test_version_info():$/;"	f
test_whitespace_before_bracket	jedi/test/test_api/test_call_signatures.py	/^    def test_whitespace_before_bracket(self):$/;"	m	class:TestCallSignatures
test_wrong_indentation	jedi/test/test_parser/test_fast_parser.py	/^def test_wrong_indentation():$/;"	f
test_yield_from	jedi/test/test_parser/test_pgen2.py	/^    def test_yield_from(self):$/;"	m	class:TestYieldFrom
test_yields	jedi/test/test_parser/test_parser_tree.py	/^    def test_yields(self, node, expected):$/;"	m	class:TestsFunctionAndLambdaParsing
testdict	jedi/test/completion/pep0484_typing.py	/^def testdict(x):$/;"	f
tests_fail	jedi/test/run.py	/^    tests_fail = 0$/;"	v
texinfo_documents	jedi/docs/conf.py	/^texinfo_documents = [$/;"	v
textdialog	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:textdialog(str)$/;"	f
textwrap	jedi/jedi/parser/tree.py	/^import textwrap$/;"	i
textwrap	jedi/test/test_api/test_full_name.py	/^import textwrap$/;"	i
textwrap	jedi/test/test_regression.py	/^import textwrap$/;"	i
the_pkg	jedi/test/completion/import_tree/__init__.py	/^the_pkg = invisible_pkg$/;"	v
third	jedi/test/completion/dynamic_arrays.py	/^def third():$/;"	f
time	Conque-GDB/autoload/conque_term/conque.py	/^import time$/;"	i
time	Conque-GDB/autoload/conque_term/conque_sole_communicator.py	/^import time$/;"	i
time	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^import time$/;"	i
time	Conque-GDB/autoload/conque_term/conque_sole_wrapper.py	/^import time$/;"	i
time	jedi/jedi/cache.py	/^import time$/;"	i
time	jedi/jedi/debug.py	/^import time$/;"	i
time	jedi/jedi/parser/utils.py	/^import time$/;"	i
time	jedi/scripts/memory_check.py	/^import time$/;"	i
time	jedi/scripts/profile.py	/^import time$/;"	i
time	jedi/scripts/wx_check.py	/^import time$/;"	i
time	jedi/test/completion/complex.py	/^import time$/;"	i
time	jedi/test/completion/imports.py	/^    import time$/;"	i
time	jedi/test/completion/on_import.py	/^from datetime.time import time$/;"	i
time	jedi/test/run.py	/^    import time$/;"	i
time	jedi/test/test_api/test_call_signatures.py	/^        run("import time; abc = time; abc.sleep(", 'sleep', 0)$/;"	i
time	jedi/test/test_cache.py	/^import time$/;"	i
time	jedi/test/test_speed.py	/^import time$/;"	i
time_cache	jedi/jedi/api/helpers.py	/^from jedi.cache import time_cache$/;"	i
time_cache	jedi/jedi/cache.py	/^def time_cache(time_add_setting):$/;"	f
timedel	jedi/test/completion/on_import.py	/^from datetime import timedel$/;"	i
timedel	jedi/test/completion/on_import.py	/^from datetime.timedel import timedel$/;"	i
timedelta	jedi/test/test_api/test_classes.py	/^    assert get_types('from datetime import timedelta') == set(['class'])$/;"	i
timedelta	jedi/test/test_api/test_classes.py	/^    assert get_types('from datetime import timedelta; timedelta') == set(['class'])$/;"	i
to_list	jedi/jedi/common.py	/^def to_list(func):$/;"	f
to_list	jedi/test/completion/recursion.py	/^def to_list(iterable):$/;"	f
to_str	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:CHAR_INFO
to_str	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:CHAR_UNION
to_str	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:CONSOLE_SCREEN_BUFFER_INFO
to_str	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:COORD
to_str	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:FOCUS_EVENT_RECORD
to_str	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:INPUT_RECORD
to_str	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:INPUT_UNION
to_str	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:KEY_EVENT_RECORD
to_str	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:MEMORY_BASIC_INFORMATION
to_str	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:MENU_EVENT_RECORD
to_str	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:MOUSE_EVENT_RECORD
to_str	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:PROCESS_INFORMATION
to_str	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:SECURITY_ATTRIBUTES
to_str	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:SMALL_RECT
to_str	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:STARTUPINFO
to_str	Conque-GDB/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:WINDOW_BUFFER_SIZE_RECORD
today	jedi/test/static_analysis/imports.py	/^from datetime.date import today$/;"	i
todo_include_todos	jedi/docs/conf.py	/^todo_include_todos = False$/;"	v
toggleIgnoreFilter	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleIgnoreFilter()$/;"	f
toggleShowBookmarks	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowBookmarks()$/;"	f
toggleShowFiles	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowFiles()$/;"	f
toggleShowHidden	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowHidden()$/;"	f
toggleZoom	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleZoom()$/;"	f
toggle_off	vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:toggle_off()$/;"	f
toggle_on	vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:toggle_on()$/;"	f
toggle_prompt	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    def toggle_prompt(self):$/;"	m	class:ConqueGdb
tok_name	jedi/jedi/parser/tokenize.py	/^from jedi.parser.token import (tok_name, N_TOKENS, ENDMARKER, STRING, NUMBER, opmap,$/;"	i
token	jedi/jedi/api/completion.py	/^from jedi.parser import token$/;"	i
token	jedi/jedi/parser/pgen2/pgen.py	/^from jedi.parser import token$/;"	i
token	jedi/jedi/parser/tree.py	/^from jedi.parser import token$/;"	i
token_to_ilabel	jedi/jedi/parser/pgen2/parse.py	/^def token_to_ilabel(grammar, type_, value):$/;"	f
tokenize	jedi/jedi/api/helpers.py	/^from jedi.parser import tokenize$/;"	i
tokenize	jedi/jedi/parser/__init__.py	/^from jedi.parser import tokenize$/;"	i
tokenize	jedi/jedi/parser/pgen2/parse.py	/^from jedi.parser import tokenize$/;"	i
tokenize	jedi/jedi/parser/pgen2/pgen.py	/^from jedi.parser import tokenize$/;"	i
tokenize	jedi/test/completion/imports.py	/^import tokenize$/;"	i
tokenize	jedi/test/test_parser/test_tokenize.py	/^from jedi.parser import ParserWithRecovery, load_grammar, tokenize$/;"	i
tokenize_without_endmarker	jedi/jedi/api/helpers.py	/^    def tokenize_without_endmarker(code):$/;"	f	function:get_stack_at_position
tool	jedi/test/test_api/test_classes.py	/^    assert get_types('from json import tool') == set(['module'])$/;"	i
tool	jedi/test/test_api/test_classes.py	/^    assert get_types('from json import tool; tool') == set(['module'])$/;"	i
tool	jedi/test/test_api/test_classes.py	/^    assert get_types('import json.tool') == set(['module'])$/;"	i
tool	jedi/test/test_api/test_classes.py	/^    assert get_types('import json.tool', column=9) == set(['module'])$/;"	i
tool	jedi/test/test_api/test_classes.py	/^    assert get_types('import json.tool; json') == set(['module'])$/;"	i
tool	jedi/test/test_api/test_classes.py	/^    assert get_types('import json.tool; json.tool') == set(['module'])$/;"	i
tool	jedi/test/test_api/test_classes.py	/^    assert get_types('import json.tool; json.tool.main') == set(['function'])$/;"	i
top	Conque-GDB/autoload/conque_term/conque.py	/^    top = 1 # relative to top of screen$/;"	v	class:Conque
top	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    top = 0$/;"	v	class:ConqueSoleSubprocess
top	jedi/jedi/evaluate/imports.py	/^                        debug.warning('Attempted relative import beyond top-level package.')$/;"	i
traceback	jedi/jedi/__main__.py	/^                import traceback$/;"	i
traceback	jedi/jedi/evaluate/site.py	/^                import traceback$/;"	i
traceback	jedi/jedi/utils.py	/^import traceback$/;"	i
traceback	jedi/sith.py	/^import traceback$/;"	i
traceback	jedi/test/run.py	/^    import traceback$/;"	i
translate_color	Conque-GDB/autoload/conque_term/conque_sole.py	/^    def translate_color(self, attr):$/;"	m	class:ConqueSole
traverse_parents	jedi/jedi/evaluate/sys_path.py	/^def traverse_parents(path):$/;"	f
tree	jedi/jedi/api/__init__.py	/^from jedi.parser import tree$/;"	i
tree	jedi/jedi/api/classes.py	/^from jedi.parser import tree$/;"	i
tree	jedi/jedi/api/completion.py	/^from jedi.parser import tree$/;"	i
tree	jedi/jedi/api/usages.py	/^from jedi.parser import tree$/;"	i
tree	jedi/jedi/evaluate/__init__.py	/^from jedi.parser import tree$/;"	i
tree	jedi/jedi/evaluate/analysis.py	/^from jedi.parser import tree$/;"	i
tree	jedi/jedi/evaluate/dynamic.py	/^from jedi.parser import tree$/;"	i
tree	jedi/jedi/evaluate/finder.py	/^from jedi.parser import tree$/;"	i
tree	jedi/jedi/evaluate/flow_analysis.py	/^from jedi.parser import tree$/;"	i
tree	jedi/jedi/evaluate/helpers.py	/^from jedi.parser import tree$/;"	i
tree	jedi/jedi/evaluate/imports.py	/^        self._import = name.get_parent_until(tree.Import)$/;"	i
tree	jedi/jedi/evaluate/imports.py	/^from jedi.parser import tree$/;"	i
tree	jedi/jedi/evaluate/iterable.py	/^from jedi.parser import tree$/;"	i
tree	jedi/jedi/evaluate/param.py	/^from jedi.parser import tree$/;"	i
tree	jedi/jedi/evaluate/pep0484.py	/^    Parser, load_grammar, ParseError, ParserWithRecovery, tree$/;"	i
tree	jedi/jedi/evaluate/precedence.py	/^from jedi.parser import tree$/;"	i
tree	jedi/jedi/evaluate/representation.py	/^from jedi.parser import tree$/;"	i
tree	jedi/jedi/evaluate/stdlib.py	/^from jedi.parser import tree$/;"	i
tree	jedi/jedi/evaluate/sys_path.py	/^from jedi.parser import tree$/;"	i
tree	jedi/jedi/parser/fast.py	/^from jedi.parser import tree$/;"	i
tricky_decorator	jedi/test/completion/dynamic_params.py	/^def tricky_decorator(func):$/;"	f
triple	jedi/jedi/parser/tokenize.py	/^triple = group("[uUbB]?[rR]?'''", '[uUbB]?[rR]?"""')$/;"	v
triple_quoted	jedi/jedi/parser/tokenize.py	/^triple_quoted = {}$/;"	v
try_except	jedi/test/completion/flow_analysis.py	/^def try_except(x):$/;"	f
try_iter_content	jedi/jedi/api/__init__.py	/^from jedi.evaluate.param import try_iter_content$/;"	i
try_iter_content	jedi/jedi/evaluate/param.py	/^def try_iter_content(types, depth=0):$/;"	f
tty	Conque-GDB/autoload/conque_term/conque_subprocess.py	/^import tty$/;"	i
tup	jedi/test/completion/stdlib.py	/^tup = kw(1)$/;"	v
tup	jedi/test/completion/types.py	/^tup = ('',2)$/;"	v
tup2	jedi/test/completion/types.py	/^tup2 = tuple()$/;"	v
tup3	jedi/test/completion/types.py	/^tup3 = 1,""$/;"	v
tup4	jedi/test/completion/types.py	/^tup4 = 1,""$/;"	v
tuple	jedi/test/completion/pep0484_typing.py	/^def tuple(p, q, r):$/;"	f
two_dots	jedi/test/completion/docstring.py	/^def two_dots(a):$/;"	f
two_params	jedi/test/static_analysis/arguments.py	/^def two_params(x, y):$/;"	f
typ	jedi/test/test_evaluate/test_compiled.py	/^    def typ(string):$/;"	f	function:test_string_literals
type	jedi/jedi/api/classes.py	/^    def type(self):$/;"	m	class:BaseDefinition
type	jedi/jedi/api/classes.py	/^    def type(self):$/;"	m	class:Completion
type	jedi/jedi/api/interpreter.py	/^    type = 'mixed_module'$/;"	v	class:MixedModule
type	jedi/jedi/api/keywords.py	/^    type = 'completion_keyword'$/;"	v	class:Keyword
type	jedi/jedi/evaluate/compiled/__init__.py	/^    def type(self):$/;"	m	class:CompiledObject
type	jedi/jedi/evaluate/iterable.py	/^    type = 'dict'$/;"	v	class:DictComprehension
type	jedi/jedi/evaluate/iterable.py	/^    type = 'list'$/;"	v	class:ListComprehension
type	jedi/jedi/evaluate/iterable.py	/^    type = 'set'$/;"	v	class:SetComprehension
type	jedi/jedi/evaluate/iterable.py	/^    type = None$/;"	v	class:GeneratorMixin
type	jedi/jedi/evaluate/representation.py	/^    type = 'funcdef'$/;"	v	class:FunctionExecution
type	jedi/jedi/parser/fast.py	/^    type = 'file_input'$/;"	v	class:FastModule
type	jedi/jedi/parser/tree.py	/^    def type(self):$/;"	m	class:KeywordStatement
type	jedi/jedi/parser/tree.py	/^    def type(self):$/;"	m	class:YieldExpr
type	jedi/jedi/parser/tree.py	/^    type = 'classdef'$/;"	v	class:Class
type	jedi/jedi/parser/tree.py	/^    type = 'comp_for'$/;"	v	class:CompFor
type	jedi/jedi/parser/tree.py	/^    type = 'decorator'$/;"	v	class:Decorator
type	jedi/jedi/parser/tree.py	/^    type = 'dedent'$/;"	v	class:Dedent
type	jedi/jedi/parser/tree.py	/^    type = 'endmarker'$/;"	v	class:EndMarker
type	jedi/jedi/parser/tree.py	/^    type = 'error_leaf'$/;"	v	class:ErrorLeaf
type	jedi/jedi/parser/tree.py	/^    type = 'error_node'$/;"	v	class:ErrorNode
type	jedi/jedi/parser/tree.py	/^    type = 'expr_stmt'$/;"	v	class:ExprStmt
type	jedi/jedi/parser/tree.py	/^    type = 'file_input'$/;"	v	class:Module
type	jedi/jedi/parser/tree.py	/^    type = 'for_stmt'$/;"	v	class:ForStmt
type	jedi/jedi/parser/tree.py	/^    type = 'funcdef'$/;"	v	class:Function
type	jedi/jedi/parser/tree.py	/^    type = 'if_stmt'$/;"	v	class:IfStmt
type	jedi/jedi/parser/tree.py	/^    type = 'import_from'$/;"	v	class:ImportFrom
type	jedi/jedi/parser/tree.py	/^    type = 'import_name'$/;"	v	class:ImportName
type	jedi/jedi/parser/tree.py	/^    type = 'indent'$/;"	v	class:Indent
type	jedi/jedi/parser/tree.py	/^    type = 'keyword'$/;"	v	class:Keyword
type	jedi/jedi/parser/tree.py	/^    type = 'lambda'$/;"	v	class:Lambda
type	jedi/jedi/parser/tree.py	/^    type = 'name'$/;"	v	class:Name
type	jedi/jedi/parser/tree.py	/^    type = 'newline'$/;"	v	class:Newline
type	jedi/jedi/parser/tree.py	/^    type = 'number'$/;"	v	class:Number
type	jedi/jedi/parser/tree.py	/^    type = 'operator'$/;"	v	class:Operator
type	jedi/jedi/parser/tree.py	/^    type = 'param'$/;"	v	class:Param
type	jedi/jedi/parser/tree.py	/^    type = 'string'$/;"	v	class:String
type	jedi/jedi/parser/tree.py	/^    type = 'try_stmt'$/;"	v	class:TryStmt
type	jedi/jedi/parser/tree.py	/^    type = 'while_stmt'$/;"	v	class:WhileStmt
type	jedi/jedi/parser/tree.py	/^    type = 'with_stmt'$/;"	v	class:WithStmt
type	jedi/jedi/parser/tree.py	/^    type = None$/;"	v	class:BaseNode
types	jedi/jedi/evaluate/compiled/fake.py	/^import types$/;"	i
typing	jedi/test/completion/pep0484_typing.py	/^import typing$/;"	i
u	Conque-GDB/autoload/conque_term/conque_globals.py	/^def u(str_val, str_encoding='utf-8', errors='strict'):$/;"	f
u	jedi/jedi/_compatibility.py	/^    u = lambda s: s$/;"	v
u	jedi/jedi/_compatibility.py	/^    u = lambda s: s.decode('utf-8')$/;"	v
u	jedi/jedi/_compatibility.py	/^def u(string):$/;"	f
u	jedi/jedi/api/helpers.py	/^from jedi._compatibility import u$/;"	i
u	jedi/jedi/debug.py	/^from jedi._compatibility import encoding, is_py3, u$/;"	i
u	jedi/test/completion/descriptors.py	/^    def u(cls, x):$/;"	m	class:E
u	jedi/test/test_api/test_unicode.py	/^from jedi._compatibility import u, unicode$/;"	i
u	jedi/test/test_evaluate/test_absolute_import.py	/^from jedi._compatibility import u$/;"	i
u	jedi/test/test_evaluate/test_buildout_detection.py	/^from jedi._compatibility import u$/;"	i
u	jedi/test/test_new_parser.py	/^from jedi._compatibility import u$/;"	i
u	jedi/test/test_parser/test_fast_parser.py	/^from jedi._compatibility import u$/;"	i
u	jedi/test/test_parser/test_get_code.py	/^from jedi._compatibility import u$/;"	i
u	jedi/test/test_parser/test_parser.py	/^from jedi._compatibility import u, is_py3$/;"	i
u	jedi/test/test_parser/test_parser_tree.py	/^from jedi._compatibility import u, unicode$/;"	i
u	jedi/test/test_parser/test_tokenize.py	/^from jedi._compatibility import u, is_py3$/;"	i
u	jedi/test/test_regression.py	/^from jedi._compatibility import u$/;"	i
uchr	Conque-GDB/autoload/conque_term/conque_globals.py	/^def uchr(str):$/;"	f
undecorate	jedi/jedi/evaluate/dynamic.py	/^    def undecorate(typ):$/;"	f	function:search_function_call
undefined	jedi/test/completion/usages.py	/^import undefined$/;"	i
undefined_object	jedi/test/static_analysis/attribute_error.py	/^    def undefined_object(self, obj):$/;"	m	class:Cls
underscore	jedi/test/completion/imports.py	/^def underscore():$/;"	f
underscore_memoization	jedi/jedi/api/interpreter.py	/^from jedi.cache import underscore_memoization$/;"	i
underscore_memoization	jedi/jedi/cache.py	/^from jedi.parser.utils import underscore_memoization$/;"	i
underscore_memoization	jedi/jedi/evaluate/compiled/__init__.py	/^from jedi.cache import underscore_memoization, memoize_method$/;"	i
underscore_memoization	jedi/jedi/evaluate/compiled/mixed.py	/^from jedi.cache import underscore_memoization$/;"	i
underscore_memoization	jedi/jedi/evaluate/param.py	/^from jedi.cache import underscore_memoization$/;"	i
underscore_memoization	jedi/jedi/evaluate/representation.py	/^from jedi.cache import underscore_memoization, cache_star_import$/;"	i
underscore_memoization	jedi/jedi/parser/fast.py	/^from jedi.parser.utils import underscore_memoization, parser_cache$/;"	i
underscore_memoization	jedi/jedi/parser/tree.py	/^from jedi.parser.utils import underscore_memoization$/;"	i
underscore_memoization	jedi/jedi/parser/utils.py	/^def underscore_memoization(func):$/;"	f
unicode	jedi/jedi/_compatibility.py	/^    unicode = str$/;"	v
unicode	jedi/jedi/_compatibility.py	/^    unicode = unicode$/;"	v
unicode	jedi/jedi/api/__init__.py	/^from jedi._compatibility import unicode$/;"	i
unicode	jedi/jedi/api/classes.py	/^from jedi._compatibility import unicode, use_metaclass$/;"	i
unicode	jedi/jedi/api/usages.py	/^from jedi._compatibility import unicode$/;"	i
unicode	jedi/jedi/common.py	/^from jedi._compatibility import unicode, reraise$/;"	i
unicode	jedi/jedi/evaluate/compiled/__init__.py	/^from jedi._compatibility import builtins as _builtins, unicode$/;"	i
unicode	jedi/jedi/evaluate/compiled/fake.py	/^from jedi._compatibility import is_py3, builtins, unicode, is_py34$/;"	i
unicode	jedi/jedi/evaluate/dynamic.py	/^from jedi._compatibility import unicode$/;"	i
unicode	jedi/jedi/evaluate/finder.py	/^from jedi._compatibility import unicode$/;"	i
unicode	jedi/jedi/evaluate/imports.py	/^from jedi._compatibility import find_module, unicode$/;"	i
unicode	jedi/jedi/evaluate/iterable.py	/^from jedi._compatibility import use_metaclass, unicode, zip_longest$/;"	i
unicode	jedi/jedi/evaluate/param.py	/^from jedi._compatibility import unicode, zip_longest$/;"	i
unicode	jedi/jedi/evaluate/precedence.py	/^from jedi._compatibility import unicode$/;"	i
unicode	jedi/jedi/evaluate/representation.py	/^from jedi._compatibility import use_metaclass, unicode, Python3Method, is_py3$/;"	i
unicode	jedi/jedi/evaluate/stdlib.py	/^from jedi._compatibility import unicode$/;"	i
unicode	jedi/jedi/evaluate/sys_path.py	/^from jedi._compatibility import exec_function, unicode$/;"	i
unicode	jedi/test/run.py	/^from jedi._compatibility import unicode, is_py3$/;"	i
unicode	jedi/test/test_api/test_unicode.py	/^from jedi._compatibility import u, unicode$/;"	i
unicode	jedi/test/test_evaluate/test_sys_path.py	/^from jedi._compatibility import unicode$/;"	i
unicode	jedi/test/test_parser/test_parser_tree.py	/^from jedi._compatibility import u, unicode$/;"	i
unicode	jedi/test/test_parser/test_pgen2.py	/^from jedi._compatibility import unicode, is_py3$/;"	i
unicode_literals	jedi/sith.py	/^from __future__ import print_function, division, unicode_literals$/;"	i
unifystate	jedi/jedi/parser/pgen2/pgen.py	/^    def unifystate(self, old, new):$/;"	m	class:DFAState
union	jedi/test/completion/pep0484_typing.py	/^def union(p, q, r, s, t):$/;"	f
union2	jedi/test/completion/pep0484_typing.py	/^def union2(x: t.Union[int, str]):$/;"	f
union3	jedi/test/completion/pep0484_typing.py	/^def union3(x: Union[int, str]):$/;"	f
union4	jedi/test/completion/pep0484_typing.py	/^def union4(x: U[int, str]):$/;"	f
unite	jedi/jedi/common.py	/^def unite(iterable):$/;"	f
unite	jedi/jedi/evaluate/analysis.py	/^from jedi.common import unite$/;"	i
unite	jedi/jedi/evaluate/finder.py	/^from jedi.common import unite$/;"	i
unite	jedi/jedi/evaluate/iterable.py	/^from jedi.common import unite, safe_property$/;"	i
unite	jedi/jedi/evaluate/pep0484.py	/^from jedi.common import unite$/;"	i
unite	jedi/jedi/evaluate/stdlib.py	/^from jedi.common import unite$/;"	i
unittest	jedi/test/helpers.py	/^    import unittest$/;"	i
unittest	jedi/test/helpers.py	/^    import unittest2 as unittest$/;"	i
unittest	jedi/test/test_evaluate/absolute_import/local_module.py	/^import unittest$/;"	i
unittest	jedi/test/test_evaluate/test_docstring.py	/^from ..helpers import unittest$/;"	i
unittest	jedi/test/test_parser/test_tokenize.py	/^from ..helpers import unittest$/;"	i
unittest	jedi/test/test_utils.py	/^from .helpers import unittest, cwd_at$/;"	i
unmarksigns	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:unmarksigns()$/;"	f
unpack	jedi/jedi/evaluate/param.py	/^    def unpack(self, func=None):$/;"	m	class:Arguments
unpack_tuple_to_dict	jedi/jedi/api/__init__.py	/^from jedi.evaluate.iterable import unpack_tuple_to_dict$/;"	i
unpack_tuple_to_dict	jedi/jedi/evaluate/iterable.py	/^def unpack_tuple_to_dict(evaluator, types, exprlist):$/;"	f
unplace_sign	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    def unplace_sign(self, line):$/;"	m	class:ConqueGdb
unwrap_tables	Conque-GDB/autoload/conque_term/conque.py	/^    unwrap_tables = True$/;"	v	class:Conque
upDirCurrentRootClosed	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootClosed()$/;"	f
upDirCurrentRootOpen	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootOpen()$/;"	f
update	jedi/jedi/parser/fast.py	/^    def update(self, source):$/;"	m	class:FastParser
update	vim-airline/autoload/airline/extensions/wordcount.vim	/^function! s:update()$/;"	f
update_branch	vim-airline/autoload/airline/extensions/branch.vim	/^function! s:update_branch()$/;"	f
update_git_branch	vim-airline/autoload/airline/extensions/branch.vim	/^function! s:update_git_branch(path)$/;"	f
update_hg_branch	vim-airline/autoload/airline/extensions/branch.vim	/^function! s:update_hg_branch(path)$/;"	f
update_tabline	vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:update_tabline()$/;"	f
update_untracked	vim-airline/autoload/airline/extensions/branch.vim	/^function! s:update_untracked()$/;"	f
update_untracked_in_buffer_config	vim-airline/autoload/airline/extensions/branch.vim	/^function! s:update_untracked_in_buffer_config(file, vcs)$/;"	f
update_window	Conque-GDB/autoload/conque_term/conque.py	/^    def update_window(self, force=False):$/;"	m	class:Conque
update_window	Conque-GDB/autoload/conque_term/conque_sole.py	/^    def update_window(self, force=False):$/;"	m	class:ConqueSole
update_window_size	Conque-GDB/autoload/conque_term/conque.py	/^    def update_window_size(self, force=False):$/;"	m	class:Conque
update_window_size	Conque-GDB/autoload/conque_term/conque_sole.py	/^    def update_window_size(self, tell_subprocess = True):$/;"	m	class:ConqueSole
url	jedi/setup.py	/^      url='https:\/\/github.com\/davidhalter\/jedi',$/;"	v
urllib	jedi/scripts/wx_check.py	/^    import urllib.request as urllib2$/;"	i
urllib2	jedi/scripts/wx_check.py	/^    import urllib.request as urllib2$/;"	i
urllib2	jedi/scripts/wx_check.py	/^    import urllib2$/;"	i
usages	jedi/jedi/api/__init__.py	/^    def usages(self, additional_module_paths=()):$/;"	m	class:Script
usages	jedi/jedi/api/__init__.py	/^from jedi.api import usages$/;"	i
usages	jedi/jedi/api/usages.py	/^def usages(evaluator, definition_names, mods):$/;"	f
usages_add_import_modules	jedi/jedi/api/usages.py	/^def usages_add_import_modules(evaluator, definitions):$/;"	f
use_filesystem_cache	jedi/jedi/settings.py	/^use_filesystem_cache = True$/;"	v
use_metaclass	jedi/jedi/_compatibility.py	/^def use_metaclass(meta, *bases):$/;"	f
use_metaclass	jedi/jedi/api/classes.py	/^from jedi._compatibility import unicode, use_metaclass$/;"	i
use_metaclass	jedi/jedi/evaluate/iterable.py	/^from jedi._compatibility import use_metaclass, unicode, zip_longest$/;"	i
use_metaclass	jedi/jedi/evaluate/representation.py	/^from jedi._compatibility import use_metaclass, unicode, Python3Method, is_py3$/;"	i
use_metaclass	jedi/jedi/parser/fast.py	/^from jedi._compatibility import use_metaclass$/;"	i
used_memory	jedi/scripts/memory_check.py	/^def used_memory():$/;"	f
used_names	jedi/jedi/evaluate/compiled/__init__.py	/^    used_names = {}  # To be consistent with modules.$/;"	v	class:CompiledObject
used_names	jedi/jedi/parser/fast.py	/^    def used_names(self):$/;"	m	class:FastModule
used_names	jedi/jedi/parser/fast.py	/^    def used_names(self, value):$/;"	m	class:FastModule
usrign	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:usrign(item, type)$/;"	f
utf8_repr	jedi/jedi/_compatibility.py	/^def utf8_repr(func):$/;"	f
utf8_repr	jedi/jedi/parser/tree.py	/^from jedi._compatibility import (Python3Method, encoding, is_py3, utf8_repr,$/;"	i
utils	jedi/jedi/api/replstartup.py	/^import jedi.utils$/;"	i
utils	jedi/test/test_api/test_api.py	/^from jedi.parser import utils$/;"	i
utils	jedi/test/test_utils.py	/^from jedi import utils$/;"	i
vacantdict	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:vacantdict(dict)$/;"	f
val	jedi/test/test_evaluate/test_imports.py	/^      jedi.Script('import not_pkg; not_pkg.val', 1, 27).completions()) == 1$/;"	i
validfile	ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:validfile(fname, ftype)$/;"	f
value	jedi/test/test_evaluate/not_in_sys_path/not_in_sys_path.py	/^value = 3$/;"	v
value	jedi/test/test_evaluate/not_in_sys_path/not_in_sys_path_package/__init__.py	/^value = 'package'$/;"	v
value	jedi/test/test_evaluate/not_in_sys_path/not_in_sys_path_package/module.py	/^value = 'package.module'$/;"	v
values	jedi/jedi/evaluate/compiled/__init__.py	/^    def values(self):$/;"	m	class:LazyNamesDict
values	jedi/jedi/evaluate/jedi_typing.py	/^        def values(self):$/;"	m	class:factory.Mapping
values	jedi/jedi/evaluate/representation.py	/^    def values(self):$/;"	m	class:LazyInstanceDict
values	jedi/jedi/parser/fast.py	/^    def values(self):$/;"	m	class:MergedNamesDict
values	jedi/test/completion/classes.py	/^    def values(self):$/;"	m	class:TestClass
var_class	jedi/test/completion/classes.py	/^    var_class = TestClass(1)$/;"	v	class:TestClass
var_func	jedi/test/completion/classes.py	/^    def var_func(self):$/;"	m	class:TestClass
variable_middle	jedi/test/completion/functions.py	/^def variable_middle():$/;"	f
variable_rename	jedi/test/completion/functions.py	/^def variable_rename(param):$/;"	f
version	jedi/docs/conf.py	/^version = '.'.join(str(x) for x in version_info()[:2])$/;"	v
version	jedi/jedi/parser/utils.py	/^    version = 26$/;"	v	class:ParserPickling
version	jedi/setup.py	/^      version=jedi.__version__,$/;"	v
version	jedi/test/test_evaluate/init_extension_module/setup.py	/^      version='0.0',$/;"	v
version_info	jedi/docs/conf.py	/^from jedi.utils import version_info$/;"	i
version_info	jedi/jedi/utils.py	/^def version_info():$/;"	f
very	jedi/test/test_integration_import.py	/^@pytest.mark.skipif('True', reason='The nested import stuff is still very messy.')$/;"	i
vim	Conque-GDB/autoload/conque_term/conque.py	/^import vim$/;"	i
vim	Conque-GDB/autoload/conque_term/conque_globals.py	/^    import vim$/;"	i
vim	Conque-GDB/autoload/conque_term/conque_screen.py	/^import vim$/;"	i
vim	Conque-GDB/autoload/conque_term/conque_sole.py	/^import vim$/;"	i
vim_toggle_breakpoint	Conque-GDB/autoload/conque_gdb/conque_gdb.py	/^    def vim_toggle_breakpoint(self, filename, line):$/;"	m	class:ConqueGdb
waiting_for_bp	Conque-GDB/autoload/conque_gdb/conque_sole_gdb.py	/^    waiting_for_bp = -1$/;"	v	class:ConqueSoleGdb
walk	jedi/jedi/parser/tree.py	/^    def walk(self):$/;"	m	class:Scope
walker	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:walker(m, p, d)$/;"	f
warning	jedi/jedi/debug.py	/^def warning(message, *args, **kwargs):$/;"	f
warnings	jedi/conftest.py	/^        import warnings$/;"	i
warnings	jedi/jedi/api/__init__.py	/^import warnings$/;"	i
warnings	jedi/jedi/api/classes.py	/^import warnings$/;"	i
we_can_has_sequence	jedi/test/completion/pep0484_typing.py	/^def we_can_has_sequence(p, q, r, s, t, u):$/;"	f
weakref	jedi/test/completion/stdlib.py	/^import weakref$/;"	i
whatever	jedi/test/test_integration_import.py	/^    check('\\nfrom os import whatever', ['import'], len('from os im'))$/;"	i
whitespace	jedi/jedi/parser/tokenize.py	/^whitespace = r'[ \\f\\t]*'$/;"	v
window_bottom	Conque-GDB/autoload/conque_term/conque_sole.py	/^    window_bottom = None$/;"	v	class:ConqueSole
window_height	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    window_height = 40$/;"	v	class:ConqueSoleSubprocess
window_resize	Conque-GDB/autoload/conque_term/conque_sole_wrapper.py	/^    def window_resize(self, lines, columns):$/;"	m	class:ConqueSoleWrapper
window_resize	Conque-GDB/autoload/conque_term/conque_subprocess.py	/^    def window_resize(self, lines, columns):$/;"	m	class:ConqueSubprocess
window_top	Conque-GDB/autoload/conque_term/conque_sole.py	/^    window_top = None$/;"	v	class:ConqueSole
window_width	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    window_width = 160$/;"	v	class:ConqueSoleSubprocess
with_lambda	jedi/test/completion/lambdas.py	/^def with_lambda(callable_lambda, *args, **kwargs):$/;"	f
with_param	jedi/test/completion/lambdas.py	/^    def with_param(self):$/;"	m	class:C
with_param	jedi/test/completion/parser.py	/^    def with_param($/;"	m	class:IndentIssues
with_statement	jedi/setup.py	/^from __future__ import with_statement$/;"	i
with_statement	jedi/test/refactor.py	/^from __future__ import with_statement$/;"	i
wordcount	vim-airline/autoload/airline/extensions/wordcount/formatters/default.vim	/^function! s:wordcount()$/;"	f
working_columns	Conque-GDB/autoload/conque_term/conque.py	/^    working_columns = 80 # can be changed by CSI ? 3 l\/h$/;"	v	class:Conque
working_lines	Conque-GDB/autoload/conque_term/conque.py	/^    working_lines = 24 # can be changed by CSI r$/;"	v	class:Conque
wrap	jedi/jedi/evaluate/__init__.py	/^    def wrap(self, element):$/;"	m	class:Evaluator
wrap_accent	vim-airline/autoload/airline/section.vim	/^function! s:wrap_accent(part, value)$/;"	f
wrap_cursor	Conque-GDB/autoload/conque_term/conque.py	/^    wrap_cursor = False$/;"	v	class:Conque
wrapper	jedi/jedi/_compatibility.py	/^    def wrapper(self):$/;"	f	function:utf8_repr
wrapper	jedi/jedi/cache.py	/^        def wrapper(*args, **kwargs):$/;"	f	function:time_cache._temp
wrapper	jedi/jedi/cache.py	/^    def wrapper(self):$/;"	f	function:cache_star_import
wrapper	jedi/jedi/cache.py	/^    def wrapper(self, *args, **kwargs):$/;"	f	function:memoize_method
wrapper	jedi/jedi/common.py	/^    def wrapper(*args, **kwargs):$/;"	f	function:to_list
wrapper	jedi/jedi/common.py	/^    def wrapper(*args, **kwds):$/;"	f	function:reraise_uncaught
wrapper	jedi/jedi/debug.py	/^    def wrapper(*args, **kwargs):$/;"	f	function:increase_indent
wrapper	jedi/jedi/evaluate/cache.py	/^        def wrapper(obj, *args, **kwargs):$/;"	f	function:memoize_default.func
wrapper	jedi/jedi/evaluate/compiled/__init__.py	/^        def wrapper(evaluator, obj, parent=None, module=None):$/;"	f	function:compiled_objects_cache.decorator
wrapper	jedi/jedi/evaluate/iterable.py	/^    def wrapper(func):$/;"	f	function:register_builtin_method
wrapper	jedi/jedi/evaluate/stdlib.py	/^        def wrapper(evaluator, obj, arguments):$/;"	f	function:argument_clinic.f
wrapper	jedi/jedi/parser/utils.py	/^    def wrapper(self):$/;"	f	function:underscore_memoization
wrapper	jedi/test/completion/decorators.py	/^        def wrapper(*args):$/;"	f	function:memoize
wrapper	jedi/test/completion/decorators.py	/^    def wrapper(*args):$/;"	f	function:decorator
wrapper	jedi/test/completion/decorators.py	/^    def wrapper(*args, **kwargs):$/;"	f	function:dec
wrapper	jedi/test/completion/decorators.py	/^    def wrapper(s):$/;"	f	function:dec
wrapper	jedi/test/completion/dynamic_params.py	/^    def wrapper(*args):$/;"	f	function:tricky_decorator
wrapper	jedi/test/completion/dynamic_params.py	/^    def wrapper(*args, **kwargs):$/;"	f	function:def_func
wrapper	jedi/test/completion/functions.py	/^    def wrapper(*args, **kwargs):$/;"	f	function:memoize
wrapper	jedi/test/completion/stdlib.py	/^    def wrapper(*args, **kwds):$/;"	f	function:my_decorator
wrapper	jedi/test/helpers.py	/^        def wrapper(*args, **kwds):$/;"	f	function:cwd_at.decorator
wrapper	jedi/test/test_speed.py	/^            def wrapper(self):$/;"	f	function:TestSpeed._check_speed.decorated
wrapper2	jedi/test/completion/decorators.py	/^    def wrapper2(first_arg, *args2, **kwargs2):$/;"	f	function:dec2
wraps	jedi/test/completion/imports.py	/^from functools import (partial, wraps)$/;"	i
write	Conque-GDB/autoload/conque_term/conque.py	/^    def write(self, input, set_cursor=True, read=True):$/;"	m	class:Conque
write	Conque-GDB/autoload/conque_term/conque_sole_shared_memory.py	/^    def write(self, text, start=0):$/;"	m	class:ConqueSoleSharedMemory
write	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    def write(self):$/;"	m	class:ConqueSoleSubprocess
write	Conque-GDB/autoload/conque_term/conque_sole_wrapper.py	/^    def write(self, text):$/;"	m	class:ConqueSoleWrapper
write	Conque-GDB/autoload/conque_term/conque_subprocess.py	/^    def write(self, input):$/;"	m	class:ConqueSubprocess
write_buffered_ord	Conque-GDB/autoload/conque_term/conque.py	/^    def write_buffered_ord(self, chr):$/;"	m	class:Conque
write_expr	Conque-GDB/autoload/conque_term/conque.py	/^    def write_expr(self, expr, set_cursor=True, read=True):$/;"	m	class:Conque
write_latin1	Conque-GDB/autoload/conque_term/conque.py	/^    def write_latin1(self, input, set_cursor=True, read=True):$/;"	m	class:Conque
write_ord	Conque-GDB/autoload/conque_term/conque.py	/^    def write_ord(self, input, set_cursor=True, read=True):$/;"	m	class:Conque
write_plain	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    def write_plain(self, text):$/;"	m	class:ConqueSoleSubprocess
write_vk	Conque-GDB/autoload/conque_term/conque_sole.py	/^    def write_vk(self, vk_code):$/;"	m	class:ConqueSole
write_vk	Conque-GDB/autoload/conque_term/conque_sole_subprocess.py	/^    def write_vk(self, vk_code):$/;"	m	class:ConqueSoleSubprocess
write_vk	Conque-GDB/autoload/conque_term/conque_sole_wrapper.py	/^    def write_vk(self, vk_code):$/;"	m	class:ConqueSoleWrapper
writecache	ctrlp.vim/autoload/ctrlp.vim	/^fu! s:writecache(cafile)$/;"	f
writecache	ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:writecache(lines)$/;"	f
wrong_indents	jedi/test/completion/invalid.py	/^def wrong_indents():$/;"	f
wrong_name	jedi/test/static_analysis/keywords.py	/^def wrong_name():$/;"	f
ws_refresh	vim-airline/autoload/airline/extensions/whitespace.vim	/^function! s:ws_refresh()$/;"	f
wx_core	jedi/scripts/wx_check.py	/^wx_core = urllib2.urlopen(uri).read()$/;"	v
x	jedi/test/completion/completion.py	/^    def x(foo,$/;"	m	class:MyClass
x	jedi/test/completion/completion.py	/^def x():$/;"	f
x	jedi/test/completion/comprehensions.py	/^def x():$/;"	f
x	jedi/test/completion/decorators.py	/^    def x(self):$/;"	m	class:X
x	jedi/test/completion/definition.py	/^def x(): pass  # acts like EOF$/;"	f
x	jedi/test/completion/descriptors.py	/^    x = RevealAccess(10, 'var "x"')$/;"	v	class:C
x	jedi/test/completion/functions.py	/^    def x(self, a, b=1):$/;"	m	class:Something
x	jedi/test/completion/functions.py	/^x = asdf(a=1,$/;"	v
x	jedi/test/completion/goto.py	/^    x = 3$/;"	v	class:ClassVar
x	jedi/test/completion/goto.py	/^def x():$/;"	f
x	jedi/test/completion/lambdas.py	/^x = []$/;"	v
x	jedi/test/completion/ordering.py	/^    def x():$/;"	f	function:x
x	jedi/test/completion/ordering.py	/^def x():$/;"	f
x	jedi/test/completion/pep0484_comments.py	/^x = [$/;"	v
x	jedi/test/completion/pep0484_comments.py	/^x = []   # type: List[Employee]$/;"	v
x	jedi/test/completion/pep0484_typing.py	/^x = TestDict()$/;"	v
x	jedi/test/completion/precedence.py	/^x = 'upp' + 'e'$/;"	v
x	jedi/test/completion/precedence.py	/^x = [1, 'a', 1.0]$/;"	v
x	jedi/test/completion/stdlib.py	/^def x():$/;"	f
x	jedi/test/completion/types.py	/^x = [3]$/;"	v
x	jedi/test/completion/types.py	/^x = []$/;"	v
x	jedi/test/static_analysis/attribute_error.py	/^    x = undefined$/;"	v
x	jedi/test/static_analysis/branches.py	/^    x = ''$/;"	v
x	jedi/test/static_analysis/branches.py	/^    x = 1$/;"	v
x	jedi/test/static_analysis/iterable.py	/^x = [1]$/;"	v
x	jedi/test/test_api/test_api.py	/^    assert api.Script('import x', column=0).goto_definitions() == []$/;"	i
x	jedi/test/test_api/test_interpreter.py	/^        def x():$/;"	m	class:test_nested_resolve.XX
x_method	jedi/test/completion/usages.py	/^    def x_method(self):$/;"	m	class:TestClass
xargs	jedi/test/completion/functions.py	/^def xargs(*args):$/;"	f
xorz	jedi/test/completion/complex.py	/^xorz = getattr(asdfy()(), 'asdf')$/;"	v
xterm_to_rgb	Conque-GDB/autoload/conque_term/conque.py	/^    def xterm_to_rgb(self, color_code):$/;"	m	class:Conque
xy	jedi/test/completion/lambdas.py	/^def xy(param):$/;"	f
xyz	jedi/test/completion/basic.py	/^xyz = 'smörbröd.py'$/;"	v
y	jedi/test/completion/arrays.py	/^def y(a):$/;"	f
y	jedi/test/completion/comprehensions.py	/^y = 1.0$/;"	v
y	jedi/test/completion/decorators.py	/^    def y(self):$/;"	m	class:X
y	jedi/test/completion/descriptors.py	/^    y = 5.0$/;"	v	class:C
y	jedi/test/completion/goto.py	/^def y():$/;"	f
y	jedi/test/static_analysis/branches.py	/^    y = ''$/;"	v
y	jedi/test/static_analysis/branches.py	/^    y = 1$/;"	v
y	jedi/test/test_api/test_classes.py	/^        assert self._bool_is_definitions('from x import y') == [False, True]$/;"	i
y	jedi/test/test_api/test_classes.py	/^        assert self._bool_is_definitions('from x.z import y') == [False, False, True]$/;"	i
yield_from	jedi/test/completion/generators.py	/^def yield_from():$/;"	f
yield_from_multiple	jedi/test/completion/generators.py	/^def yield_from_multiple():$/;"	f
yielder	jedi/test/completion/stdlib.py	/^def yielder():$/;"	f
yields	jedi/jedi/evaluate/representation.py	/^    def yields(self):$/;"	m	class:FunctionExecution
yields	jedi/jedi/parser/tree.py	/^    def yields(self):$/;"	m	class:Function
yields	jedi/jedi/parser/tree.py	/^    def yields(self):$/;"	m	class:Lambda
z	jedi/test/completion/goto.py	/^def z():$/;"	f
z	jedi/test/completion/stdlib.py	/^z = zipfile.ZipFile("foo")$/;"	v
z	jedi/test/static_analysis/branches.py	/^    z = x + y$/;"	v
z	jedi/test/static_analysis/branches.py	/^z = x + y$/;"	v
zero_position_modifier	jedi/jedi/evaluate/compiled/__init__.py	/^from jedi.parser.tree import Param, Base, Operator, zero_position_modifier$/;"	i
zero_position_modifier	jedi/jedi/parser/tree.py	/^zero_position_modifier = PositionModifier()$/;"	v
zip_longest	jedi/jedi/_compatibility.py	/^    from itertools import izip_longest as zip_longest  # Python 2$/;"	i
zip_longest	jedi/jedi/_compatibility.py	/^    from itertools import zip_longest$/;"	i
zip_longest	jedi/jedi/evaluate/iterable.py	/^from jedi._compatibility import use_metaclass, unicode, zip_longest$/;"	i
zip_longest	jedi/jedi/evaluate/param.py	/^from jedi._compatibility import unicode, zip_longest$/;"	i
zipfile	jedi/test/completion/stdlib.py	/^import zipfile$/;"	i
